// Code generated by testifylint/internal/testgen. DO NOT EDIT.

package erroris

import (
	"errors"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestErrorIsChecker(t *testing.T) {
	var errSentinel = errors.New("user not found")
	var err error

	// Invalid.
	{
		assert.ErrorIs(t, err, errSentinel)                                  // want "error-is: invalid usage of assert\\.Error, use assert\\.ErrorIs instead"
		assert.ErrorIs(t, err, errSentinel, "msg")                           // want "error-is: invalid usage of assert\\.Error, use assert\\.ErrorIs instead"
		assert.ErrorIs(t, err, errSentinel, "msg with arg %d", 42)           // want "error-is: invalid usage of assert\\.Error, use assert\\.ErrorIs instead"
		assert.ErrorIs(t, err, errSentinel, "msg with args %d %s", 42, "42") // want "error-is: invalid usage of assert\\.Error, use assert\\.ErrorIs instead"

		assert.NotErrorIs(t, err, errSentinel)                                  // want "error-is: invalid usage of assert\\.NoError, use assert\\.NotErrorIs instead"
		assert.NotErrorIs(t, err, errSentinel, "msg")                           // want "error-is: invalid usage of assert\\.NoError, use assert\\.NotErrorIs instead"
		assert.NotErrorIs(t, err, errSentinel, "msg with arg %d", 42)           // want "error-is: invalid usage of assert\\.NoError, use assert\\.NotErrorIs instead"
		assert.NotErrorIs(t, err, errSentinel, "msg with args %d %s", 42, "42") // want "error-is: invalid usage of assert\\.NoError, use assert\\.NotErrorIs instead"

		assert.ErrorIs(t, err, errSentinel)                                      // want "error-is: use assert\\.ErrorIs"
		assert.ErrorIsf(t, err, errSentinel, "msg with args %d %s", 42, "42")    // want "error-is: use assert\\.ErrorIsf"
		assert.NotErrorIs(t, err, errSentinel)                                   // want "error-is: use assert\\.NotErrorIs"
		assert.NotErrorIsf(t, err, errSentinel, "msg with args %d %s", 42, "42") // want "error-is: use assert\\.NotErrorIsf"
	}

	// Valid.
	{
		assert.Error(t, err)
		assert.Error(t, err, "msg")
		assert.Error(t, err, "msg with arg %d", 42)
		assert.Error(t, err, "msg with args %d %s", 42, "42")
		assert.Errorf(t, err, "msg")
		assert.Errorf(t, err, "msg with arg %d", 42)
		assert.Errorf(t, err, "msg with args %d %s", 42, "42")

		assert.ErrorIs(t, err, errSentinel)
		assert.ErrorIs(t, err, errSentinel, "msg")
		assert.ErrorIs(t, err, errSentinel, "msg with arg %d", 42)
		assert.ErrorIs(t, err, errSentinel, "msg with args %d %s", 42, "42")
		assert.ErrorIsf(t, err, errSentinel, "msg")
		assert.ErrorIsf(t, err, errSentinel, "msg with arg %d", 42)
		assert.ErrorIsf(t, err, errSentinel, "msg with args %d %s", 42, "42")

		assert.NoError(t, err)
		assert.NoError(t, err, "msg")
		assert.NoError(t, err, "msg with arg %d", 42)
		assert.NoError(t, err, "msg with args %d %s", 42, "42")
		assert.NoErrorf(t, err, "msg")
		assert.NoErrorf(t, err, "msg with arg %d", 42)
		assert.NoErrorf(t, err, "msg with args %d %s", 42, "42")

		assert.NotErrorIs(t, err, errSentinel)
		assert.NotErrorIs(t, err, errSentinel, "msg")
		assert.NotErrorIs(t, err, errSentinel, "msg with arg %d", 42)
		assert.NotErrorIs(t, err, errSentinel, "msg with args %d %s", 42, "42")
		assert.NotErrorIsf(t, err, errSentinel, "msg")
		assert.NotErrorIsf(t, err, errSentinel, "msg with arg %d", 42)
		assert.NotErrorIsf(t, err, errSentinel, "msg with args %d %s", 42, "42")
	}
}
