// Code generated by testifylint/internal/testgen. DO NOT EDIT.

package compares

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestComparesChecker(t *testing.T) {
	var a, b int

	// Invalid.
	{
		assert.Equal(t, a, b)                                            // want "compares: use assert\\.Equal"
		assert.Equalf(t, a, b, "msg with args %d %s", 42, "42")          // want "compares: use assert\\.Equalf"
		assert.NotEqual(t, a, b)                                         // want "compares: use assert\\.NotEqual"
		assert.NotEqualf(t, a, b, "msg with args %d %s", 42, "42")       // want "compares: use assert\\.NotEqualf"
		assert.Greater(t, a, b)                                          // want "compares: use assert\\.Greater"
		assert.Greaterf(t, a, b, "msg with args %d %s", 42, "42")        // want "compares: use assert\\.Greaterf"
		assert.GreaterOrEqual(t, a, b)                                   // want "compares: use assert\\.GreaterOrEqual"
		assert.GreaterOrEqualf(t, a, b, "msg with args %d %s", 42, "42") // want "compares: use assert\\.GreaterOrEqualf"
		assert.Less(t, a, b)                                             // want "compares: use assert\\.Less"
		assert.Lessf(t, a, b, "msg with args %d %s", 42, "42")           // want "compares: use assert\\.Lessf"
		assert.LessOrEqual(t, a, b)                                      // want "compares: use assert\\.LessOrEqual"
		assert.LessOrEqualf(t, a, b, "msg with args %d %s", 42, "42")    // want "compares: use assert\\.LessOrEqualf"
		assert.NotEqual(t, a, b)                                         // want "compares: use assert\\.NotEqual"
		assert.NotEqualf(t, a, b, "msg with args %d %s", 42, "42")       // want "compares: use assert\\.NotEqualf"
		assert.Equal(t, a, b)                                            // want "compares: use assert\\.Equal"
		assert.Equalf(t, a, b, "msg with args %d %s", 42, "42")          // want "compares: use assert\\.Equalf"
		assert.LessOrEqual(t, a, b)                                      // want "compares: use assert\\.LessOrEqual"
		assert.LessOrEqualf(t, a, b, "msg with args %d %s", 42, "42")    // want "compares: use assert\\.LessOrEqualf"
		assert.Less(t, a, b)                                             // want "compares: use assert\\.Less"
		assert.Lessf(t, a, b, "msg with args %d %s", 42, "42")           // want "compares: use assert\\.Lessf"
		assert.GreaterOrEqual(t, a, b)                                   // want "compares: use assert\\.GreaterOrEqual"
		assert.GreaterOrEqualf(t, a, b, "msg with args %d %s", 42, "42") // want "compares: use assert\\.GreaterOrEqualf"
		assert.Greater(t, a, b)                                          // want "compares: use assert\\.Greater"
		assert.Greaterf(t, a, b, "msg with args %d %s", 42, "42")        // want "compares: use assert\\.Greaterf"
	}

	// Valid.
	{
		assert.Equal(t, a, b)
		assert.Equalf(t, a, b, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, a, b)
		assert.NotEqualf(t, a, b, "msg with args %d %s", 42, "42")
		assert.Greater(t, a, b)
		assert.Greaterf(t, a, b, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, a, b)
		assert.GreaterOrEqualf(t, a, b, "msg with args %d %s", 42, "42")
		assert.Less(t, a, b)
		assert.Lessf(t, a, b, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, a, b)
		assert.LessOrEqualf(t, a, b, "msg with args %d %s", 42, "42")
	}
}

func TestComparesChecker_Ignored(t *testing.T) {
	var a, b bool

	assert.True(t, a && b)
	assert.Truef(t, a && b, "msg with args %d %s", 42, "42")
	assert.False(t, b && a)
	assert.Falsef(t, b && a, "msg with args %d %s", 42, "42")
	assert.True(t, a || b)
	assert.Truef(t, a || b, "msg with args %d %s", 42, "42")
	assert.False(t, b || a)
	assert.Falsef(t, b || a, "msg with args %d %s", 42, "42")
}
