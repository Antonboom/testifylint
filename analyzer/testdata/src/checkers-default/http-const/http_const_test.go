// Code generated by testifylint/internal/testgen. DO NOT EDIT.
package httpconst

import (
	"fmt"
	"net/http"
	"net/url"
	"testing"

	"github.com/stretchr/testify/assert"
)

func httpOK(w http.ResponseWriter, r *http.Request) {
	w.WriteHeader(http.StatusOK)
}

func httpHelloName(w http.ResponseWriter, r *http.Request) {
	name := r.FormValue("name")
	_, _ = fmt.Fprintf(w, "Hello, %s!", name)
}

func TestHttpConstChecker(t *testing.T) {
	// Invalid.
	{
		assert.HTTPStatusCode(t, httpOK, "get", "/index", nil, 200)                                                                                     // want "http-const: use net/http constants instead of value"
		assert.HTTPStatusCodef(t, httpOK, "get", "/index", nil, 200, "msg with args %d %s", 42, "42")                                                   // want "http-const: use net/http constants instead of value"
		assert.HTTPStatusCode(t, httpOK, "Get", "/index", nil, 200)                                                                                     // want "http-const: use net/http constants instead of value"
		assert.HTTPStatusCodef(t, httpOK, "Get", "/index", nil, 200, "msg with args %d %s", 42, "42")                                                   // want "http-const: use net/http constants instead of value"
		assert.HTTPStatusCode(t, httpOK, "GET", "/index", nil, 200)                                                                                     // want "http-const: use net/http constants instead of value"
		assert.HTTPStatusCodef(t, httpOK, "GET", "/index", nil, 200, "msg with args %d %s", 42, "42")                                                   // want "http-const: use net/http constants instead of value"
		assert.HTTPBodyContains(t, httpHelloName, "GET", "/", url.Values{"name": []string{"World"}}, "Hello, World!")                                   // want "http-const: use net/http constants instead of value"
		assert.HTTPBodyContainsf(t, httpHelloName, "GET", "/", url.Values{"name": []string{"World"}}, "Hello, World!", "msg with args %d %s", 42, "42") // want "http-const: use net/http constants instead of value"
	}
	// Valid.
	{
		assert.HTTPStatusCode(t, httpOK, http.MethodGet, "/index", nil, http.StatusOK)
		assert.HTTPStatusCodef(t, httpOK, http.MethodGet, "/index", nil, http.StatusOK, "msg with args %d %s", 42, "42")
		assert.HTTPBodyContains(t, httpHelloName, http.MethodGet, "/", url.Values{"name": []string{"World"}}, "Hello, World!")
		assert.HTTPBodyContainsf(t, httpHelloName, http.MethodGet, "/", url.Values{"name": []string{"World"}}, "Hello, World!", "msg with args %d %s", 42, "42")
	}
	// Ignored.
	{
		assert.HTTPStatusCode(t, httpOK, "FOO", "/index", nil, 999)
		assert.HTTPStatusCodef(t, httpOK, "FOO", "/index", nil, 999, "msg with args %d %s", 42, "42")
		assert.HTTPBodyContains(t, httpHelloName, "FOO", "/", url.Values{"name": []string{"World"}}, "Hello, World!")
		assert.HTTPBodyContainsf(t, httpHelloName, "FOO", "/", url.Values{"name": []string{"World"}}, "Hello, World!", "msg with args %d %s", 42, "42")
	}
}
