// Code generated by testifylint/internal/testgen. DO NOT EDIT.

package empty

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestEmptyChecker(t *testing.T) {
	var (
		elems []any
		str   string
		b     []byte
	)

	// assert.Empty cases.
	{
		// Invalid.
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: use assert\\.Empty"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.Emptyf"
		assert.Empty(t, str)                                             // want "empty: use assert\\.Empty"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(str))                                     // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.Emptyf"
		assert.Empty(t, b)                                               // want "empty: use assert\\.Empty"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.Emptyf"
		assert.Empty(t, string(b))                                       // want "empty: use assert\\.Empty"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.Emptyf"
		assert.Empty(t, []string{"e"})                                   // want "empty: use assert\\.Empty"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.Emptyf"
		assert.Empty(t, elems)                                           // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Empty\\)"
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Emptyf\\)"
		assert.Empty(t, str)                                             // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Empty\\)"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Emptyf\\)"
		assert.Empty(t, string(str))                                     // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Empty\\)"
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Emptyf\\)"
		assert.Empty(t, b)                                               // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Empty\\)"
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Emptyf\\)"
		assert.Empty(t, string(b))                                       // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Empty\\)"
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Emptyf\\)"
		assert.Empty(t, []string{"e"})                                   // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Empty\\)"
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=Emptyf\\)"
		assert.Empty(t, str)                                             // want "empty: remove unnecessary string conversion%!\\(EXTRA string=assert, string=Empty\\)"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: remove unnecessary string conversion%!\\(EXTRA string=assert, string=Emptyf\\)"

		// Valid.
		assert.Empty(t, elems)
		assert.Emptyf(t, elems, "msg with args %d %s", 42, "42")
		assert.Empty(t, str)
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")
		assert.Empty(t, string(str))
		assert.Emptyf(t, string(str), "msg with args %d %s", 42, "42")
		assert.Empty(t, b)
		assert.Emptyf(t, b, "msg with args %d %s", 42, "42")
		assert.Empty(t, string(b))
		assert.Emptyf(t, string(b), "msg with args %d %s", 42, "42")
		assert.Empty(t, []string{"e"})
		assert.Emptyf(t, []string{"e"}, "msg with args %d %s", 42, "42")
	}

	// assert.NotEmpty cases.
	{
		// Invalid.
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, str)                                             // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(str))                                     // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, b)                                               // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, string(b))                                       // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: use assert\\.NotEmpty"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: use assert\\.NotEmptyf"
		assert.NotEmpty(t, elems)                                           // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmpty\\)"
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")         // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmptyf\\)"
		assert.NotEmpty(t, str)                                             // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmpty\\)"
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")           // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmptyf\\)"
		assert.NotEmpty(t, string(str))                                     // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmpty\\)"
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")   // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmptyf\\)"
		assert.NotEmpty(t, b)                                               // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmpty\\)"
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")             // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmptyf\\)"
		assert.NotEmpty(t, string(b))                                       // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmpty\\)"
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")     // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmptyf\\)"
		assert.NotEmpty(t, []string{"e"})                                   // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmpty\\)"
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42") // want "empty: remove unnecessary len%!\\(EXTRA string=assert, string=NotEmptyf\\)"
		assert.Empty(t, str)                                                // want "empty: remove unnecessary string conversion%!\\(EXTRA string=assert, string=Empty\\)"
		assert.Emptyf(t, str, "msg with args %d %s", 42, "42")              // want "empty: remove unnecessary string conversion%!\\(EXTRA string=assert, string=Emptyf\\)"

		// Valid.
		assert.NotEmpty(t, elems)
		assert.NotEmptyf(t, elems, "msg with args %d %s", 42, "42")
		assert.NotEmpty(t, str)
		assert.NotEmptyf(t, str, "msg with args %d %s", 42, "42")
		assert.NotEmpty(t, string(str))
		assert.NotEmptyf(t, string(str), "msg with args %d %s", 42, "42")
		assert.NotEmpty(t, b)
		assert.NotEmptyf(t, b, "msg with args %d %s", 42, "42")
		assert.NotEmpty(t, string(b))
		assert.NotEmptyf(t, string(b), "msg with args %d %s", 42, "42")
		assert.NotEmpty(t, []string{"e"})
		assert.NotEmptyf(t, []string{"e"}, "msg with args %d %s", 42, "42")
	}
}

func TestEmptyChecker_LenVarIndependence(t *testing.T) {
	var (
		elems  []any
		arr    [0]int
		arrPtr *[0]int
		sl     []int
		mp     map[int]int
		str    string
		b      []byte
		ch     chan int
	)

	assert.Empty(t, elems)         // want "empty: use assert\\.Empty"
	assert.Empty(t, arr)           // want "empty: use assert\\.Empty"
	assert.Empty(t, arrPtr)        // want "empty: use assert\\.Empty"
	assert.Empty(t, sl)            // want "empty: use assert\\.Empty"
	assert.Empty(t, mp)            // want "empty: use assert\\.Empty"
	assert.Empty(t, str)           // want "empty: use assert\\.Empty"
	assert.Empty(t, b)             // want "empty: use assert\\.Empty"
	assert.Empty(t, ch)            // want "empty: use assert\\.Empty"
	assert.Empty(t, []byte(str))   // want "empty: use assert\\.Empty"
	assert.Empty(t, string(str))   // want "empty: use assert\\.Empty"
	assert.Empty(t, []string{"e"}) // want "empty: use assert\\.Empty"
}

func TestEmptyChecker_Ignored(t *testing.T) {
	var (
		err    error
		arr    [0]int
		arrPtr *[0]int
		mp     map[int]int
		i      int
		ch     chan int
		elems  []any
		b      []byte
	)

	assert.Len(t, elems, len(elems))
	assert.Lenf(t, elems, len(elems), "msg with args %d %s", 42, "42")
	assert.Len(t, elems, 1)
	assert.Lenf(t, elems, 1, "msg with args %d %s", 42, "42")
	assert.Equal(t, len(elems), len(elems))
	assert.Equalf(t, len(elems), len(elems), "msg with args %d %s", 42, "42")
	assert.Equal(t, len(elems), 1)
	assert.Equalf(t, len(elems), 1, "msg with args %d %s", 42, "42")
	assert.Equal(t, 1, len(elems))
	assert.Equalf(t, 1, len(elems), "msg with args %d %s", 42, "42")
	assert.Equal(t, nil, elems)
	assert.Equalf(t, nil, elems, "msg with args %d %s", 42, "42")
	assert.Equal(t, nil, b)
	assert.Equalf(t, nil, b, "msg with args %d %s", 42, "42")
	assert.Equal(t, []byte(nil), b)
	assert.Equalf(t, []byte(nil), b, "msg with args %d %s", 42, "42")
	assert.NotEqual(t, len(elems), len(elems))
	assert.NotEqualf(t, len(elems), len(elems), "msg with args %d %s", 42, "42")
	assert.NotEqual(t, len(elems), 1)
	assert.NotEqualf(t, len(elems), 1, "msg with args %d %s", 42, "42")
	assert.NotEqual(t, 1, len(elems))
	assert.NotEqualf(t, 1, len(elems), "msg with args %d %s", 42, "42")
	assert.Greater(t, len(elems), len(elems))
	assert.Greaterf(t, len(elems), len(elems), "msg with args %d %s", 42, "42")
	assert.Greater(t, len(elems), 2)
	assert.Greaterf(t, len(elems), 2, "msg with args %d %s", 42, "42")
	assert.Greater(t, 2, len(elems))
	assert.Greaterf(t, 2, len(elems), "msg with args %d %s", 42, "42")
	assert.GreaterOrEqual(t, len(elems), len(elems))
	assert.GreaterOrEqualf(t, len(elems), len(elems), "msg with args %d %s", 42, "42")
	assert.GreaterOrEqual(t, len(elems), 0)
	assert.GreaterOrEqualf(t, len(elems), 0, "msg with args %d %s", 42, "42")
	assert.GreaterOrEqual(t, len(elems), 2)
	assert.GreaterOrEqualf(t, len(elems), 2, "msg with args %d %s", 42, "42")
	assert.GreaterOrEqual(t, 2, len(elems))
	assert.GreaterOrEqualf(t, 2, len(elems), "msg with args %d %s", 42, "42")
	assert.Less(t, len(elems), len(elems))
	assert.Lessf(t, len(elems), len(elems), "msg with args %d %s", 42, "42")
	assert.Less(t, len(elems), 2)
	assert.Lessf(t, len(elems), 2, "msg with args %d %s", 42, "42")
	assert.Less(t, 2, len(elems))
	assert.Lessf(t, 2, len(elems), "msg with args %d %s", 42, "42")
	assert.LessOrEqual(t, len(elems), len(elems))
	assert.LessOrEqualf(t, len(elems), len(elems), "msg with args %d %s", 42, "42")
	assert.LessOrEqual(t, 0, len(elems))
	assert.LessOrEqualf(t, 0, len(elems), "msg with args %d %s", 42, "42")
	assert.LessOrEqual(t, len(elems), 2)
	assert.LessOrEqualf(t, len(elems), 2, "msg with args %d %s", 42, "42")
	assert.LessOrEqual(t, 2, len(elems))
	assert.LessOrEqualf(t, 2, len(elems), "msg with args %d %s", 42, "42")
	assert.Equal(t, 0, i)
	assert.Equalf(t, 0, i, "msg with args %d %s", 42, "42")
	assert.NotEqual(t, 0, i)
	assert.NotEqualf(t, 0, i, "msg with args %d %s", 42, "42")
	assert.Empty(t, err)
	assert.Emptyf(t, err, "msg with args %d %s", 42, "42")
	assert.Zero(t, arr)
	assert.Zerof(t, arr, "msg with args %d %s", 42, "42")
	assert.Zero(t, arrPtr)
	assert.Zerof(t, arrPtr, "msg with args %d %s", 42, "42")
	assert.Zero(t, mp)
	assert.Zerof(t, mp, "msg with args %d %s", 42, "42")
	assert.Zero(t, i)
	assert.Zerof(t, i, "msg with args %d %s", 42, "42")
	assert.Zero(t, ch)
	assert.Zerof(t, ch, "msg with args %d %s", 42, "42")
	assert.Greater(t, len(elems), 1)
	assert.Greaterf(t, len(elems), 1, "msg with args %d %s", 42, "42")
	assert.Less(t, 1, len(elems))
	assert.Lessf(t, 1, len(elems), "msg with args %d %s", 42, "42")
	assert.GreaterOrEqual(t, len(elems), 1)
	assert.GreaterOrEqualf(t, len(elems), 1, "msg with args %d %s", 42, "42")
	assert.LessOrEqual(t, 1, len(elems))
	assert.LessOrEqualf(t, 1, len(elems), "msg with args %d %s", 42, "42")
}
