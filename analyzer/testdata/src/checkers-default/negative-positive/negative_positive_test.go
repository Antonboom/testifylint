// Code generated by testifylint/internal/testgen. DO NOT EDIT.

package negativepositive

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestNegativePositiveChecker(t *testing.T) {
	var (
		a       int
		int8A   int8
		int16A  int16
		int32A  int32
		int64A  int64
		uintA   uint
		uint8A  uint8
		uint16A uint16
		uint32A uint32
		uint64A uint64
	)

	// Invalid.
	{
		assert.False(t, 0 <= a)                                                 // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, 0 <= a, "msg with args %d %s", 42, "42")               // want "negative-positive: use assert\\.Negativef"
		assert.False(t, 0 >= a)                                                 // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, 0 >= a, "msg with args %d %s", 42, "42")               // want "negative-positive: use assert\\.Positivef"
		assert.False(t, a <= 0)                                                 // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, a <= 0, "msg with args %d %s", 42, "42")               // want "negative-positive: use assert\\.Positivef"
		assert.False(t, a <= int(0))                                            // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, a <= int(0), "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Positivef"
		assert.False(t, a >= 0)                                                 // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, a >= 0, "msg with args %d %s", 42, "42")               // want "negative-positive: use assert\\.Negativef"
		assert.False(t, a >= int(0))                                            // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, a >= int(0), "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int(0) <= a)                                            // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int(0) <= a, "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int(0) >= a)                                            // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int(0) >= a, "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int16(0) <= int16A)                                     // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int16(0) <= int16A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int16(0) >= int16A)                                     // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int16(0) >= int16A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int16A <= int16(0))                                     // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int16A <= int16(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int16A >= int16(0))                                     // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int16A >= int16(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int32(0) <= int32A)                                     // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int32(0) <= int32A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int32(0) >= int32A)                                     // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int32(0) >= int32A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int32A <= int32(0))                                     // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int32A <= int32(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int32A >= int32(0))                                     // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int32A >= int32(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int64(0) <= int64A)                                     // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int64(0) <= int64A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int64(0) >= int64A)                                     // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int64(0) >= int64A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int64A <= int64(0))                                     // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int64A <= int64(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int64A >= int64(0))                                     // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int64A >= int64(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int8(0) <= int8A)                                       // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int8(0) <= int8A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.False(t, int8(0) >= int8A)                                       // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int8(0) >= int8A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int8A <= int8(0))                                       // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, int8A <= int8(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.False(t, int8A >= int8(0))                                       // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, int8A >= int8(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint(0) <= uintA)                                       // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint(0) <= uintA, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint(0) >= uintA)                                       // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint(0) >= uintA, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint16(0) <= uint16A)                                   // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint16(0) <= uint16A, "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint16(0) >= uint16A)                                   // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint16(0) >= uint16A, "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint16A <= uint16(0))                                   // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint16A <= uint16(0), "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint16A >= uint16(0))                                   // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint16A >= uint16(0), "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint32(0) <= uint32A)                                   // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint32(0) <= uint32A, "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint32(0) >= uint32A)                                   // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint32(0) >= uint32A, "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint32A <= uint32(0))                                   // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint32A <= uint32(0), "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint32A >= uint32(0))                                   // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint32A >= uint32(0), "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint64(0) <= uint64A)                                   // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint64(0) <= uint64A, "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint64(0) >= uint64A)                                   // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint64(0) >= uint64A, "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint64A <= uint64(0))                                   // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint64A <= uint64(0), "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint64A >= uint64(0))                                   // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint64A >= uint64(0), "msg with args %d %s", 42, "42") // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint8(0) <= uint8A)                                     // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint8(0) <= uint8A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uint8(0) >= uint8A)                                     // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint8(0) >= uint8A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint8A <= uint8(0))                                     // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uint8A <= uint8(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uint8A >= uint8(0))                                     // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uint8A >= uint8(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.False(t, uintA <= uint(0))                                       // want "negative-positive: use assert\\.Positive"
		assert.Falsef(t, uintA <= uint(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.False(t, uintA >= uint(0))                                       // want "negative-positive: use assert\\.Negative"
		assert.Falsef(t, uintA >= uint(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, 0, a)                                                 // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, 0, a, "msg with args %d %s", 42, "42")               // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, a, 0)                                                 // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, 0, "msg with args %d %s", 42, "42")               // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, int(0))                                            // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, int(0), "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, int16(0))                                          // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, int16(0), "msg with args %d %s", 42, "42")        // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, int32(0))                                          // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, int32(0), "msg with args %d %s", 42, "42")        // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, int64(0))                                          // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, int64(0), "msg with args %d %s", 42, "42")        // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, int8(0))                                           // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, int8(0), "msg with args %d %s", 42, "42")         // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, uint(0))                                           // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, uint(0), "msg with args %d %s", 42, "42")         // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, uint16(0))                                         // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, uint16(0), "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, uint32(0))                                         // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, uint32(0), "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, uint64(0))                                         // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, uint64(0), "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, a, uint8(0))                                          // want "negative-positive: use assert\\.Positive"
		assert.Greaterf(t, a, uint8(0), "msg with args %d %s", 42, "42")        // want "negative-positive: use assert\\.Positivef"
		assert.Greater(t, int(0), a)                                            // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, int(0), a, "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, int16(0), a)                                          // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, int16(0), a, "msg with args %d %s", 42, "42")        // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, int32(0), a)                                          // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, int32(0), a, "msg with args %d %s", 42, "42")        // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, int64(0), a)                                          // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, int64(0), a, "msg with args %d %s", 42, "42")        // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, int8(0), a)                                           // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, int8(0), a, "msg with args %d %s", 42, "42")         // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, uint(0), a)                                           // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, uint(0), a, "msg with args %d %s", 42, "42")         // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, uint16(0), a)                                         // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, uint16(0), a, "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, uint32(0), a)                                         // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, uint32(0), a, "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, uint64(0), a)                                         // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, uint64(0), a, "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Negativef"
		assert.Greater(t, uint8(0), a)                                          // want "negative-positive: use assert\\.Negative"
		assert.Greaterf(t, uint8(0), a, "msg with args %d %s", 42, "42")        // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, 0, a)                                                    // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, 0, a, "msg with args %d %s", 42, "42")                  // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, a, 0)                                                    // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, 0, "msg with args %d %s", 42, "42")                  // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, int(0))                                               // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, int(0), "msg with args %d %s", 42, "42")             // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, int16(0))                                             // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, int16(0), "msg with args %d %s", 42, "42")           // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, int32(0))                                             // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, int32(0), "msg with args %d %s", 42, "42")           // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, int64(0))                                             // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, int64(0), "msg with args %d %s", 42, "42")           // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, int8(0))                                              // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, int8(0), "msg with args %d %s", 42, "42")            // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, uint(0))                                              // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, uint(0), "msg with args %d %s", 42, "42")            // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, uint16(0))                                            // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, uint16(0), "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, uint32(0))                                            // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, uint32(0), "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, uint64(0))                                            // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, uint64(0), "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, a, uint8(0))                                             // want "negative-positive: use assert\\.Negative"
		assert.Lessf(t, a, uint8(0), "msg with args %d %s", 42, "42")           // want "negative-positive: use assert\\.Negativef"
		assert.Less(t, int(0), a)                                               // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, int(0), a, "msg with args %d %s", 42, "42")             // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, int16(0), a)                                             // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, int16(0), a, "msg with args %d %s", 42, "42")           // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, int32(0), a)                                             // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, int32(0), a, "msg with args %d %s", 42, "42")           // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, int64(0), a)                                             // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, int64(0), a, "msg with args %d %s", 42, "42")           // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, int8(0), a)                                              // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, int8(0), a, "msg with args %d %s", 42, "42")            // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, uint(0), a)                                              // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, uint(0), a, "msg with args %d %s", 42, "42")            // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, uint16(0), a)                                            // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, uint16(0), a, "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, uint32(0), a)                                            // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, uint32(0), a, "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, uint64(0), a)                                            // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, uint64(0), a, "msg with args %d %s", 42, "42")          // want "negative-positive: use assert\\.Positivef"
		assert.Less(t, uint8(0), a)                                             // want "negative-positive: use assert\\.Positive"
		assert.Lessf(t, uint8(0), a, "msg with args %d %s", 42, "42")           // want "negative-positive: use assert\\.Positivef"
		assert.True(t, 0 < a)                                                   // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, 0 < a, "msg with args %d %s", 42, "42")                 // want "negative-positive: use assert\\.Positivef"
		assert.True(t, 0 > a)                                                   // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, 0 > a, "msg with args %d %s", 42, "42")                 // want "negative-positive: use assert\\.Negativef"
		assert.True(t, a < 0)                                                   // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, a < 0, "msg with args %d %s", 42, "42")                 // want "negative-positive: use assert\\.Negativef"
		assert.True(t, a < int(0))                                              // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, a < int(0), "msg with args %d %s", 42, "42")            // want "negative-positive: use assert\\.Negativef"
		assert.True(t, a > 0)                                                   // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, a > 0, "msg with args %d %s", 42, "42")                 // want "negative-positive: use assert\\.Positivef"
		assert.True(t, a > int(0))                                              // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, a > int(0), "msg with args %d %s", 42, "42")            // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int(0) < a)                                              // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int(0) < a, "msg with args %d %s", 42, "42")            // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int(0) > a)                                              // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int(0) > a, "msg with args %d %s", 42, "42")            // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int16(0) < int16A)                                       // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int16(0) < int16A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int16(0) > int16A)                                       // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int16(0) > int16A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int16A < int16(0))                                       // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int16A < int16(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int16A > int16(0))                                       // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int16A > int16(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int32(0) < int32A)                                       // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int32(0) < int32A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int32(0) > int32A)                                       // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int32(0) > int32A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int32A < int32(0))                                       // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int32A < int32(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int32A > int32(0))                                       // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int32A > int32(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int64(0) < int64A)                                       // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int64(0) < int64A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int64(0) > int64A)                                       // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int64(0) > int64A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int64A < int64(0))                                       // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int64A < int64(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int64A > int64(0))                                       // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int64A > int64(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int8(0) < int8A)                                         // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int8(0) < int8A, "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Positivef"
		assert.True(t, int8(0) > int8A)                                         // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int8(0) > int8A, "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int8A < int8(0))                                         // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, int8A < int8(0), "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Negativef"
		assert.True(t, int8A > int8(0))                                         // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, int8A > int8(0), "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint(0) < uintA)                                         // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint(0) < uintA, "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint(0) > uintA)                                         // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint(0) > uintA, "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint16(0) < uint16A)                                     // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint16(0) < uint16A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint16(0) > uint16A)                                     // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint16(0) > uint16A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint16A < uint16(0))                                     // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint16A < uint16(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint16A > uint16(0))                                     // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint16A > uint16(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint32(0) < uint32A)                                     // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint32(0) < uint32A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint32(0) > uint32A)                                     // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint32(0) > uint32A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint32A < uint32(0))                                     // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint32A < uint32(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint32A > uint32(0))                                     // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint32A > uint32(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint64(0) < uint64A)                                     // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint64(0) < uint64A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint64(0) > uint64A)                                     // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint64(0) > uint64A, "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint64A < uint64(0))                                     // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint64A < uint64(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint64A > uint64(0))                                     // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint64A > uint64(0), "msg with args %d %s", 42, "42")   // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint8(0) < uint8A)                                       // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint8(0) < uint8A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uint8(0) > uint8A)                                       // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint8(0) > uint8A, "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint8A < uint8(0))                                       // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uint8A < uint8(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uint8A > uint8(0))                                       // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uint8A > uint8(0), "msg with args %d %s", 42, "42")     // want "negative-positive: use assert\\.Positivef"
		assert.True(t, uintA < uint(0))                                         // want "negative-positive: use assert\\.Negative"
		assert.Truef(t, uintA < uint(0), "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Negativef"
		assert.True(t, uintA > uint(0))                                         // want "negative-positive: use assert\\.Positive"
		assert.Truef(t, uintA > uint(0), "msg with args %d %s", 42, "42")       // want "negative-positive: use assert\\.Positivef"
	}

	// Valid.
	{
		assert.Negative(t, a)
		assert.Negativef(t, a, "msg with args %d %s", 42, "42")
		assert.Positive(t, a)
		assert.Positivef(t, a, "msg with args %d %s", 42, "42")
	}

	// Ignored.
	{
		assert.Equal(t, -1, a)
		assert.Equalf(t, -1, a, "msg with args %d %s", 42, "42")
		assert.Equal(t, a, -1)
		assert.Equalf(t, a, -1, "msg with args %d %s", 42, "42")
		assert.Equal(t, 0, a)
		assert.Equalf(t, 0, a, "msg with args %d %s", 42, "42")
		assert.Equal(t, a, 0)
		assert.Equalf(t, a, 0, "msg with args %d %s", 42, "42")
		assert.Equal(t, 1, a)
		assert.Equalf(t, 1, a, "msg with args %d %s", 42, "42")
		assert.Equal(t, a, 1)
		assert.Equalf(t, a, 1, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, -1, a)
		assert.NotEqualf(t, -1, a, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, a, -1)
		assert.NotEqualf(t, a, -1, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, 0, a)
		assert.NotEqualf(t, 0, a, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, a, 0)
		assert.NotEqualf(t, a, 0, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, 1, a)
		assert.NotEqualf(t, 1, a, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, a, 1)
		assert.NotEqualf(t, a, 1, "msg with args %d %s", 42, "42")
		assert.Greater(t, -1, a)
		assert.Greaterf(t, -1, a, "msg with args %d %s", 42, "42")
		assert.Greater(t, a, -1)
		assert.Greaterf(t, a, -1, "msg with args %d %s", 42, "42")
		assert.Greater(t, a, 1)
		assert.Greaterf(t, a, 1, "msg with args %d %s", 42, "42")
		assert.Greater(t, 1, a)
		assert.Greaterf(t, 1, a, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, -1, a)
		assert.GreaterOrEqualf(t, -1, a, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, a, -1)
		assert.GreaterOrEqualf(t, a, -1, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, 0, a)
		assert.GreaterOrEqualf(t, 0, a, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, a, 0)
		assert.GreaterOrEqualf(t, a, 0, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, 1, a)
		assert.GreaterOrEqualf(t, 1, a, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, a, 1)
		assert.GreaterOrEqualf(t, a, 1, "msg with args %d %s", 42, "42")
		assert.Less(t, -1, a)
		assert.Lessf(t, -1, a, "msg with args %d %s", 42, "42")
		assert.Less(t, a, -1)
		assert.Lessf(t, a, -1, "msg with args %d %s", 42, "42")
		assert.Less(t, 1, a)
		assert.Lessf(t, 1, a, "msg with args %d %s", 42, "42")
		assert.Less(t, a, 1)
		assert.Lessf(t, a, 1, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, -1, a)
		assert.LessOrEqualf(t, -1, a, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, a, -1)
		assert.LessOrEqualf(t, a, -1, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, 0, a)
		assert.LessOrEqualf(t, 0, a, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, a, 0)
		assert.LessOrEqualf(t, a, 0, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, 1, a)
		assert.LessOrEqualf(t, 1, a, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, a, 1)
		assert.LessOrEqualf(t, a, 1, "msg with args %d %s", 42, "42")
		assert.True(t, a > -1)
		assert.Truef(t, a > -1, "msg with args %d %s", 42, "42")
		assert.True(t, a < -1)
		assert.Truef(t, a < -1, "msg with args %d %s", 42, "42")
		assert.True(t, a >= -1)
		assert.Truef(t, a >= -1, "msg with args %d %s", 42, "42")
		assert.True(t, a <= -1)
		assert.Truef(t, a <= -1, "msg with args %d %s", 42, "42")
		assert.True(t, a == -1)
		assert.Truef(t, a == -1, "msg with args %d %s", 42, "42")
		assert.True(t, a != -1)
		assert.Truef(t, a != -1, "msg with args %d %s", 42, "42")
		assert.True(t, -1 > a)
		assert.Truef(t, -1 > a, "msg with args %d %s", 42, "42")
		assert.True(t, -1 < a)
		assert.Truef(t, -1 < a, "msg with args %d %s", 42, "42")
		assert.True(t, -1 >= a)
		assert.Truef(t, -1 >= a, "msg with args %d %s", 42, "42")
		assert.True(t, -1 <= a)
		assert.Truef(t, -1 <= a, "msg with args %d %s", 42, "42")
		assert.True(t, -1 == a)
		assert.Truef(t, -1 == a, "msg with args %d %s", 42, "42")
		assert.True(t, -1 != a)
		assert.Truef(t, -1 != a, "msg with args %d %s", 42, "42")
		assert.True(t, a >= 0)
		assert.Truef(t, a >= 0, "msg with args %d %s", 42, "42")
		assert.True(t, a <= 0)
		assert.Truef(t, a <= 0, "msg with args %d %s", 42, "42")
		assert.True(t, a == 0)
		assert.Truef(t, a == 0, "msg with args %d %s", 42, "42")
		assert.True(t, a != 0)
		assert.Truef(t, a != 0, "msg with args %d %s", 42, "42")
		assert.True(t, 0 >= a)
		assert.Truef(t, 0 >= a, "msg with args %d %s", 42, "42")
		assert.True(t, 0 <= a)
		assert.Truef(t, 0 <= a, "msg with args %d %s", 42, "42")
		assert.True(t, 0 == a)
		assert.Truef(t, 0 == a, "msg with args %d %s", 42, "42")
		assert.True(t, 0 != a)
		assert.Truef(t, 0 != a, "msg with args %d %s", 42, "42")
		assert.True(t, a > 1)
		assert.Truef(t, a > 1, "msg with args %d %s", 42, "42")
		assert.True(t, a < 1)
		assert.Truef(t, a < 1, "msg with args %d %s", 42, "42")
		assert.True(t, a >= 1)
		assert.Truef(t, a >= 1, "msg with args %d %s", 42, "42")
		assert.True(t, a <= 1)
		assert.Truef(t, a <= 1, "msg with args %d %s", 42, "42")
		assert.True(t, a == 1)
		assert.Truef(t, a == 1, "msg with args %d %s", 42, "42")
		assert.True(t, a != 1)
		assert.Truef(t, a != 1, "msg with args %d %s", 42, "42")
		assert.True(t, 1 > a)
		assert.Truef(t, 1 > a, "msg with args %d %s", 42, "42")
		assert.True(t, 1 < a)
		assert.Truef(t, 1 < a, "msg with args %d %s", 42, "42")
		assert.True(t, 1 >= a)
		assert.Truef(t, 1 >= a, "msg with args %d %s", 42, "42")
		assert.True(t, 1 <= a)
		assert.Truef(t, 1 <= a, "msg with args %d %s", 42, "42")
		assert.True(t, 1 == a)
		assert.Truef(t, 1 == a, "msg with args %d %s", 42, "42")
		assert.True(t, 1 != a)
		assert.Truef(t, 1 != a, "msg with args %d %s", 42, "42")
		assert.False(t, a > -1)
		assert.Falsef(t, a > -1, "msg with args %d %s", 42, "42")
		assert.False(t, a < -1)
		assert.Falsef(t, a < -1, "msg with args %d %s", 42, "42")
		assert.False(t, a >= -1)
		assert.Falsef(t, a >= -1, "msg with args %d %s", 42, "42")
		assert.False(t, a <= -1)
		assert.Falsef(t, a <= -1, "msg with args %d %s", 42, "42")
		assert.False(t, a == -1)
		assert.Falsef(t, a == -1, "msg with args %d %s", 42, "42")
		assert.False(t, a != -1)
		assert.Falsef(t, a != -1, "msg with args %d %s", 42, "42")
		assert.False(t, -1 > a)
		assert.Falsef(t, -1 > a, "msg with args %d %s", 42, "42")
		assert.False(t, -1 < a)
		assert.Falsef(t, -1 < a, "msg with args %d %s", 42, "42")
		assert.False(t, -1 >= a)
		assert.Falsef(t, -1 >= a, "msg with args %d %s", 42, "42")
		assert.False(t, -1 <= a)
		assert.Falsef(t, -1 <= a, "msg with args %d %s", 42, "42")
		assert.False(t, -1 == a)
		assert.Falsef(t, -1 == a, "msg with args %d %s", 42, "42")
		assert.False(t, -1 != a)
		assert.Falsef(t, -1 != a, "msg with args %d %s", 42, "42")
		assert.False(t, a > 0)
		assert.Falsef(t, a > 0, "msg with args %d %s", 42, "42")
		assert.False(t, a < 0)
		assert.Falsef(t, a < 0, "msg with args %d %s", 42, "42")
		assert.False(t, a == 0)
		assert.Falsef(t, a == 0, "msg with args %d %s", 42, "42")
		assert.False(t, a != 0)
		assert.Falsef(t, a != 0, "msg with args %d %s", 42, "42")
		assert.False(t, 0 > a)
		assert.Falsef(t, 0 > a, "msg with args %d %s", 42, "42")
		assert.False(t, 0 < a)
		assert.Falsef(t, 0 < a, "msg with args %d %s", 42, "42")
		assert.False(t, 0 == a)
		assert.Falsef(t, 0 == a, "msg with args %d %s", 42, "42")
		assert.False(t, 0 != a)
		assert.Falsef(t, 0 != a, "msg with args %d %s", 42, "42")
		assert.False(t, a > 1)
		assert.Falsef(t, a > 1, "msg with args %d %s", 42, "42")
		assert.False(t, a < 1)
		assert.Falsef(t, a < 1, "msg with args %d %s", 42, "42")
		assert.False(t, a >= 1)
		assert.Falsef(t, a >= 1, "msg with args %d %s", 42, "42")
		assert.False(t, a <= 1)
		assert.Falsef(t, a <= 1, "msg with args %d %s", 42, "42")
		assert.False(t, a == 1)
		assert.Falsef(t, a == 1, "msg with args %d %s", 42, "42")
		assert.False(t, a != 1)
		assert.Falsef(t, a != 1, "msg with args %d %s", 42, "42")
		assert.False(t, 1 > a)
		assert.Falsef(t, 1 > a, "msg with args %d %s", 42, "42")
		assert.False(t, 1 < a)
		assert.Falsef(t, 1 < a, "msg with args %d %s", 42, "42")
		assert.False(t, 1 >= a)
		assert.Falsef(t, 1 >= a, "msg with args %d %s", 42, "42")
		assert.False(t, 1 <= a)
		assert.Falsef(t, 1 <= a, "msg with args %d %s", 42, "42")
		assert.False(t, 1 == a)
		assert.Falsef(t, 1 == a, "msg with args %d %s", 42, "42")
		assert.False(t, 1 != a)
		assert.Falsef(t, 1 != a, "msg with args %d %s", 42, "42")
		assert.Equal(t, 0, 0)
		assert.Equalf(t, 0, 0, "msg with args %d %s", 42, "42")
		assert.Equal(t, a, a)
		assert.Equalf(t, a, a, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, 0, 0)
		assert.NotEqualf(t, 0, 0, "msg with args %d %s", 42, "42")
		assert.NotEqual(t, a, a)
		assert.NotEqualf(t, a, a, "msg with args %d %s", 42, "42")
		assert.Greater(t, 0, 0)
		assert.Greaterf(t, 0, 0, "msg with args %d %s", 42, "42")
		assert.Greater(t, a, a)
		assert.Greaterf(t, a, a, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, 0, 0)
		assert.GreaterOrEqualf(t, 0, 0, "msg with args %d %s", 42, "42")
		assert.GreaterOrEqual(t, a, a)
		assert.GreaterOrEqualf(t, a, a, "msg with args %d %s", 42, "42")
		assert.Less(t, 0, 0)
		assert.Lessf(t, 0, 0, "msg with args %d %s", 42, "42")
		assert.Less(t, a, a)
		assert.Lessf(t, a, a, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, 0, 0)
		assert.LessOrEqualf(t, 0, 0, "msg with args %d %s", 42, "42")
		assert.LessOrEqual(t, a, a)
		assert.LessOrEqualf(t, a, a, "msg with args %d %s", 42, "42")
		assert.True(t, a > a)
		assert.Truef(t, a > a, "msg with args %d %s", 42, "42")
		assert.True(t, a < a)
		assert.Truef(t, a < a, "msg with args %d %s", 42, "42")
		assert.True(t, a >= a)
		assert.Truef(t, a >= a, "msg with args %d %s", 42, "42")
		assert.True(t, a <= a)
		assert.Truef(t, a <= a, "msg with args %d %s", 42, "42")
		assert.True(t, a == a)
		assert.Truef(t, a == a, "msg with args %d %s", 42, "42")
		assert.True(t, a != a)
		assert.Truef(t, a != a, "msg with args %d %s", 42, "42")
		assert.False(t, -1 > -1)
		assert.Falsef(t, -1 > -1, "msg with args %d %s", 42, "42")
		assert.False(t, -1 < -1)
		assert.Falsef(t, -1 < -1, "msg with args %d %s", 42, "42")
		assert.False(t, -1 >= -1)
		assert.Falsef(t, -1 >= -1, "msg with args %d %s", 42, "42")
		assert.False(t, -1 <= -1)
		assert.Falsef(t, -1 <= -1, "msg with args %d %s", 42, "42")
		assert.False(t, -1 == -1)
		assert.Falsef(t, -1 == -1, "msg with args %d %s", 42, "42")
		assert.False(t, -1 != -1)
		assert.Falsef(t, -1 != -1, "msg with args %d %s", 42, "42")
	}
}
