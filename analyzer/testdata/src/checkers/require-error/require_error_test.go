// Code generated by testifylint/internal/cmd/testgen. DO NOT EDIT.

package requireerror

import (
	"io"
	"os"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"github.com/stretchr/testify/suite"
)

func TestRequireError(t *testing.T) {
	var err error

	assObj, reqObj := assert.New(t), require.New(t)

	// Asserts.

	{
		assert.Error(t, err)                         // want "require-error: for error assertions use the `require` package"
		assert.Error(t, err, "msg")                  // want "require-error: for error assertions use the `require` package"
		assert.Error(t, err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assert.Errorf(t, err, "msg")                 // want "require-error: for error assertions use the `require` package"
		assert.Errorf(t, err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assert.ErrorIs(t, err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		assert.ErrorIs(t, err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		assert.ErrorIs(t, err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assert.ErrorIsf(t, err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		assert.ErrorIsf(t, err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assert.ErrorAs(t, err, new(os.PathError))                         // want "require-error: for error assertions use the `require` package"
		assert.ErrorAs(t, err, new(os.PathError), "msg")                  // want "require-error: for error assertions use the `require` package"
		assert.ErrorAs(t, err, new(os.PathError), "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assert.ErrorAsf(t, err, new(os.PathError), "msg")                 // want "require-error: for error assertions use the `require` package"
		assert.ErrorAsf(t, err, new(os.PathError), "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assert.EqualError(t, err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		assert.EqualError(t, err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		assert.EqualError(t, err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assert.EqualErrorf(t, err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		assert.EqualErrorf(t, err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assert.ErrorContains(t, err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		assert.ErrorContains(t, err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		assert.ErrorContains(t, err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assert.ErrorContainsf(t, err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		assert.ErrorContainsf(t, err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assert.NoError(t, err)                         // want "require-error: for error assertions use the `require` package"
		assert.NoError(t, err, "msg")                  // want "require-error: for error assertions use the `require` package"
		assert.NoError(t, err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assert.NoErrorf(t, err, "msg")                 // want "require-error: for error assertions use the `require` package"
		assert.NoErrorf(t, err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assert.NotErrorIs(t, err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		assert.NotErrorIs(t, err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		assert.NotErrorIs(t, err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assert.NotErrorIsf(t, err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		assert.NotErrorIsf(t, err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"
	}

	{
		assObj.Error(err)                         // want "require-error: for error assertions use the `require` package"
		assObj.Error(err, "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.Error(err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.Errorf(err, "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.Errorf(err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.ErrorIs(err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		assObj.ErrorIs(err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorIs(err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorIsf(err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.ErrorIsf(err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.ErrorAs(err, new(os.PathError))                         // want "require-error: for error assertions use the `require` package"
		assObj.ErrorAs(err, new(os.PathError), "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorAs(err, new(os.PathError), "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorAsf(err, new(os.PathError), "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.ErrorAsf(err, new(os.PathError), "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.EqualError(err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		assObj.EqualError(err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.EqualError(err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.EqualErrorf(err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.EqualErrorf(err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.ErrorContains(err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		assObj.ErrorContains(err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorContains(err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorContainsf(err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.ErrorContainsf(err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.NoError(err)                         // want "require-error: for error assertions use the `require` package"
		assObj.NoError(err, "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.NoError(err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.NoErrorf(err, "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.NoErrorf(err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.NotErrorIs(err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		assObj.NotErrorIs(err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.NotErrorIs(err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.NotErrorIsf(err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.NotErrorIsf(err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"
	}

	// Requires.

	{
		require.Error(t, err)
		require.Error(t, err, "msg")
		require.Error(t, err, "msg with arg %d", 42)
		require.Errorf(t, err, "msg")
		require.Errorf(t, err, "msg with arg %d", 42)

		require.ErrorIs(t, err, io.EOF)
		require.ErrorIs(t, err, io.EOF, "msg")
		require.ErrorIs(t, err, io.EOF, "msg with arg %d", 42)
		require.ErrorIsf(t, err, io.EOF, "msg")
		require.ErrorIsf(t, err, io.EOF, "msg with arg %d", 42)

		require.ErrorAs(t, err, new(os.PathError))
		require.ErrorAs(t, err, new(os.PathError), "msg")
		require.ErrorAs(t, err, new(os.PathError), "msg with arg %d", 42)
		require.ErrorAsf(t, err, new(os.PathError), "msg")
		require.ErrorAsf(t, err, new(os.PathError), "msg with arg %d", 42)

		require.EqualError(t, err, "end of file")
		require.EqualError(t, err, "end of file", "msg")
		require.EqualError(t, err, "end of file", "msg with arg %d", 42)
		require.EqualErrorf(t, err, "end of file", "msg")
		require.EqualErrorf(t, err, "end of file", "msg with arg %d", 42)

		require.ErrorContains(t, err, "end of file")
		require.ErrorContains(t, err, "end of file", "msg")
		require.ErrorContains(t, err, "end of file", "msg with arg %d", 42)
		require.ErrorContainsf(t, err, "end of file", "msg")
		require.ErrorContainsf(t, err, "end of file", "msg with arg %d", 42)

		require.NoError(t, err)
		require.NoError(t, err, "msg")
		require.NoError(t, err, "msg with arg %d", 42)
		require.NoErrorf(t, err, "msg")
		require.NoErrorf(t, err, "msg with arg %d", 42)

		require.NotErrorIs(t, err, io.EOF)
		require.NotErrorIs(t, err, io.EOF, "msg")
		require.NotErrorIs(t, err, io.EOF, "msg with arg %d", 42)
		require.NotErrorIsf(t, err, io.EOF, "msg")
		require.NotErrorIsf(t, err, io.EOF, "msg with arg %d", 42)
	}

	{
		reqObj.Error(err)
		reqObj.Error(err, "msg")
		reqObj.Error(err, "msg with arg %d", 42)
		reqObj.Errorf(err, "msg")
		reqObj.Errorf(err, "msg with arg %d", 42)

		reqObj.ErrorIs(err, io.EOF)
		reqObj.ErrorIs(err, io.EOF, "msg")
		reqObj.ErrorIs(err, io.EOF, "msg with arg %d", 42)
		reqObj.ErrorIsf(err, io.EOF, "msg")
		reqObj.ErrorIsf(err, io.EOF, "msg with arg %d", 42)

		reqObj.ErrorAs(err, new(os.PathError))
		reqObj.ErrorAs(err, new(os.PathError), "msg")
		reqObj.ErrorAs(err, new(os.PathError), "msg with arg %d", 42)
		reqObj.ErrorAsf(err, new(os.PathError), "msg")
		reqObj.ErrorAsf(err, new(os.PathError), "msg with arg %d", 42)

		reqObj.EqualError(err, "end of file")
		reqObj.EqualError(err, "end of file", "msg")
		reqObj.EqualError(err, "end of file", "msg with arg %d", 42)
		reqObj.EqualErrorf(err, "end of file", "msg")
		reqObj.EqualErrorf(err, "end of file", "msg with arg %d", 42)

		reqObj.ErrorContains(err, "end of file")
		reqObj.ErrorContains(err, "end of file", "msg")
		reqObj.ErrorContains(err, "end of file", "msg with arg %d", 42)
		reqObj.ErrorContainsf(err, "end of file", "msg")
		reqObj.ErrorContainsf(err, "end of file", "msg with arg %d", 42)

		reqObj.NoError(err)
		reqObj.NoError(err, "msg")
		reqObj.NoError(err, "msg with arg %d", 42)
		reqObj.NoErrorf(err, "msg")
		reqObj.NoErrorf(err, "msg with arg %d", 42)

		reqObj.NotErrorIs(err, io.EOF)
		reqObj.NotErrorIs(err, io.EOF, "msg")
		reqObj.NotErrorIs(err, io.EOF, "msg with arg %d", 42)
		reqObj.NotErrorIsf(err, io.EOF, "msg")
		reqObj.NotErrorIsf(err, io.EOF, "msg with arg %d", 42)
	}
}

type RequireErrorSuite struct {
	suite.Suite
}

func TestRequireErrorSuite(t *testing.T) {
	suite.Run(t, new(RequireErrorSuite))
}

func (s *RequireErrorSuite) TestAll() {
	var err error

	assObj, reqObj := s.Assert(), s.Require()

	// Asserts.

	{
		s.Error(err)                         // want "require-error: for error assertions use the `require` package"
		s.Error(err, "msg")                  // want "require-error: for error assertions use the `require` package"
		s.Error(err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.Errorf(err, "msg")                 // want "require-error: for error assertions use the `require` package"
		s.Errorf(err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.ErrorIs(err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		s.ErrorIs(err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		s.ErrorIs(err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.ErrorIsf(err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		s.ErrorIsf(err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.ErrorAs(err, new(os.PathError))                         // want "require-error: for error assertions use the `require` package"
		s.ErrorAs(err, new(os.PathError), "msg")                  // want "require-error: for error assertions use the `require` package"
		s.ErrorAs(err, new(os.PathError), "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.ErrorAsf(err, new(os.PathError), "msg")                 // want "require-error: for error assertions use the `require` package"
		s.ErrorAsf(err, new(os.PathError), "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.EqualError(err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		s.EqualError(err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		s.EqualError(err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.EqualErrorf(err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		s.EqualErrorf(err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.ErrorContains(err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		s.ErrorContains(err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		s.ErrorContains(err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.ErrorContainsf(err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		s.ErrorContainsf(err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.NoError(err)                         // want "require-error: for error assertions use the `require` package"
		s.NoError(err, "msg")                  // want "require-error: for error assertions use the `require` package"
		s.NoError(err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.NoErrorf(err, "msg")                 // want "require-error: for error assertions use the `require` package"
		s.NoErrorf(err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.NotErrorIs(err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		s.NotErrorIs(err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		s.NotErrorIs(err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.NotErrorIsf(err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		s.NotErrorIsf(err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.Assert().Error(err)                         // want "require-error: for error assertions use the `require` package"
		s.Assert().Error(err, "msg")                  // want "require-error: for error assertions use the `require` package"
		s.Assert().Error(err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.Assert().Errorf(err, "msg")                 // want "require-error: for error assertions use the `require` package"
		s.Assert().Errorf(err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.Assert().ErrorIs(err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorIs(err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorIs(err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorIsf(err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorIsf(err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.Assert().ErrorAs(err, new(os.PathError))                         // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorAs(err, new(os.PathError), "msg")                  // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorAs(err, new(os.PathError), "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorAsf(err, new(os.PathError), "msg")                 // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorAsf(err, new(os.PathError), "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.Assert().EqualError(err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		s.Assert().EqualError(err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		s.Assert().EqualError(err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.Assert().EqualErrorf(err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		s.Assert().EqualErrorf(err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.Assert().ErrorContains(err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorContains(err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorContains(err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorContainsf(err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		s.Assert().ErrorContainsf(err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.Assert().NoError(err)                         // want "require-error: for error assertions use the `require` package"
		s.Assert().NoError(err, "msg")                  // want "require-error: for error assertions use the `require` package"
		s.Assert().NoError(err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.Assert().NoErrorf(err, "msg")                 // want "require-error: for error assertions use the `require` package"
		s.Assert().NoErrorf(err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		s.Assert().NotErrorIs(err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		s.Assert().NotErrorIs(err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		s.Assert().NotErrorIs(err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		s.Assert().NotErrorIsf(err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		s.Assert().NotErrorIsf(err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.Error(err)                         // want "require-error: for error assertions use the `require` package"
		assObj.Error(err, "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.Error(err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.Errorf(err, "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.Errorf(err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.ErrorIs(err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		assObj.ErrorIs(err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorIs(err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorIsf(err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.ErrorIsf(err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.ErrorAs(err, new(os.PathError))                         // want "require-error: for error assertions use the `require` package"
		assObj.ErrorAs(err, new(os.PathError), "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorAs(err, new(os.PathError), "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorAsf(err, new(os.PathError), "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.ErrorAsf(err, new(os.PathError), "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.EqualError(err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		assObj.EqualError(err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.EqualError(err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.EqualErrorf(err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.EqualErrorf(err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.ErrorContains(err, "end of file")                         // want "require-error: for error assertions use the `require` package"
		assObj.ErrorContains(err, "end of file", "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorContains(err, "end of file", "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.ErrorContainsf(err, "end of file", "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.ErrorContainsf(err, "end of file", "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.NoError(err)                         // want "require-error: for error assertions use the `require` package"
		assObj.NoError(err, "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.NoError(err, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.NoErrorf(err, "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.NoErrorf(err, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"

		assObj.NotErrorIs(err, io.EOF)                         // want "require-error: for error assertions use the `require` package"
		assObj.NotErrorIs(err, io.EOF, "msg")                  // want "require-error: for error assertions use the `require` package"
		assObj.NotErrorIs(err, io.EOF, "msg with arg %d", 42)  // want "require-error: for error assertions use the `require` package"
		assObj.NotErrorIsf(err, io.EOF, "msg")                 // want "require-error: for error assertions use the `require` package"
		assObj.NotErrorIsf(err, io.EOF, "msg with arg %d", 42) // want "require-error: for error assertions use the `require` package"
	}

	// Requires.

	{
		s.Require().Error(err)
		s.Require().Error(err, "msg")
		s.Require().Error(err, "msg with arg %d", 42)
		s.Require().Errorf(err, "msg")
		s.Require().Errorf(err, "msg with arg %d", 42)

		s.Require().ErrorIs(err, io.EOF)
		s.Require().ErrorIs(err, io.EOF, "msg")
		s.Require().ErrorIs(err, io.EOF, "msg with arg %d", 42)
		s.Require().ErrorIsf(err, io.EOF, "msg")
		s.Require().ErrorIsf(err, io.EOF, "msg with arg %d", 42)

		s.Require().ErrorAs(err, new(os.PathError))
		s.Require().ErrorAs(err, new(os.PathError), "msg")
		s.Require().ErrorAs(err, new(os.PathError), "msg with arg %d", 42)
		s.Require().ErrorAsf(err, new(os.PathError), "msg")
		s.Require().ErrorAsf(err, new(os.PathError), "msg with arg %d", 42)

		s.Require().EqualError(err, "end of file")
		s.Require().EqualError(err, "end of file", "msg")
		s.Require().EqualError(err, "end of file", "msg with arg %d", 42)
		s.Require().EqualErrorf(err, "end of file", "msg")
		s.Require().EqualErrorf(err, "end of file", "msg with arg %d", 42)

		s.Require().ErrorContains(err, "end of file")
		s.Require().ErrorContains(err, "end of file", "msg")
		s.Require().ErrorContains(err, "end of file", "msg with arg %d", 42)
		s.Require().ErrorContainsf(err, "end of file", "msg")
		s.Require().ErrorContainsf(err, "end of file", "msg with arg %d", 42)

		s.Require().NoError(err)
		s.Require().NoError(err, "msg")
		s.Require().NoError(err, "msg with arg %d", 42)
		s.Require().NoErrorf(err, "msg")
		s.Require().NoErrorf(err, "msg with arg %d", 42)

		s.Require().NotErrorIs(err, io.EOF)
		s.Require().NotErrorIs(err, io.EOF, "msg")
		s.Require().NotErrorIs(err, io.EOF, "msg with arg %d", 42)
		s.Require().NotErrorIsf(err, io.EOF, "msg")
		s.Require().NotErrorIsf(err, io.EOF, "msg with arg %d", 42)

		reqObj.Error(err)
		reqObj.Error(err, "msg")
		reqObj.Error(err, "msg with arg %d", 42)
		reqObj.Errorf(err, "msg")
		reqObj.Errorf(err, "msg with arg %d", 42)

		reqObj.ErrorIs(err, io.EOF)
		reqObj.ErrorIs(err, io.EOF, "msg")
		reqObj.ErrorIs(err, io.EOF, "msg with arg %d", 42)
		reqObj.ErrorIsf(err, io.EOF, "msg")
		reqObj.ErrorIsf(err, io.EOF, "msg with arg %d", 42)

		reqObj.ErrorAs(err, new(os.PathError))
		reqObj.ErrorAs(err, new(os.PathError), "msg")
		reqObj.ErrorAs(err, new(os.PathError), "msg with arg %d", 42)
		reqObj.ErrorAsf(err, new(os.PathError), "msg")
		reqObj.ErrorAsf(err, new(os.PathError), "msg with arg %d", 42)

		reqObj.EqualError(err, "end of file")
		reqObj.EqualError(err, "end of file", "msg")
		reqObj.EqualError(err, "end of file", "msg with arg %d", 42)
		reqObj.EqualErrorf(err, "end of file", "msg")
		reqObj.EqualErrorf(err, "end of file", "msg with arg %d", 42)

		reqObj.ErrorContains(err, "end of file")
		reqObj.ErrorContains(err, "end of file", "msg")
		reqObj.ErrorContains(err, "end of file", "msg with arg %d", 42)
		reqObj.ErrorContainsf(err, "end of file", "msg")
		reqObj.ErrorContainsf(err, "end of file", "msg with arg %d", 42)

		reqObj.NoError(err)
		reqObj.NoError(err, "msg")
		reqObj.NoError(err, "msg with arg %d", 42)
		reqObj.NoErrorf(err, "msg")
		reqObj.NoErrorf(err, "msg with arg %d", 42)

		reqObj.NotErrorIs(err, io.EOF)
		reqObj.NotErrorIs(err, io.EOF, "msg")
		reqObj.NotErrorIs(err, io.EOF, "msg with arg %d", 42)
		reqObj.NotErrorIsf(err, io.EOF, "msg")
		reqObj.NotErrorIsf(err, io.EOF, "msg with arg %d", 42)
	}
}
