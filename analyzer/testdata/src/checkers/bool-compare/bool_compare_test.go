// Code generated by testifylint/internal/testgen. DO NOT EDIT.

package boolcompare

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestBoolCompareChecker(t *testing.T) {
	var predicate bool

	// assert.True cases.
	{
		// Invalid.
		assert.Equal(t, predicate, true)     // want "bool-compare: use assert\\.True"
		assert.Equal(t, true, predicate)     // want "bool-compare: use assert\\.True"
		assert.NotEqual(t, predicate, false) // want "bool-compare: use assert\\.True"
		assert.NotEqual(t, false, predicate) // want "bool-compare: use assert\\.True"
		assert.True(t, predicate == true)    // want "bool-compare: need to simplify the check"
		assert.True(t, true == predicate)    // want "bool-compare: need to simplify the check"
		assert.False(t, predicate == false)  // want "bool-compare: use assert\\.True"
		assert.False(t, false == predicate)  // want "bool-compare: use assert\\.True"
		assert.False(t, predicate != true)   // want "bool-compare: use assert\\.True"
		assert.False(t, true != predicate)   // want "bool-compare: use assert\\.True"
		assert.True(t, predicate != false)   // want "bool-compare: need to simplify the check"
		assert.True(t, false != predicate)   // want "bool-compare: need to simplify the check"
		assert.False(t, !predicate)          // want "bool-compare: use assert\\.True"

		// Valid.
		assert.True(t, predicate)
	}

	// assert.False cases.
	{
		// Invalid.
		assert.Equal(t, predicate, false)   // want "bool-compare: use assert\\.False"
		assert.Equal(t, false, predicate)   // want "bool-compare: use assert\\.False"
		assert.NotEqual(t, predicate, true) // want "bool-compare: use assert\\.False"
		assert.NotEqual(t, true, predicate) // want "bool-compare: use assert\\.False"
		assert.False(t, predicate == true)  // want "bool-compare: need to simplify the check"
		assert.False(t, true == predicate)  // want "bool-compare: need to simplify the check"
		assert.True(t, predicate == false)  // want "bool-compare: use assert\\.False"
		assert.True(t, false == predicate)  // want "bool-compare: use assert\\.False"
		assert.True(t, predicate != true)   // want "bool-compare: use assert\\.False"
		assert.True(t, true != predicate)   // want "bool-compare: use assert\\.False"
		assert.False(t, predicate != false) // want "bool-compare: need to simplify the check"
		assert.False(t, false != predicate) // want "bool-compare: need to simplify the check"
		assert.True(t, !predicate)          // want "bool-compare: use assert\\.False"

		// Valid.
		assert.False(t, predicate)
	}
}
