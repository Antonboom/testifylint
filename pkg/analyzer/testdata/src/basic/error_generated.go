// Code generated by testifylint/internal/cmd/testgen. DO NOT EDIT.

package basic

import (
	"io"
	"testing"
	"unsafe"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestErrorAsserts(t *testing.T) {
	errOp := func() error { return io.EOF }

	var (
		ptr   *int
		iface any
		ch    chan error
		sl    []error
		fn    func()
		m     map[int]int
		uPtr  unsafe.Pointer
	)

	var a error
	var b withErroredMethod
	_, c := b.Get2()

	t.Run("assert", func(t *testing.T) {
		{
			assert.Nil(t, a)                         // want "use assert.NoError"
			assert.Nil(t, a, "msg")                  // want "use assert.NoError"
			assert.Nil(t, a, "msg with arg %d", 42)  // want "use assert.NoError"
			assert.Nilf(t, a, "msg")                 // want "use assert.NoErrorf"
			assert.Nilf(t, a, "msg with arg %d", 42) // want "use assert.NoErrorf"

			assert.NotNil(t, a)                         // want "use assert.Error"
			assert.NotNil(t, a, "msg")                  // want "use assert.Error"
			assert.NotNil(t, a, "msg with arg %d", 42)  // want "use assert.Error"
			assert.NotNilf(t, a, "msg")                 // want "use assert.Errorf"
			assert.NotNilf(t, a, "msg with arg %d", 42) // want "use assert.Errorf"
		}

		{
			assert.Nil(t, b.Get1())                         // want "use assert.NoError"
			assert.Nil(t, b.Get1(), "msg")                  // want "use assert.NoError"
			assert.Nil(t, b.Get1(), "msg with arg %d", 42)  // want "use assert.NoError"
			assert.Nilf(t, b.Get1(), "msg")                 // want "use assert.NoErrorf"
			assert.Nilf(t, b.Get1(), "msg with arg %d", 42) // want "use assert.NoErrorf"

			assert.NotNil(t, b.Get1())                         // want "use assert.Error"
			assert.NotNil(t, b.Get1(), "msg")                  // want "use assert.Error"
			assert.NotNil(t, b.Get1(), "msg with arg %d", 42)  // want "use assert.Error"
			assert.NotNilf(t, b.Get1(), "msg")                 // want "use assert.Errorf"
			assert.NotNilf(t, b.Get1(), "msg with arg %d", 42) // want "use assert.Errorf"
		}

		{
			assert.Nil(t, c)                         // want "use assert.NoError"
			assert.Nil(t, c, "msg")                  // want "use assert.NoError"
			assert.Nil(t, c, "msg with arg %d", 42)  // want "use assert.NoError"
			assert.Nilf(t, c, "msg")                 // want "use assert.NoErrorf"
			assert.Nilf(t, c, "msg with arg %d", 42) // want "use assert.NoErrorf"

			assert.NotNil(t, c)                         // want "use assert.Error"
			assert.NotNil(t, c, "msg")                  // want "use assert.Error"
			assert.NotNil(t, c, "msg with arg %d", 42)  // want "use assert.Error"
			assert.NotNilf(t, c, "msg")                 // want "use assert.Errorf"
			assert.NotNilf(t, c, "msg with arg %d", 42) // want "use assert.Errorf"
		}

		{
			assert.Nil(t, errOp())                         // want "use assert.NoError"
			assert.Nil(t, errOp(), "msg")                  // want "use assert.NoError"
			assert.Nil(t, errOp(), "msg with arg %d", 42)  // want "use assert.NoError"
			assert.Nilf(t, errOp(), "msg")                 // want "use assert.NoErrorf"
			assert.Nilf(t, errOp(), "msg with arg %d", 42) // want "use assert.NoErrorf"

			assert.NotNil(t, errOp())                         // want "use assert.Error"
			assert.NotNil(t, errOp(), "msg")                  // want "use assert.Error"
			assert.NotNil(t, errOp(), "msg with arg %d", 42)  // want "use assert.Error"
			assert.NotNilf(t, errOp(), "msg")                 // want "use assert.Errorf"
			assert.NotNilf(t, errOp(), "msg with arg %d", 42) // want "use assert.Errorf"
		}

		// Valid asserts.

		{
			assert.NoError(t, a)
			assert.NoError(t, a, "msg")
			assert.NoError(t, a, "msg with arg %d", 42)
			assert.NoErrorf(t, a, "msg")
			assert.NoErrorf(t, a, "msg with arg %d", 42)

			assert.Error(t, a)
			assert.Error(t, a, "msg")
			assert.Error(t, a, "msg with arg %d", 42)
			assert.Errorf(t, a, "msg")
			assert.Errorf(t, a, "msg with arg %d", 42)
		}

		{
			assert.NoError(t, b.Get1())
			assert.NoError(t, b.Get1(), "msg")
			assert.NoError(t, b.Get1(), "msg with arg %d", 42)
			assert.NoErrorf(t, b.Get1(), "msg")
			assert.NoErrorf(t, b.Get1(), "msg with arg %d", 42)

			assert.Error(t, b.Get1())
			assert.Error(t, b.Get1(), "msg")
			assert.Error(t, b.Get1(), "msg with arg %d", 42)
			assert.Errorf(t, b.Get1(), "msg")
			assert.Errorf(t, b.Get1(), "msg with arg %d", 42)
		}

		{
			assert.NoError(t, c)
			assert.NoError(t, c, "msg")
			assert.NoError(t, c, "msg with arg %d", 42)
			assert.NoErrorf(t, c, "msg")
			assert.NoErrorf(t, c, "msg with arg %d", 42)

			assert.Error(t, c)
			assert.Error(t, c, "msg")
			assert.Error(t, c, "msg with arg %d", 42)
			assert.Errorf(t, c, "msg")
			assert.Errorf(t, c, "msg with arg %d", 42)
		}

		{
			assert.NoError(t, errOp())
			assert.NoError(t, errOp(), "msg")
			assert.NoError(t, errOp(), "msg with arg %d", 42)
			assert.NoErrorf(t, errOp(), "msg")
			assert.NoErrorf(t, errOp(), "msg with arg %d", 42)

			assert.Error(t, errOp())
			assert.Error(t, errOp(), "msg")
			assert.Error(t, errOp(), "msg with arg %d", 42)
			assert.Errorf(t, errOp(), "msg")
			assert.Errorf(t, errOp(), "msg with arg %d", 42)
		}

		{
			assert.Nil(t, ptr)
			assert.Nil(t, ptr, "msg")
			assert.Nil(t, ptr, "msg with arg %d", 42)
			assert.Nilf(t, ptr, "msg")
			assert.Nilf(t, ptr, "msg with arg %d", 42)

			assert.Nil(t, iface)
			assert.Nil(t, iface, "msg")
			assert.Nil(t, iface, "msg with arg %d", 42)
			assert.Nilf(t, iface, "msg")
			assert.Nilf(t, iface, "msg with arg %d", 42)

			assert.Nil(t, ch)
			assert.Nil(t, ch, "msg")
			assert.Nil(t, ch, "msg with arg %d", 42)
			assert.Nilf(t, ch, "msg")
			assert.Nilf(t, ch, "msg with arg %d", 42)

			assert.Nil(t, sl)
			assert.Nil(t, sl, "msg")
			assert.Nil(t, sl, "msg with arg %d", 42)
			assert.Nilf(t, sl, "msg")
			assert.Nilf(t, sl, "msg with arg %d", 42)

			assert.Nil(t, fn)
			assert.Nil(t, fn, "msg")
			assert.Nil(t, fn, "msg with arg %d", 42)
			assert.Nilf(t, fn, "msg")
			assert.Nilf(t, fn, "msg with arg %d", 42)

			assert.Nil(t, m)
			assert.Nil(t, m, "msg")
			assert.Nil(t, m, "msg with arg %d", 42)
			assert.Nilf(t, m, "msg")
			assert.Nilf(t, m, "msg with arg %d", 42)

			assert.Nil(t, uPtr)
			assert.Nil(t, uPtr, "msg")
			assert.Nil(t, uPtr, "msg with arg %d", 42)
			assert.Nilf(t, uPtr, "msg")
			assert.Nilf(t, uPtr, "msg with arg %d", 42)

			assert.NotNil(t, ptr)
			assert.NotNil(t, ptr, "msg")
			assert.NotNil(t, ptr, "msg with arg %d", 42)
			assert.NotNilf(t, ptr, "msg")
			assert.NotNilf(t, ptr, "msg with arg %d", 42)

			assert.NotNil(t, iface)
			assert.NotNil(t, iface, "msg")
			assert.NotNil(t, iface, "msg with arg %d", 42)
			assert.NotNilf(t, iface, "msg")
			assert.NotNilf(t, iface, "msg with arg %d", 42)

			assert.NotNil(t, ch)
			assert.NotNil(t, ch, "msg")
			assert.NotNil(t, ch, "msg with arg %d", 42)
			assert.NotNilf(t, ch, "msg")
			assert.NotNilf(t, ch, "msg with arg %d", 42)

			assert.NotNil(t, sl)
			assert.NotNil(t, sl, "msg")
			assert.NotNil(t, sl, "msg with arg %d", 42)
			assert.NotNilf(t, sl, "msg")
			assert.NotNilf(t, sl, "msg with arg %d", 42)

			assert.NotNil(t, fn)
			assert.NotNil(t, fn, "msg")
			assert.NotNil(t, fn, "msg with arg %d", 42)
			assert.NotNilf(t, fn, "msg")
			assert.NotNilf(t, fn, "msg with arg %d", 42)

			assert.NotNil(t, m)
			assert.NotNil(t, m, "msg")
			assert.NotNil(t, m, "msg with arg %d", 42)
			assert.NotNilf(t, m, "msg")
			assert.NotNilf(t, m, "msg with arg %d", 42)

			assert.NotNil(t, uPtr)
			assert.NotNil(t, uPtr, "msg")
			assert.NotNil(t, uPtr, "msg with arg %d", 42)
			assert.NotNilf(t, uPtr, "msg")
			assert.NotNilf(t, uPtr, "msg with arg %d", 42)
		}
	})

	t.Run("require", func(t *testing.T) {
		{
			require.Nil(t, a)                         // want "use require.NoError"
			require.Nil(t, a, "msg")                  // want "use require.NoError"
			require.Nil(t, a, "msg with arg %d", 42)  // want "use require.NoError"
			require.Nilf(t, a, "msg")                 // want "use require.NoErrorf"
			require.Nilf(t, a, "msg with arg %d", 42) // want "use require.NoErrorf"

			require.NotNil(t, a)                         // want "use require.Error"
			require.NotNil(t, a, "msg")                  // want "use require.Error"
			require.NotNil(t, a, "msg with arg %d", 42)  // want "use require.Error"
			require.NotNilf(t, a, "msg")                 // want "use require.Errorf"
			require.NotNilf(t, a, "msg with arg %d", 42) // want "use require.Errorf"
		}

		{
			require.Nil(t, b.Get1())                         // want "use require.NoError"
			require.Nil(t, b.Get1(), "msg")                  // want "use require.NoError"
			require.Nil(t, b.Get1(), "msg with arg %d", 42)  // want "use require.NoError"
			require.Nilf(t, b.Get1(), "msg")                 // want "use require.NoErrorf"
			require.Nilf(t, b.Get1(), "msg with arg %d", 42) // want "use require.NoErrorf"

			require.NotNil(t, b.Get1())                         // want "use require.Error"
			require.NotNil(t, b.Get1(), "msg")                  // want "use require.Error"
			require.NotNil(t, b.Get1(), "msg with arg %d", 42)  // want "use require.Error"
			require.NotNilf(t, b.Get1(), "msg")                 // want "use require.Errorf"
			require.NotNilf(t, b.Get1(), "msg with arg %d", 42) // want "use require.Errorf"
		}

		{
			require.Nil(t, c)                         // want "use require.NoError"
			require.Nil(t, c, "msg")                  // want "use require.NoError"
			require.Nil(t, c, "msg with arg %d", 42)  // want "use require.NoError"
			require.Nilf(t, c, "msg")                 // want "use require.NoErrorf"
			require.Nilf(t, c, "msg with arg %d", 42) // want "use require.NoErrorf"

			require.NotNil(t, c)                         // want "use require.Error"
			require.NotNil(t, c, "msg")                  // want "use require.Error"
			require.NotNil(t, c, "msg with arg %d", 42)  // want "use require.Error"
			require.NotNilf(t, c, "msg")                 // want "use require.Errorf"
			require.NotNilf(t, c, "msg with arg %d", 42) // want "use require.Errorf"
		}

		{
			require.Nil(t, errOp())                         // want "use require.NoError"
			require.Nil(t, errOp(), "msg")                  // want "use require.NoError"
			require.Nil(t, errOp(), "msg with arg %d", 42)  // want "use require.NoError"
			require.Nilf(t, errOp(), "msg")                 // want "use require.NoErrorf"
			require.Nilf(t, errOp(), "msg with arg %d", 42) // want "use require.NoErrorf"

			require.NotNil(t, errOp())                         // want "use require.Error"
			require.NotNil(t, errOp(), "msg")                  // want "use require.Error"
			require.NotNil(t, errOp(), "msg with arg %d", 42)  // want "use require.Error"
			require.NotNilf(t, errOp(), "msg")                 // want "use require.Errorf"
			require.NotNilf(t, errOp(), "msg with arg %d", 42) // want "use require.Errorf"
		}

		// Valid requires.

		{
			require.NoError(t, a)
			require.NoError(t, a, "msg")
			require.NoError(t, a, "msg with arg %d", 42)
			require.NoErrorf(t, a, "msg")
			require.NoErrorf(t, a, "msg with arg %d", 42)

			require.Error(t, a)
			require.Error(t, a, "msg")
			require.Error(t, a, "msg with arg %d", 42)
			require.Errorf(t, a, "msg")
			require.Errorf(t, a, "msg with arg %d", 42)
		}

		{
			require.NoError(t, b.Get1())
			require.NoError(t, b.Get1(), "msg")
			require.NoError(t, b.Get1(), "msg with arg %d", 42)
			require.NoErrorf(t, b.Get1(), "msg")
			require.NoErrorf(t, b.Get1(), "msg with arg %d", 42)

			require.Error(t, b.Get1())
			require.Error(t, b.Get1(), "msg")
			require.Error(t, b.Get1(), "msg with arg %d", 42)
			require.Errorf(t, b.Get1(), "msg")
			require.Errorf(t, b.Get1(), "msg with arg %d", 42)
		}

		{
			require.NoError(t, c)
			require.NoError(t, c, "msg")
			require.NoError(t, c, "msg with arg %d", 42)
			require.NoErrorf(t, c, "msg")
			require.NoErrorf(t, c, "msg with arg %d", 42)

			require.Error(t, c)
			require.Error(t, c, "msg")
			require.Error(t, c, "msg with arg %d", 42)
			require.Errorf(t, c, "msg")
			require.Errorf(t, c, "msg with arg %d", 42)
		}

		{
			require.NoError(t, errOp())
			require.NoError(t, errOp(), "msg")
			require.NoError(t, errOp(), "msg with arg %d", 42)
			require.NoErrorf(t, errOp(), "msg")
			require.NoErrorf(t, errOp(), "msg with arg %d", 42)

			require.Error(t, errOp())
			require.Error(t, errOp(), "msg")
			require.Error(t, errOp(), "msg with arg %d", 42)
			require.Errorf(t, errOp(), "msg")
			require.Errorf(t, errOp(), "msg with arg %d", 42)
		}

		{
			require.Nil(t, ptr)
			require.Nil(t, ptr, "msg")
			require.Nil(t, ptr, "msg with arg %d", 42)
			require.Nilf(t, ptr, "msg")
			require.Nilf(t, ptr, "msg with arg %d", 42)

			require.Nil(t, iface)
			require.Nil(t, iface, "msg")
			require.Nil(t, iface, "msg with arg %d", 42)
			require.Nilf(t, iface, "msg")
			require.Nilf(t, iface, "msg with arg %d", 42)

			require.Nil(t, ch)
			require.Nil(t, ch, "msg")
			require.Nil(t, ch, "msg with arg %d", 42)
			require.Nilf(t, ch, "msg")
			require.Nilf(t, ch, "msg with arg %d", 42)

			require.Nil(t, sl)
			require.Nil(t, sl, "msg")
			require.Nil(t, sl, "msg with arg %d", 42)
			require.Nilf(t, sl, "msg")
			require.Nilf(t, sl, "msg with arg %d", 42)

			require.Nil(t, fn)
			require.Nil(t, fn, "msg")
			require.Nil(t, fn, "msg with arg %d", 42)
			require.Nilf(t, fn, "msg")
			require.Nilf(t, fn, "msg with arg %d", 42)

			require.Nil(t, m)
			require.Nil(t, m, "msg")
			require.Nil(t, m, "msg with arg %d", 42)
			require.Nilf(t, m, "msg")
			require.Nilf(t, m, "msg with arg %d", 42)

			require.Nil(t, uPtr)
			require.Nil(t, uPtr, "msg")
			require.Nil(t, uPtr, "msg with arg %d", 42)
			require.Nilf(t, uPtr, "msg")
			require.Nilf(t, uPtr, "msg with arg %d", 42)

			require.NotNil(t, ptr)
			require.NotNil(t, ptr, "msg")
			require.NotNil(t, ptr, "msg with arg %d", 42)
			require.NotNilf(t, ptr, "msg")
			require.NotNilf(t, ptr, "msg with arg %d", 42)

			require.NotNil(t, iface)
			require.NotNil(t, iface, "msg")
			require.NotNil(t, iface, "msg with arg %d", 42)
			require.NotNilf(t, iface, "msg")
			require.NotNilf(t, iface, "msg with arg %d", 42)

			require.NotNil(t, ch)
			require.NotNil(t, ch, "msg")
			require.NotNil(t, ch, "msg with arg %d", 42)
			require.NotNilf(t, ch, "msg")
			require.NotNilf(t, ch, "msg with arg %d", 42)

			require.NotNil(t, sl)
			require.NotNil(t, sl, "msg")
			require.NotNil(t, sl, "msg with arg %d", 42)
			require.NotNilf(t, sl, "msg")
			require.NotNilf(t, sl, "msg with arg %d", 42)

			require.NotNil(t, fn)
			require.NotNil(t, fn, "msg")
			require.NotNil(t, fn, "msg with arg %d", 42)
			require.NotNilf(t, fn, "msg")
			require.NotNilf(t, fn, "msg with arg %d", 42)

			require.NotNil(t, m)
			require.NotNil(t, m, "msg")
			require.NotNil(t, m, "msg with arg %d", 42)
			require.NotNilf(t, m, "msg")
			require.NotNilf(t, m, "msg with arg %d", 42)

			require.NotNil(t, uPtr)
			require.NotNil(t, uPtr, "msg")
			require.NotNil(t, uPtr, "msg with arg %d", 42)
			require.NotNilf(t, uPtr, "msg")
			require.NotNilf(t, uPtr, "msg with arg %d", 42)
		}
	})
}

type withErroredMethod struct{}

func (withErroredMethod) Get1() error        { return nil }
func (withErroredMethod) Get2() (int, error) { return 0, nil }
