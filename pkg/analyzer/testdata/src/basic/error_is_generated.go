// Code generated by testifylint/internal/cmd/testgen. DO NOT EDIT.

package basic

import (
	"errors"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestErrorInsteadOfErrorIs(t *testing.T) {
	var errSentinel = errors.New("user not found")
	var err error

	t.Run("assert", func(t *testing.T) {
		{
			assert.Error(t, err, errSentinel)                        // want "invalid usage of assert.Error, use assert.ErrorIs instead"
			assert.Error(t, err, errSentinel, "msg")                 // want "invalid usage of assert.Error, use assert.ErrorIs instead"
			assert.Error(t, err, errSentinel, "msg with arg %d", 42) // want "invalid usage of assert.Error, use assert.ErrorIs instead"

			assert.NoError(t, err, errSentinel)                        // want "invalid usage of assert.NoError, use assert.NotErrorIs instead"
			assert.NoError(t, err, errSentinel, "msg")                 // want "invalid usage of assert.NoError, use assert.NotErrorIs instead"
			assert.NoError(t, err, errSentinel, "msg with arg %d", 42) // want "invalid usage of assert.NoError, use assert.NotErrorIs instead"
		}

		// Valid asserts.

		{
			assert.ErrorIs(t, err, errSentinel)
			assert.ErrorIs(t, err, errSentinel, "msg")
			assert.ErrorIs(t, err, errSentinel, "msg with arg %d", 42)

			assert.NotErrorIs(t, err, errSentinel)
			assert.NotErrorIs(t, err, errSentinel, "msg")
			assert.NotErrorIs(t, err, errSentinel, "msg with arg %d", 42)
		}
	})

	t.Run("require", func(t *testing.T) {
		{
			require.Error(t, err, errSentinel)                        // want "invalid usage of require.Error, use require.ErrorIs instead"
			require.Error(t, err, errSentinel, "msg")                 // want "invalid usage of require.Error, use require.ErrorIs instead"
			require.Error(t, err, errSentinel, "msg with arg %d", 42) // want "invalid usage of require.Error, use require.ErrorIs instead"

			require.NoError(t, err, errSentinel)                        // want "invalid usage of require.NoError, use require.NotErrorIs instead"
			require.NoError(t, err, errSentinel, "msg")                 // want "invalid usage of require.NoError, use require.NotErrorIs instead"
			require.NoError(t, err, errSentinel, "msg with arg %d", 42) // want "invalid usage of require.NoError, use require.NotErrorIs instead"
		}

		// Valid requires.

		{
			require.ErrorIs(t, err, errSentinel)
			require.ErrorIs(t, err, errSentinel, "msg")
			require.ErrorIs(t, err, errSentinel, "msg with arg %d", 42)

			require.NotErrorIs(t, err, errSentinel)
			require.NotErrorIs(t, err, errSentinel, "msg")
			require.NotErrorIs(t, err, errSentinel, "msg with arg %d", 42)
		}
	})
}
