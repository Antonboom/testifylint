// Code generated by testifylint/internal/cmd/testgen. DO NOT EDIT.

package basic

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestComparisons(t *testing.T) {
	var a, b int

	t.Run("assert", func(t *testing.T) {
		{
			assert.True(t, a == b)                         // want "use assert.Equal"
			assert.True(t, a == b, "msg")                  // want "use assert.Equal"
			assert.True(t, a == b, "msg with arg %d", 42)  // want "use assert.Equal"
			assert.Truef(t, a == b, "msg")                 // want "use assert.Equalf"
			assert.Truef(t, a == b, "msg with arg %d", 42) // want "use assert.Equalf"

			assert.True(t, a != b)                         // want "use assert.NotEqual"
			assert.True(t, a != b, "msg")                  // want "use assert.NotEqual"
			assert.True(t, a != b, "msg with arg %d", 42)  // want "use assert.NotEqual"
			assert.Truef(t, a != b, "msg")                 // want "use assert.NotEqualf"
			assert.Truef(t, a != b, "msg with arg %d", 42) // want "use assert.NotEqualf"

			assert.True(t, a > b)                         // want "use assert.Greater"
			assert.True(t, a > b, "msg")                  // want "use assert.Greater"
			assert.True(t, a > b, "msg with arg %d", 42)  // want "use assert.Greater"
			assert.Truef(t, a > b, "msg")                 // want "use assert.Greaterf"
			assert.Truef(t, a > b, "msg with arg %d", 42) // want "use assert.Greaterf"

			assert.True(t, a >= b)                         // want "use assert.GreaterOrEqual"
			assert.True(t, a >= b, "msg")                  // want "use assert.GreaterOrEqual"
			assert.True(t, a >= b, "msg with arg %d", 42)  // want "use assert.GreaterOrEqual"
			assert.Truef(t, a >= b, "msg")                 // want "use assert.GreaterOrEqualf"
			assert.Truef(t, a >= b, "msg with arg %d", 42) // want "use assert.GreaterOrEqualf"

			assert.True(t, a < b)                         // want "use assert.Less"
			assert.True(t, a < b, "msg")                  // want "use assert.Less"
			assert.True(t, a < b, "msg with arg %d", 42)  // want "use assert.Less"
			assert.Truef(t, a < b, "msg")                 // want "use assert.Lessf"
			assert.Truef(t, a < b, "msg with arg %d", 42) // want "use assert.Lessf"

			assert.True(t, a <= b)                         // want "use assert.LessOrEqual"
			assert.True(t, a <= b, "msg")                  // want "use assert.LessOrEqual"
			assert.True(t, a <= b, "msg with arg %d", 42)  // want "use assert.LessOrEqual"
			assert.Truef(t, a <= b, "msg")                 // want "use assert.LessOrEqualf"
			assert.Truef(t, a <= b, "msg with arg %d", 42) // want "use assert.LessOrEqualf"

			assert.False(t, a == b)                         // want "use assert.NotEqual"
			assert.False(t, a == b, "msg")                  // want "use assert.NotEqual"
			assert.False(t, a == b, "msg with arg %d", 42)  // want "use assert.NotEqual"
			assert.Falsef(t, a == b, "msg")                 // want "use assert.NotEqualf"
			assert.Falsef(t, a == b, "msg with arg %d", 42) // want "use assert.NotEqualf"

			assert.False(t, a != b)                         // want "use assert.Equal"
			assert.False(t, a != b, "msg")                  // want "use assert.Equal"
			assert.False(t, a != b, "msg with arg %d", 42)  // want "use assert.Equal"
			assert.Falsef(t, a != b, "msg")                 // want "use assert.Equalf"
			assert.Falsef(t, a != b, "msg with arg %d", 42) // want "use assert.Equalf"

			assert.False(t, a > b)                         // want "use assert.LessOrEqual"
			assert.False(t, a > b, "msg")                  // want "use assert.LessOrEqual"
			assert.False(t, a > b, "msg with arg %d", 42)  // want "use assert.LessOrEqual"
			assert.Falsef(t, a > b, "msg")                 // want "use assert.LessOrEqualf"
			assert.Falsef(t, a > b, "msg with arg %d", 42) // want "use assert.LessOrEqualf"

			assert.False(t, a >= b)                         // want "use assert.Less"
			assert.False(t, a >= b, "msg")                  // want "use assert.Less"
			assert.False(t, a >= b, "msg with arg %d", 42)  // want "use assert.Less"
			assert.Falsef(t, a >= b, "msg")                 // want "use assert.Lessf"
			assert.Falsef(t, a >= b, "msg with arg %d", 42) // want "use assert.Lessf"

			assert.False(t, a < b)                         // want "use assert.GreaterOrEqual"
			assert.False(t, a < b, "msg")                  // want "use assert.GreaterOrEqual"
			assert.False(t, a < b, "msg with arg %d", 42)  // want "use assert.GreaterOrEqual"
			assert.Falsef(t, a < b, "msg")                 // want "use assert.GreaterOrEqualf"
			assert.Falsef(t, a < b, "msg with arg %d", 42) // want "use assert.GreaterOrEqualf"

			assert.False(t, a <= b)                         // want "use assert.Greater"
			assert.False(t, a <= b, "msg")                  // want "use assert.Greater"
			assert.False(t, a <= b, "msg with arg %d", 42)  // want "use assert.Greater"
			assert.Falsef(t, a <= b, "msg")                 // want "use assert.Greaterf"
			assert.Falsef(t, a <= b, "msg with arg %d", 42) // want "use assert.Greaterf"
		}

		// Valid asserts.

		{
			assert.Equal(t, a, b)
			assert.Equal(t, a, b, "msg")
			assert.Equal(t, a, b, "msg with arg %d", 42)
			assert.Equalf(t, a, b, "msg")
			assert.Equalf(t, a, b, "msg with arg %d", 42)

			assert.NotEqual(t, a, b)
			assert.NotEqual(t, a, b, "msg")
			assert.NotEqual(t, a, b, "msg with arg %d", 42)
			assert.NotEqualf(t, a, b, "msg")
			assert.NotEqualf(t, a, b, "msg with arg %d", 42)

			assert.Greater(t, a, b)
			assert.Greater(t, a, b, "msg")
			assert.Greater(t, a, b, "msg with arg %d", 42)
			assert.Greaterf(t, a, b, "msg")
			assert.Greaterf(t, a, b, "msg with arg %d", 42)

			assert.GreaterOrEqual(t, a, b)
			assert.GreaterOrEqual(t, a, b, "msg")
			assert.GreaterOrEqual(t, a, b, "msg with arg %d", 42)
			assert.GreaterOrEqualf(t, a, b, "msg")
			assert.GreaterOrEqualf(t, a, b, "msg with arg %d", 42)

			assert.Less(t, a, b)
			assert.Less(t, a, b, "msg")
			assert.Less(t, a, b, "msg with arg %d", 42)
			assert.Lessf(t, a, b, "msg")
			assert.Lessf(t, a, b, "msg with arg %d", 42)

			assert.LessOrEqual(t, a, b)
			assert.LessOrEqual(t, a, b, "msg")
			assert.LessOrEqual(t, a, b, "msg with arg %d", 42)
			assert.LessOrEqualf(t, a, b, "msg")
			assert.LessOrEqualf(t, a, b, "msg with arg %d", 42)
		}
	})

	t.Run("require", func(t *testing.T) {
		{
			require.True(t, a == b)                         // want "use require.Equal"
			require.True(t, a == b, "msg")                  // want "use require.Equal"
			require.True(t, a == b, "msg with arg %d", 42)  // want "use require.Equal"
			require.Truef(t, a == b, "msg")                 // want "use require.Equalf"
			require.Truef(t, a == b, "msg with arg %d", 42) // want "use require.Equalf"

			require.True(t, a != b)                         // want "use require.NotEqual"
			require.True(t, a != b, "msg")                  // want "use require.NotEqual"
			require.True(t, a != b, "msg with arg %d", 42)  // want "use require.NotEqual"
			require.Truef(t, a != b, "msg")                 // want "use require.NotEqualf"
			require.Truef(t, a != b, "msg with arg %d", 42) // want "use require.NotEqualf"

			require.True(t, a > b)                         // want "use require.Greater"
			require.True(t, a > b, "msg")                  // want "use require.Greater"
			require.True(t, a > b, "msg with arg %d", 42)  // want "use require.Greater"
			require.Truef(t, a > b, "msg")                 // want "use require.Greaterf"
			require.Truef(t, a > b, "msg with arg %d", 42) // want "use require.Greaterf"

			require.True(t, a >= b)                         // want "use require.GreaterOrEqual"
			require.True(t, a >= b, "msg")                  // want "use require.GreaterOrEqual"
			require.True(t, a >= b, "msg with arg %d", 42)  // want "use require.GreaterOrEqual"
			require.Truef(t, a >= b, "msg")                 // want "use require.GreaterOrEqualf"
			require.Truef(t, a >= b, "msg with arg %d", 42) // want "use require.GreaterOrEqualf"

			require.True(t, a < b)                         // want "use require.Less"
			require.True(t, a < b, "msg")                  // want "use require.Less"
			require.True(t, a < b, "msg with arg %d", 42)  // want "use require.Less"
			require.Truef(t, a < b, "msg")                 // want "use require.Lessf"
			require.Truef(t, a < b, "msg with arg %d", 42) // want "use require.Lessf"

			require.True(t, a <= b)                         // want "use require.LessOrEqual"
			require.True(t, a <= b, "msg")                  // want "use require.LessOrEqual"
			require.True(t, a <= b, "msg with arg %d", 42)  // want "use require.LessOrEqual"
			require.Truef(t, a <= b, "msg")                 // want "use require.LessOrEqualf"
			require.Truef(t, a <= b, "msg with arg %d", 42) // want "use require.LessOrEqualf"

			require.False(t, a == b)                         // want "use require.NotEqual"
			require.False(t, a == b, "msg")                  // want "use require.NotEqual"
			require.False(t, a == b, "msg with arg %d", 42)  // want "use require.NotEqual"
			require.Falsef(t, a == b, "msg")                 // want "use require.NotEqualf"
			require.Falsef(t, a == b, "msg with arg %d", 42) // want "use require.NotEqualf"

			require.False(t, a != b)                         // want "use require.Equal"
			require.False(t, a != b, "msg")                  // want "use require.Equal"
			require.False(t, a != b, "msg with arg %d", 42)  // want "use require.Equal"
			require.Falsef(t, a != b, "msg")                 // want "use require.Equalf"
			require.Falsef(t, a != b, "msg with arg %d", 42) // want "use require.Equalf"

			require.False(t, a > b)                         // want "use require.LessOrEqual"
			require.False(t, a > b, "msg")                  // want "use require.LessOrEqual"
			require.False(t, a > b, "msg with arg %d", 42)  // want "use require.LessOrEqual"
			require.Falsef(t, a > b, "msg")                 // want "use require.LessOrEqualf"
			require.Falsef(t, a > b, "msg with arg %d", 42) // want "use require.LessOrEqualf"

			require.False(t, a >= b)                         // want "use require.Less"
			require.False(t, a >= b, "msg")                  // want "use require.Less"
			require.False(t, a >= b, "msg with arg %d", 42)  // want "use require.Less"
			require.Falsef(t, a >= b, "msg")                 // want "use require.Lessf"
			require.Falsef(t, a >= b, "msg with arg %d", 42) // want "use require.Lessf"

			require.False(t, a < b)                         // want "use require.GreaterOrEqual"
			require.False(t, a < b, "msg")                  // want "use require.GreaterOrEqual"
			require.False(t, a < b, "msg with arg %d", 42)  // want "use require.GreaterOrEqual"
			require.Falsef(t, a < b, "msg")                 // want "use require.GreaterOrEqualf"
			require.Falsef(t, a < b, "msg with arg %d", 42) // want "use require.GreaterOrEqualf"

			require.False(t, a <= b)                         // want "use require.Greater"
			require.False(t, a <= b, "msg")                  // want "use require.Greater"
			require.False(t, a <= b, "msg with arg %d", 42)  // want "use require.Greater"
			require.Falsef(t, a <= b, "msg")                 // want "use require.Greaterf"
			require.Falsef(t, a <= b, "msg with arg %d", 42) // want "use require.Greaterf"
		}

		// Valid requires.

		{
			require.Equal(t, a, b)
			require.Equal(t, a, b, "msg")
			require.Equal(t, a, b, "msg with arg %d", 42)
			require.Equalf(t, a, b, "msg")
			require.Equalf(t, a, b, "msg with arg %d", 42)

			require.NotEqual(t, a, b)
			require.NotEqual(t, a, b, "msg")
			require.NotEqual(t, a, b, "msg with arg %d", 42)
			require.NotEqualf(t, a, b, "msg")
			require.NotEqualf(t, a, b, "msg with arg %d", 42)

			require.Greater(t, a, b)
			require.Greater(t, a, b, "msg")
			require.Greater(t, a, b, "msg with arg %d", 42)
			require.Greaterf(t, a, b, "msg")
			require.Greaterf(t, a, b, "msg with arg %d", 42)

			require.GreaterOrEqual(t, a, b)
			require.GreaterOrEqual(t, a, b, "msg")
			require.GreaterOrEqual(t, a, b, "msg with arg %d", 42)
			require.GreaterOrEqualf(t, a, b, "msg")
			require.GreaterOrEqualf(t, a, b, "msg with arg %d", 42)

			require.Less(t, a, b)
			require.Less(t, a, b, "msg")
			require.Less(t, a, b, "msg with arg %d", 42)
			require.Lessf(t, a, b, "msg")
			require.Lessf(t, a, b, "msg with arg %d", 42)

			require.LessOrEqual(t, a, b)
			require.LessOrEqual(t, a, b, "msg")
			require.LessOrEqual(t, a, b, "msg with arg %d", 42)
			require.LessOrEqualf(t, a, b, "msg")
			require.LessOrEqualf(t, a, b, "msg with arg %d", 42)
		}
	})
}
