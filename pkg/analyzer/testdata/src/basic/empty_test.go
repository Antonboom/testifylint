// Code generated by testifylint/internal/cmd/testgen. DO NOT EDIT.

package basic

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"github.com/stretchr/testify/suite"
)

func TestEmptyAsserts(t *testing.T) {
	var (
		arr    [0]int
		arrPtr *[0]int
		sl     []int
		mp     map[int]int
		str    string
		ch     chan int
	)

	t.Run("assert", func(t *testing.T) {
		// Empty.
		{
			{
				assert.Len(t, arr, 0)                         // want "empty: use assert\\.Empty"
				assert.Len(t, arr, 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Len(t, arr, 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lenf(t, arr, 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lenf(t, arr, 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, len(arr), 0)                         // want "empty: use assert\\.Empty"
				assert.Equal(t, len(arr), 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, len(arr), 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, len(arr), 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, len(arr), 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, 0, len(arr))                         // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(arr), "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, 0, len(arr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, 0, len(arr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Less(t, len(arr), 1)                         // want "empty: use assert\\.Empty"
				assert.Less(t, len(arr), 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.Less(t, len(arr), 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lessf(t, len(arr), 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lessf(t, len(arr), 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Greater(t, 1, len(arr))                         // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(arr), "msg")                  // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Greaterf(t, 1, len(arr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Greaterf(t, 1, len(arr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(arr) == 0)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(arr) == 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(arr) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(arr) == 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(arr) == 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 0 == len(arr))                         // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(arr), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 0 == len(arr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 0 == len(arr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(arr) < 1)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(arr) < 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(arr) < 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(arr) < 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(arr) < 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 1 > len(arr))                         // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(arr), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 1 > len(arr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 1 > len(arr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(arr) != 0)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(arr) != 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(arr) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(arr) != 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(arr) != 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 0 != len(arr))                         // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(arr), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 0 != len(arr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 0 != len(arr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(arr) >= 1)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(arr) >= 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(arr) >= 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(arr) >= 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 1 <= len(arr))                         // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(arr), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 1 <= len(arr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 1 <= len(arr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"
			}

			{
				assert.Len(t, arrPtr, 0)                         // want "empty: use assert\\.Empty"
				assert.Len(t, arrPtr, 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Len(t, arrPtr, 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lenf(t, arrPtr, 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lenf(t, arrPtr, 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, len(arrPtr), 0)                         // want "empty: use assert\\.Empty"
				assert.Equal(t, len(arrPtr), 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, len(arrPtr), 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, 0, len(arrPtr))                         // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(arrPtr), "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, 0, len(arrPtr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, 0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Less(t, len(arrPtr), 1)                         // want "empty: use assert\\.Empty"
				assert.Less(t, len(arrPtr), 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.Less(t, len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lessf(t, len(arrPtr), 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lessf(t, len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Greater(t, 1, len(arrPtr))                         // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(arrPtr), "msg")                  // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Greaterf(t, 1, len(arrPtr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Greaterf(t, 1, len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(arrPtr) == 0)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(arrPtr) == 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(arrPtr) == 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 0 == len(arrPtr))                         // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(arrPtr), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 0 == len(arrPtr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(arrPtr) < 1)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(arrPtr) < 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(arrPtr) < 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 1 > len(arrPtr))                         // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(arrPtr), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 1 > len(arrPtr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(arrPtr) != 0)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(arrPtr) != 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(arrPtr) != 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 0 != len(arrPtr))                         // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(arrPtr), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 0 != len(arrPtr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(arrPtr) >= 1)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(arrPtr) >= 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(arrPtr) >= 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 1 <= len(arrPtr))                         // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(arrPtr), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 1 <= len(arrPtr), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"
			}

			{
				assert.Len(t, sl, 0)                         // want "empty: use assert\\.Empty"
				assert.Len(t, sl, 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Len(t, sl, 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lenf(t, sl, 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lenf(t, sl, 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, len(sl), 0)                         // want "empty: use assert\\.Empty"
				assert.Equal(t, len(sl), 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, len(sl), 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, len(sl), 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, len(sl), 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, 0, len(sl))                         // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(sl), "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, 0, len(sl), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, 0, len(sl), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Less(t, len(sl), 1)                         // want "empty: use assert\\.Empty"
				assert.Less(t, len(sl), 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.Less(t, len(sl), 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lessf(t, len(sl), 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lessf(t, len(sl), 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Greater(t, 1, len(sl))                         // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(sl), "msg")                  // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Greaterf(t, 1, len(sl), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Greaterf(t, 1, len(sl), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(sl) == 0)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(sl) == 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(sl) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(sl) == 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(sl) == 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 0 == len(sl))                         // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(sl), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 0 == len(sl), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 0 == len(sl), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(sl) < 1)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(sl) < 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(sl) < 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(sl) < 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(sl) < 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 1 > len(sl))                         // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(sl), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 1 > len(sl), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 1 > len(sl), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(sl) != 0)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(sl) != 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(sl) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(sl) != 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(sl) != 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 0 != len(sl))                         // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(sl), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 0 != len(sl), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 0 != len(sl), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(sl) >= 1)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(sl) >= 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(sl) >= 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(sl) >= 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 1 <= len(sl))                         // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(sl), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 1 <= len(sl), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 1 <= len(sl), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"
			}

			{
				assert.Len(t, mp, 0)                         // want "empty: use assert\\.Empty"
				assert.Len(t, mp, 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Len(t, mp, 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lenf(t, mp, 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lenf(t, mp, 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, len(mp), 0)                         // want "empty: use assert\\.Empty"
				assert.Equal(t, len(mp), 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, len(mp), 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, len(mp), 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, len(mp), 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, 0, len(mp))                         // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(mp), "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, 0, len(mp), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, 0, len(mp), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Less(t, len(mp), 1)                         // want "empty: use assert\\.Empty"
				assert.Less(t, len(mp), 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.Less(t, len(mp), 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lessf(t, len(mp), 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lessf(t, len(mp), 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Greater(t, 1, len(mp))                         // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(mp), "msg")                  // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Greaterf(t, 1, len(mp), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Greaterf(t, 1, len(mp), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(mp) == 0)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(mp) == 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(mp) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(mp) == 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(mp) == 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 0 == len(mp))                         // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(mp), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 0 == len(mp), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 0 == len(mp), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(mp) < 1)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(mp) < 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(mp) < 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(mp) < 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(mp) < 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 1 > len(mp))                         // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(mp), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 1 > len(mp), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 1 > len(mp), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(mp) != 0)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(mp) != 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(mp) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(mp) != 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(mp) != 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 0 != len(mp))                         // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(mp), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 0 != len(mp), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 0 != len(mp), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(mp) >= 1)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(mp) >= 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(mp) >= 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(mp) >= 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 1 <= len(mp))                         // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(mp), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 1 <= len(mp), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 1 <= len(mp), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"
			}

			{
				assert.Len(t, str, 0)                         // want "empty: use assert\\.Empty"
				assert.Len(t, str, 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Len(t, str, 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lenf(t, str, 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lenf(t, str, 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, len(str), 0)                         // want "empty: use assert\\.Empty"
				assert.Equal(t, len(str), 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, len(str), 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, len(str), 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, len(str), 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, 0, len(str))                         // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(str), "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(str), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, 0, len(str), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, 0, len(str), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Less(t, len(str), 1)                         // want "empty: use assert\\.Empty"
				assert.Less(t, len(str), 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.Less(t, len(str), 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lessf(t, len(str), 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lessf(t, len(str), 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Greater(t, 1, len(str))                         // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(str), "msg")                  // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(str), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Greaterf(t, 1, len(str), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Greaterf(t, 1, len(str), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(str) == 0)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(str) == 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(str) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(str) == 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(str) == 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 0 == len(str))                         // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(str), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(str), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 0 == len(str), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 0 == len(str), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(str) < 1)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(str) < 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(str) < 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(str) < 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(str) < 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 1 > len(str))                         // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(str), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(str), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 1 > len(str), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 1 > len(str), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(str) != 0)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(str) != 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(str) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(str) != 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(str) != 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 0 != len(str))                         // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(str), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(str), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 0 != len(str), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 0 != len(str), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(str) >= 1)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(str) >= 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(str) >= 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(str) >= 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(str) >= 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 1 <= len(str))                         // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(str), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(str), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 1 <= len(str), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 1 <= len(str), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"
			}

			{
				assert.Len(t, ch, 0)                         // want "empty: use assert\\.Empty"
				assert.Len(t, ch, 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Len(t, ch, 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lenf(t, ch, 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lenf(t, ch, 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, len(ch), 0)                         // want "empty: use assert\\.Empty"
				assert.Equal(t, len(ch), 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, len(ch), 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, len(ch), 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, len(ch), 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Equal(t, 0, len(ch))                         // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(ch), "msg")                  // want "empty: use assert\\.Empty"
				assert.Equal(t, 0, len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Equalf(t, 0, len(ch), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Equalf(t, 0, len(ch), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Less(t, len(ch), 1)                         // want "empty: use assert\\.Empty"
				assert.Less(t, len(ch), 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.Less(t, len(ch), 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Lessf(t, len(ch), 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Lessf(t, len(ch), 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.Greater(t, 1, len(ch))                         // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(ch), "msg")                  // want "empty: use assert\\.Empty"
				assert.Greater(t, 1, len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Greaterf(t, 1, len(ch), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Greaterf(t, 1, len(ch), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(ch) == 0)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(ch) == 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(ch) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(ch) == 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(ch) == 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 0 == len(ch))                         // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(ch), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 0 == len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 0 == len(ch), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 0 == len(ch), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, len(ch) < 1)                         // want "empty: use assert\\.Empty"
				assert.True(t, len(ch) < 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, len(ch) < 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, len(ch) < 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, len(ch) < 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.True(t, 1 > len(ch))                         // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(ch), "msg")                  // want "empty: use assert\\.Empty"
				assert.True(t, 1 > len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Truef(t, 1 > len(ch), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Truef(t, 1 > len(ch), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(ch) != 0)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(ch) != 0, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(ch) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(ch) != 0, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(ch) != 0, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 0 != len(ch))                         // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(ch), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 0 != len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 0 != len(ch), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 0 != len(ch), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, len(ch) >= 1)                         // want "empty: use assert\\.Empty"
				assert.False(t, len(ch) >= 1, "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, len(ch) >= 1, "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, len(ch) >= 1, "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"

				assert.False(t, 1 <= len(ch))                         // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(ch), "msg")                  // want "empty: use assert\\.Empty"
				assert.False(t, 1 <= len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.Empty"
				assert.Falsef(t, 1 <= len(ch), "msg")                 // want "empty: use assert\\.Emptyf"
				assert.Falsef(t, 1 <= len(ch), "msg with arg %d", 42) // want "empty: use assert\\.Emptyf"
			}

			// Valid.

			{
				assert.Empty(t, arr)
				assert.Empty(t, arr, "msg")
				assert.Empty(t, arr, "msg with arg %d", 42)
				assert.Emptyf(t, arr, "msg")
				assert.Emptyf(t, arr, "msg with arg %d", 42)
			}

			{
				assert.Empty(t, arrPtr)
				assert.Empty(t, arrPtr, "msg")
				assert.Empty(t, arrPtr, "msg with arg %d", 42)
				assert.Emptyf(t, arrPtr, "msg")
				assert.Emptyf(t, arrPtr, "msg with arg %d", 42)
			}

			{
				assert.Empty(t, sl)
				assert.Empty(t, sl, "msg")
				assert.Empty(t, sl, "msg with arg %d", 42)
				assert.Emptyf(t, sl, "msg")
				assert.Emptyf(t, sl, "msg with arg %d", 42)
			}

			{
				assert.Empty(t, mp)
				assert.Empty(t, mp, "msg")
				assert.Empty(t, mp, "msg with arg %d", 42)
				assert.Emptyf(t, mp, "msg")
				assert.Emptyf(t, mp, "msg with arg %d", 42)
			}

			{
				assert.Empty(t, str)
				assert.Empty(t, str, "msg")
				assert.Empty(t, str, "msg with arg %d", 42)
				assert.Emptyf(t, str, "msg")
				assert.Emptyf(t, str, "msg with arg %d", 42)
			}

			{
				assert.Empty(t, ch)
				assert.Empty(t, ch, "msg")
				assert.Empty(t, ch, "msg with arg %d", 42)
				assert.Emptyf(t, ch, "msg")
				assert.Emptyf(t, ch, "msg with arg %d", 42)
			}
		}

		// NotEmpty.
		{
			{
				assert.NotEqual(t, len(arr), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(arr), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(arr), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, len(arr), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, len(arr), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.NotEqual(t, 0, len(arr))                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(arr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, 0, len(arr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, 0, len(arr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Greater(t, len(arr), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(arr), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(arr), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Greaterf(t, len(arr), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Greaterf(t, len(arr), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Less(t, 0, len(arr))                         // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(arr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Lessf(t, 0, len(arr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Lessf(t, 0, len(arr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(arr) != 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(arr) != 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(arr) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(arr) != 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(arr) != 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 != len(arr))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(arr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 != len(arr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 != len(arr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(arr) > 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(arr) > 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(arr) > 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(arr) > 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(arr) > 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 < len(arr))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(arr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 < len(arr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 < len(arr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, len(arr) == 0)                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(arr) == 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(arr) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, len(arr) == 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, len(arr) == 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, 0 == len(arr))                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(arr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(arr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, 0 == len(arr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, 0 == len(arr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"
			}

			{
				assert.NotEqual(t, len(arrPtr), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(arrPtr), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, len(arrPtr), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.NotEqual(t, 0, len(arrPtr))                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(arrPtr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, 0, len(arrPtr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, 0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Greater(t, len(arrPtr), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(arrPtr), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Greaterf(t, len(arrPtr), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Greaterf(t, len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Less(t, 0, len(arrPtr))                         // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(arrPtr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Lessf(t, 0, len(arrPtr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Lessf(t, 0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(arrPtr) != 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(arrPtr) != 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(arrPtr) != 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 != len(arrPtr))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(arrPtr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 != len(arrPtr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(arrPtr) > 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(arrPtr) > 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(arrPtr) > 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 < len(arrPtr))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(arrPtr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 < len(arrPtr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, len(arrPtr) == 0)                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(arrPtr) == 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, len(arrPtr) == 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, 0 == len(arrPtr))                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(arrPtr), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, 0 == len(arrPtr), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, 0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"
			}

			{
				assert.NotEqual(t, len(sl), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(sl), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(sl), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, len(sl), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, len(sl), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.NotEqual(t, 0, len(sl))                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(sl), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, 0, len(sl), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, 0, len(sl), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Greater(t, len(sl), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(sl), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(sl), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Greaterf(t, len(sl), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Greaterf(t, len(sl), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Less(t, 0, len(sl))                         // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(sl), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Lessf(t, 0, len(sl), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Lessf(t, 0, len(sl), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(sl) != 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(sl) != 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(sl) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(sl) != 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(sl) != 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 != len(sl))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(sl), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 != len(sl), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 != len(sl), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(sl) > 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(sl) > 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(sl) > 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(sl) > 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(sl) > 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 < len(sl))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(sl), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 < len(sl), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 < len(sl), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, len(sl) == 0)                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(sl) == 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(sl) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, len(sl) == 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, len(sl) == 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, 0 == len(sl))                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(sl), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(sl), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, 0 == len(sl), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, 0 == len(sl), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"
			}

			{
				assert.NotEqual(t, len(mp), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(mp), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(mp), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, len(mp), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, len(mp), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.NotEqual(t, 0, len(mp))                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(mp), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, 0, len(mp), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, 0, len(mp), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Greater(t, len(mp), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(mp), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(mp), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Greaterf(t, len(mp), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Greaterf(t, len(mp), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Less(t, 0, len(mp))                         // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(mp), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Lessf(t, 0, len(mp), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Lessf(t, 0, len(mp), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(mp) != 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(mp) != 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(mp) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(mp) != 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(mp) != 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 != len(mp))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(mp), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 != len(mp), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 != len(mp), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(mp) > 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(mp) > 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(mp) > 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(mp) > 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(mp) > 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 < len(mp))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(mp), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 < len(mp), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 < len(mp), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, len(mp) == 0)                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(mp) == 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(mp) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, len(mp) == 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, len(mp) == 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, 0 == len(mp))                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(mp), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(mp), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, 0 == len(mp), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, 0 == len(mp), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"
			}

			{
				assert.NotEqual(t, len(str), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(str), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(str), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, len(str), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, len(str), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.NotEqual(t, 0, len(str))                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(str), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(str), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, 0, len(str), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, 0, len(str), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Greater(t, len(str), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(str), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(str), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Greaterf(t, len(str), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Greaterf(t, len(str), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Less(t, 0, len(str))                         // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(str), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(str), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Lessf(t, 0, len(str), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Lessf(t, 0, len(str), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(str) != 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(str) != 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(str) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(str) != 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(str) != 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 != len(str))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(str), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(str), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 != len(str), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 != len(str), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(str) > 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(str) > 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(str) > 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(str) > 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(str) > 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 < len(str))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(str), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(str), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 < len(str), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 < len(str), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, len(str) == 0)                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(str) == 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(str) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, len(str) == 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, len(str) == 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, 0 == len(str))                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(str), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(str), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, 0 == len(str), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, 0 == len(str), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"
			}

			{
				assert.NotEqual(t, len(ch), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(ch), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, len(ch), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, len(ch), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, len(ch), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.NotEqual(t, 0, len(ch))                         // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(ch), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.NotEqual(t, 0, len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.NotEqualf(t, 0, len(ch), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.NotEqualf(t, 0, len(ch), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Greater(t, len(ch), 0)                         // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(ch), 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Greater(t, len(ch), 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Greaterf(t, len(ch), 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Greaterf(t, len(ch), 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.Less(t, 0, len(ch))                         // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(ch), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.Less(t, 0, len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Lessf(t, 0, len(ch), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Lessf(t, 0, len(ch), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(ch) != 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(ch) != 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(ch) != 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(ch) != 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(ch) != 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 != len(ch))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(ch), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 != len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 != len(ch), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 != len(ch), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, len(ch) > 0)                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(ch) > 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, len(ch) > 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, len(ch) > 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, len(ch) > 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.True(t, 0 < len(ch))                         // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(ch), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.True(t, 0 < len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Truef(t, 0 < len(ch), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Truef(t, 0 < len(ch), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, len(ch) == 0)                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(ch) == 0, "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, len(ch) == 0, "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, len(ch) == 0, "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, len(ch) == 0, "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"

				assert.False(t, 0 == len(ch))                         // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(ch), "msg")                  // want "empty: use assert\\.NotEmpty"
				assert.False(t, 0 == len(ch), "msg with arg %d", 42)  // want "empty: use assert\\.NotEmpty"
				assert.Falsef(t, 0 == len(ch), "msg")                 // want "empty: use assert\\.NotEmptyf"
				assert.Falsef(t, 0 == len(ch), "msg with arg %d", 42) // want "empty: use assert\\.NotEmptyf"
			}

			// Valid.

			{
				assert.NotEmpty(t, arr)
				assert.NotEmpty(t, arr, "msg")
				assert.NotEmpty(t, arr, "msg with arg %d", 42)
				assert.NotEmptyf(t, arr, "msg")
				assert.NotEmptyf(t, arr, "msg with arg %d", 42)
			}

			{
				assert.NotEmpty(t, arrPtr)
				assert.NotEmpty(t, arrPtr, "msg")
				assert.NotEmpty(t, arrPtr, "msg with arg %d", 42)
				assert.NotEmptyf(t, arrPtr, "msg")
				assert.NotEmptyf(t, arrPtr, "msg with arg %d", 42)
			}

			{
				assert.NotEmpty(t, sl)
				assert.NotEmpty(t, sl, "msg")
				assert.NotEmpty(t, sl, "msg with arg %d", 42)
				assert.NotEmptyf(t, sl, "msg")
				assert.NotEmptyf(t, sl, "msg with arg %d", 42)
			}

			{
				assert.NotEmpty(t, mp)
				assert.NotEmpty(t, mp, "msg")
				assert.NotEmpty(t, mp, "msg with arg %d", 42)
				assert.NotEmptyf(t, mp, "msg")
				assert.NotEmptyf(t, mp, "msg with arg %d", 42)
			}

			{
				assert.NotEmpty(t, str)
				assert.NotEmpty(t, str, "msg")
				assert.NotEmpty(t, str, "msg with arg %d", 42)
				assert.NotEmptyf(t, str, "msg")
				assert.NotEmptyf(t, str, "msg with arg %d", 42)
			}

			{
				assert.NotEmpty(t, ch)
				assert.NotEmpty(t, ch, "msg")
				assert.NotEmpty(t, ch, "msg with arg %d", 42)
				assert.NotEmptyf(t, ch, "msg")
				assert.NotEmptyf(t, ch, "msg with arg %d", 42)
			}
		}
	})

	t.Run("require", func(t *testing.T) {
		// Empty.
		{
			{
				require.Len(t, arr, 0)                         // want "empty: use require\\.Empty"
				require.Len(t, arr, 0, "msg")                  // want "empty: use require\\.Empty"
				require.Len(t, arr, 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lenf(t, arr, 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lenf(t, arr, 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, len(arr), 0)                         // want "empty: use require\\.Empty"
				require.Equal(t, len(arr), 0, "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, len(arr), 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, len(arr), 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, len(arr), 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, 0, len(arr))                         // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(arr), "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(arr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, 0, len(arr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, 0, len(arr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Less(t, len(arr), 1)                         // want "empty: use require\\.Empty"
				require.Less(t, len(arr), 1, "msg")                  // want "empty: use require\\.Empty"
				require.Less(t, len(arr), 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lessf(t, len(arr), 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lessf(t, len(arr), 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Greater(t, 1, len(arr))                         // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(arr), "msg")                  // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(arr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Greaterf(t, 1, len(arr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Greaterf(t, 1, len(arr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(arr) == 0)                         // want "empty: use require\\.Empty"
				require.True(t, len(arr) == 0, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(arr) == 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(arr) == 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(arr) == 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 0 == len(arr))                         // want "empty: use require\\.Empty"
				require.True(t, 0 == len(arr), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 0 == len(arr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 0 == len(arr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 0 == len(arr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(arr) < 1)                         // want "empty: use require\\.Empty"
				require.True(t, len(arr) < 1, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(arr) < 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(arr) < 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(arr) < 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 1 > len(arr))                         // want "empty: use require\\.Empty"
				require.True(t, 1 > len(arr), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 1 > len(arr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 1 > len(arr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 1 > len(arr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(arr) != 0)                         // want "empty: use require\\.Empty"
				require.False(t, len(arr) != 0, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(arr) != 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(arr) != 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(arr) != 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 0 != len(arr))                         // want "empty: use require\\.Empty"
				require.False(t, 0 != len(arr), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 0 != len(arr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 0 != len(arr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 0 != len(arr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(arr) >= 1)                         // want "empty: use require\\.Empty"
				require.False(t, len(arr) >= 1, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(arr) >= 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(arr) >= 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 1 <= len(arr))                         // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(arr), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(arr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 1 <= len(arr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 1 <= len(arr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"
			}

			{
				require.Len(t, arrPtr, 0)                         // want "empty: use require\\.Empty"
				require.Len(t, arrPtr, 0, "msg")                  // want "empty: use require\\.Empty"
				require.Len(t, arrPtr, 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lenf(t, arrPtr, 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lenf(t, arrPtr, 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, len(arrPtr), 0)                         // want "empty: use require\\.Empty"
				require.Equal(t, len(arrPtr), 0, "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, len(arrPtr), 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, 0, len(arrPtr))                         // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(arrPtr), "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, 0, len(arrPtr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, 0, len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Less(t, len(arrPtr), 1)                         // want "empty: use require\\.Empty"
				require.Less(t, len(arrPtr), 1, "msg")                  // want "empty: use require\\.Empty"
				require.Less(t, len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lessf(t, len(arrPtr), 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lessf(t, len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Greater(t, 1, len(arrPtr))                         // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(arrPtr), "msg")                  // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Greaterf(t, 1, len(arrPtr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Greaterf(t, 1, len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(arrPtr) == 0)                         // want "empty: use require\\.Empty"
				require.True(t, len(arrPtr) == 0, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(arrPtr) == 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 0 == len(arrPtr))                         // want "empty: use require\\.Empty"
				require.True(t, 0 == len(arrPtr), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 0 == len(arrPtr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(arrPtr) < 1)                         // want "empty: use require\\.Empty"
				require.True(t, len(arrPtr) < 1, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(arrPtr) < 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 1 > len(arrPtr))                         // want "empty: use require\\.Empty"
				require.True(t, 1 > len(arrPtr), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 1 > len(arrPtr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(arrPtr) != 0)                         // want "empty: use require\\.Empty"
				require.False(t, len(arrPtr) != 0, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(arrPtr) != 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 0 != len(arrPtr))                         // want "empty: use require\\.Empty"
				require.False(t, 0 != len(arrPtr), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 0 != len(arrPtr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(arrPtr) >= 1)                         // want "empty: use require\\.Empty"
				require.False(t, len(arrPtr) >= 1, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(arrPtr) >= 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 1 <= len(arrPtr))                         // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(arrPtr), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 1 <= len(arrPtr), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"
			}

			{
				require.Len(t, sl, 0)                         // want "empty: use require\\.Empty"
				require.Len(t, sl, 0, "msg")                  // want "empty: use require\\.Empty"
				require.Len(t, sl, 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lenf(t, sl, 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lenf(t, sl, 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, len(sl), 0)                         // want "empty: use require\\.Empty"
				require.Equal(t, len(sl), 0, "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, len(sl), 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, len(sl), 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, len(sl), 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, 0, len(sl))                         // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(sl), "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(sl), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, 0, len(sl), "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, 0, len(sl), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Less(t, len(sl), 1)                         // want "empty: use require\\.Empty"
				require.Less(t, len(sl), 1, "msg")                  // want "empty: use require\\.Empty"
				require.Less(t, len(sl), 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lessf(t, len(sl), 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lessf(t, len(sl), 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Greater(t, 1, len(sl))                         // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(sl), "msg")                  // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(sl), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Greaterf(t, 1, len(sl), "msg")                 // want "empty: use require\\.Emptyf"
				require.Greaterf(t, 1, len(sl), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(sl) == 0)                         // want "empty: use require\\.Empty"
				require.True(t, len(sl) == 0, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(sl) == 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(sl) == 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(sl) == 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 0 == len(sl))                         // want "empty: use require\\.Empty"
				require.True(t, 0 == len(sl), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 0 == len(sl), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 0 == len(sl), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 0 == len(sl), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(sl) < 1)                         // want "empty: use require\\.Empty"
				require.True(t, len(sl) < 1, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(sl) < 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(sl) < 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(sl) < 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 1 > len(sl))                         // want "empty: use require\\.Empty"
				require.True(t, 1 > len(sl), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 1 > len(sl), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 1 > len(sl), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 1 > len(sl), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(sl) != 0)                         // want "empty: use require\\.Empty"
				require.False(t, len(sl) != 0, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(sl) != 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(sl) != 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(sl) != 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 0 != len(sl))                         // want "empty: use require\\.Empty"
				require.False(t, 0 != len(sl), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 0 != len(sl), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 0 != len(sl), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 0 != len(sl), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(sl) >= 1)                         // want "empty: use require\\.Empty"
				require.False(t, len(sl) >= 1, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(sl) >= 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(sl) >= 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 1 <= len(sl))                         // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(sl), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(sl), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 1 <= len(sl), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 1 <= len(sl), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"
			}

			{
				require.Len(t, mp, 0)                         // want "empty: use require\\.Empty"
				require.Len(t, mp, 0, "msg")                  // want "empty: use require\\.Empty"
				require.Len(t, mp, 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lenf(t, mp, 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lenf(t, mp, 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, len(mp), 0)                         // want "empty: use require\\.Empty"
				require.Equal(t, len(mp), 0, "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, len(mp), 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, len(mp), 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, len(mp), 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, 0, len(mp))                         // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(mp), "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(mp), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, 0, len(mp), "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, 0, len(mp), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Less(t, len(mp), 1)                         // want "empty: use require\\.Empty"
				require.Less(t, len(mp), 1, "msg")                  // want "empty: use require\\.Empty"
				require.Less(t, len(mp), 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lessf(t, len(mp), 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lessf(t, len(mp), 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Greater(t, 1, len(mp))                         // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(mp), "msg")                  // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(mp), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Greaterf(t, 1, len(mp), "msg")                 // want "empty: use require\\.Emptyf"
				require.Greaterf(t, 1, len(mp), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(mp) == 0)                         // want "empty: use require\\.Empty"
				require.True(t, len(mp) == 0, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(mp) == 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(mp) == 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(mp) == 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 0 == len(mp))                         // want "empty: use require\\.Empty"
				require.True(t, 0 == len(mp), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 0 == len(mp), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 0 == len(mp), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 0 == len(mp), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(mp) < 1)                         // want "empty: use require\\.Empty"
				require.True(t, len(mp) < 1, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(mp) < 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(mp) < 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(mp) < 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 1 > len(mp))                         // want "empty: use require\\.Empty"
				require.True(t, 1 > len(mp), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 1 > len(mp), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 1 > len(mp), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 1 > len(mp), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(mp) != 0)                         // want "empty: use require\\.Empty"
				require.False(t, len(mp) != 0, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(mp) != 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(mp) != 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(mp) != 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 0 != len(mp))                         // want "empty: use require\\.Empty"
				require.False(t, 0 != len(mp), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 0 != len(mp), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 0 != len(mp), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 0 != len(mp), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(mp) >= 1)                         // want "empty: use require\\.Empty"
				require.False(t, len(mp) >= 1, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(mp) >= 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(mp) >= 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 1 <= len(mp))                         // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(mp), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(mp), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 1 <= len(mp), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 1 <= len(mp), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"
			}

			{
				require.Len(t, str, 0)                         // want "empty: use require\\.Empty"
				require.Len(t, str, 0, "msg")                  // want "empty: use require\\.Empty"
				require.Len(t, str, 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lenf(t, str, 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lenf(t, str, 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, len(str), 0)                         // want "empty: use require\\.Empty"
				require.Equal(t, len(str), 0, "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, len(str), 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, len(str), 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, len(str), 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, 0, len(str))                         // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(str), "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(str), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, 0, len(str), "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, 0, len(str), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Less(t, len(str), 1)                         // want "empty: use require\\.Empty"
				require.Less(t, len(str), 1, "msg")                  // want "empty: use require\\.Empty"
				require.Less(t, len(str), 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lessf(t, len(str), 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lessf(t, len(str), 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Greater(t, 1, len(str))                         // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(str), "msg")                  // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(str), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Greaterf(t, 1, len(str), "msg")                 // want "empty: use require\\.Emptyf"
				require.Greaterf(t, 1, len(str), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(str) == 0)                         // want "empty: use require\\.Empty"
				require.True(t, len(str) == 0, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(str) == 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(str) == 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(str) == 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 0 == len(str))                         // want "empty: use require\\.Empty"
				require.True(t, 0 == len(str), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 0 == len(str), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 0 == len(str), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 0 == len(str), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(str) < 1)                         // want "empty: use require\\.Empty"
				require.True(t, len(str) < 1, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(str) < 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(str) < 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(str) < 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 1 > len(str))                         // want "empty: use require\\.Empty"
				require.True(t, 1 > len(str), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 1 > len(str), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 1 > len(str), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 1 > len(str), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(str) != 0)                         // want "empty: use require\\.Empty"
				require.False(t, len(str) != 0, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(str) != 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(str) != 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(str) != 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 0 != len(str))                         // want "empty: use require\\.Empty"
				require.False(t, 0 != len(str), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 0 != len(str), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 0 != len(str), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 0 != len(str), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(str) >= 1)                         // want "empty: use require\\.Empty"
				require.False(t, len(str) >= 1, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(str) >= 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(str) >= 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(str) >= 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 1 <= len(str))                         // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(str), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(str), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 1 <= len(str), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 1 <= len(str), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"
			}

			{
				require.Len(t, ch, 0)                         // want "empty: use require\\.Empty"
				require.Len(t, ch, 0, "msg")                  // want "empty: use require\\.Empty"
				require.Len(t, ch, 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lenf(t, ch, 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lenf(t, ch, 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, len(ch), 0)                         // want "empty: use require\\.Empty"
				require.Equal(t, len(ch), 0, "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, len(ch), 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, len(ch), 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, len(ch), 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Equal(t, 0, len(ch))                         // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(ch), "msg")                  // want "empty: use require\\.Empty"
				require.Equal(t, 0, len(ch), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Equalf(t, 0, len(ch), "msg")                 // want "empty: use require\\.Emptyf"
				require.Equalf(t, 0, len(ch), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Less(t, len(ch), 1)                         // want "empty: use require\\.Empty"
				require.Less(t, len(ch), 1, "msg")                  // want "empty: use require\\.Empty"
				require.Less(t, len(ch), 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Lessf(t, len(ch), 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Lessf(t, len(ch), 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.Greater(t, 1, len(ch))                         // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(ch), "msg")                  // want "empty: use require\\.Empty"
				require.Greater(t, 1, len(ch), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Greaterf(t, 1, len(ch), "msg")                 // want "empty: use require\\.Emptyf"
				require.Greaterf(t, 1, len(ch), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(ch) == 0)                         // want "empty: use require\\.Empty"
				require.True(t, len(ch) == 0, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(ch) == 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(ch) == 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(ch) == 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 0 == len(ch))                         // want "empty: use require\\.Empty"
				require.True(t, 0 == len(ch), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 0 == len(ch), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 0 == len(ch), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 0 == len(ch), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, len(ch) < 1)                         // want "empty: use require\\.Empty"
				require.True(t, len(ch) < 1, "msg")                  // want "empty: use require\\.Empty"
				require.True(t, len(ch) < 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, len(ch) < 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, len(ch) < 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.True(t, 1 > len(ch))                         // want "empty: use require\\.Empty"
				require.True(t, 1 > len(ch), "msg")                  // want "empty: use require\\.Empty"
				require.True(t, 1 > len(ch), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Truef(t, 1 > len(ch), "msg")                 // want "empty: use require\\.Emptyf"
				require.Truef(t, 1 > len(ch), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(ch) != 0)                         // want "empty: use require\\.Empty"
				require.False(t, len(ch) != 0, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(ch) != 0, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(ch) != 0, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(ch) != 0, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 0 != len(ch))                         // want "empty: use require\\.Empty"
				require.False(t, 0 != len(ch), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 0 != len(ch), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 0 != len(ch), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 0 != len(ch), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, len(ch) >= 1)                         // want "empty: use require\\.Empty"
				require.False(t, len(ch) >= 1, "msg")                  // want "empty: use require\\.Empty"
				require.False(t, len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, len(ch) >= 1, "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, len(ch) >= 1, "msg with arg %d", 42) // want "empty: use require\\.Emptyf"

				require.False(t, 1 <= len(ch))                         // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(ch), "msg")                  // want "empty: use require\\.Empty"
				require.False(t, 1 <= len(ch), "msg with arg %d", 42)  // want "empty: use require\\.Empty"
				require.Falsef(t, 1 <= len(ch), "msg")                 // want "empty: use require\\.Emptyf"
				require.Falsef(t, 1 <= len(ch), "msg with arg %d", 42) // want "empty: use require\\.Emptyf"
			}

			// Valid.

			{
				require.Empty(t, arr)
				require.Empty(t, arr, "msg")
				require.Empty(t, arr, "msg with arg %d", 42)
				require.Emptyf(t, arr, "msg")
				require.Emptyf(t, arr, "msg with arg %d", 42)
			}

			{
				require.Empty(t, arrPtr)
				require.Empty(t, arrPtr, "msg")
				require.Empty(t, arrPtr, "msg with arg %d", 42)
				require.Emptyf(t, arrPtr, "msg")
				require.Emptyf(t, arrPtr, "msg with arg %d", 42)
			}

			{
				require.Empty(t, sl)
				require.Empty(t, sl, "msg")
				require.Empty(t, sl, "msg with arg %d", 42)
				require.Emptyf(t, sl, "msg")
				require.Emptyf(t, sl, "msg with arg %d", 42)
			}

			{
				require.Empty(t, mp)
				require.Empty(t, mp, "msg")
				require.Empty(t, mp, "msg with arg %d", 42)
				require.Emptyf(t, mp, "msg")
				require.Emptyf(t, mp, "msg with arg %d", 42)
			}

			{
				require.Empty(t, str)
				require.Empty(t, str, "msg")
				require.Empty(t, str, "msg with arg %d", 42)
				require.Emptyf(t, str, "msg")
				require.Emptyf(t, str, "msg with arg %d", 42)
			}

			{
				require.Empty(t, ch)
				require.Empty(t, ch, "msg")
				require.Empty(t, ch, "msg with arg %d", 42)
				require.Emptyf(t, ch, "msg")
				require.Emptyf(t, ch, "msg with arg %d", 42)
			}
		}

		// NotEmpty.
		{
			{
				require.NotEqual(t, len(arr), 0)                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(arr), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(arr), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, len(arr), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, len(arr), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.NotEqual(t, 0, len(arr))                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(arr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(arr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, 0, len(arr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, 0, len(arr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Greater(t, len(arr), 0)                         // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(arr), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(arr), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Greaterf(t, len(arr), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Greaterf(t, len(arr), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Less(t, 0, len(arr))                         // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(arr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(arr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Lessf(t, 0, len(arr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Lessf(t, 0, len(arr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(arr) != 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(arr) != 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(arr) != 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(arr) != 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(arr) != 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 != len(arr))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(arr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(arr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 != len(arr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 != len(arr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(arr) > 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(arr) > 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(arr) > 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(arr) > 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(arr) > 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 < len(arr))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(arr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(arr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 < len(arr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 < len(arr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, len(arr) == 0)                         // want "empty: use require\\.NotEmpty"
				require.False(t, len(arr) == 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, len(arr) == 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, len(arr) == 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, len(arr) == 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, 0 == len(arr))                         // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(arr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(arr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, 0 == len(arr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, 0 == len(arr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"
			}

			{
				require.NotEqual(t, len(arrPtr), 0)                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(arrPtr), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, len(arrPtr), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.NotEqual(t, 0, len(arrPtr))                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(arrPtr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, 0, len(arrPtr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, 0, len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Greater(t, len(arrPtr), 0)                         // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(arrPtr), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Greaterf(t, len(arrPtr), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Greaterf(t, len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Less(t, 0, len(arrPtr))                         // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(arrPtr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Lessf(t, 0, len(arrPtr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Lessf(t, 0, len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(arrPtr) != 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(arrPtr) != 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(arrPtr) != 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 != len(arrPtr))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(arrPtr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 != len(arrPtr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(arrPtr) > 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(arrPtr) > 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(arrPtr) > 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 < len(arrPtr))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(arrPtr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 < len(arrPtr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, len(arrPtr) == 0)                         // want "empty: use require\\.NotEmpty"
				require.False(t, len(arrPtr) == 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, len(arrPtr) == 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, 0 == len(arrPtr))                         // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(arrPtr), "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, 0 == len(arrPtr), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, 0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"
			}

			{
				require.NotEqual(t, len(sl), 0)                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(sl), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(sl), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, len(sl), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, len(sl), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.NotEqual(t, 0, len(sl))                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(sl), "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(sl), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, 0, len(sl), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, 0, len(sl), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Greater(t, len(sl), 0)                         // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(sl), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(sl), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Greaterf(t, len(sl), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Greaterf(t, len(sl), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Less(t, 0, len(sl))                         // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(sl), "msg")                  // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(sl), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Lessf(t, 0, len(sl), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Lessf(t, 0, len(sl), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(sl) != 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(sl) != 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(sl) != 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(sl) != 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(sl) != 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 != len(sl))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(sl), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(sl), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 != len(sl), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 != len(sl), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(sl) > 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(sl) > 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(sl) > 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(sl) > 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(sl) > 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 < len(sl))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(sl), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(sl), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 < len(sl), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 < len(sl), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, len(sl) == 0)                         // want "empty: use require\\.NotEmpty"
				require.False(t, len(sl) == 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, len(sl) == 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, len(sl) == 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, len(sl) == 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, 0 == len(sl))                         // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(sl), "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(sl), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, 0 == len(sl), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, 0 == len(sl), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"
			}

			{
				require.NotEqual(t, len(mp), 0)                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(mp), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(mp), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, len(mp), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, len(mp), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.NotEqual(t, 0, len(mp))                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(mp), "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(mp), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, 0, len(mp), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, 0, len(mp), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Greater(t, len(mp), 0)                         // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(mp), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(mp), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Greaterf(t, len(mp), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Greaterf(t, len(mp), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Less(t, 0, len(mp))                         // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(mp), "msg")                  // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(mp), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Lessf(t, 0, len(mp), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Lessf(t, 0, len(mp), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(mp) != 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(mp) != 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(mp) != 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(mp) != 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(mp) != 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 != len(mp))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(mp), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(mp), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 != len(mp), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 != len(mp), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(mp) > 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(mp) > 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(mp) > 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(mp) > 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(mp) > 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 < len(mp))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(mp), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(mp), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 < len(mp), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 < len(mp), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, len(mp) == 0)                         // want "empty: use require\\.NotEmpty"
				require.False(t, len(mp) == 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, len(mp) == 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, len(mp) == 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, len(mp) == 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, 0 == len(mp))                         // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(mp), "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(mp), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, 0 == len(mp), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, 0 == len(mp), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"
			}

			{
				require.NotEqual(t, len(str), 0)                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(str), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(str), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, len(str), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, len(str), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.NotEqual(t, 0, len(str))                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(str), "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(str), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, 0, len(str), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, 0, len(str), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Greater(t, len(str), 0)                         // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(str), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(str), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Greaterf(t, len(str), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Greaterf(t, len(str), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Less(t, 0, len(str))                         // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(str), "msg")                  // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(str), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Lessf(t, 0, len(str), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Lessf(t, 0, len(str), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(str) != 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(str) != 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(str) != 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(str) != 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(str) != 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 != len(str))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(str), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(str), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 != len(str), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 != len(str), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(str) > 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(str) > 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(str) > 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(str) > 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(str) > 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 < len(str))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(str), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(str), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 < len(str), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 < len(str), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, len(str) == 0)                         // want "empty: use require\\.NotEmpty"
				require.False(t, len(str) == 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, len(str) == 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, len(str) == 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, len(str) == 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, 0 == len(str))                         // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(str), "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(str), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, 0 == len(str), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, 0 == len(str), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"
			}

			{
				require.NotEqual(t, len(ch), 0)                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(ch), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, len(ch), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, len(ch), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, len(ch), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.NotEqual(t, 0, len(ch))                         // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(ch), "msg")                  // want "empty: use require\\.NotEmpty"
				require.NotEqual(t, 0, len(ch), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.NotEqualf(t, 0, len(ch), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.NotEqualf(t, 0, len(ch), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Greater(t, len(ch), 0)                         // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(ch), 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.Greater(t, len(ch), 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Greaterf(t, len(ch), 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Greaterf(t, len(ch), 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.Less(t, 0, len(ch))                         // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(ch), "msg")                  // want "empty: use require\\.NotEmpty"
				require.Less(t, 0, len(ch), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Lessf(t, 0, len(ch), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Lessf(t, 0, len(ch), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(ch) != 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(ch) != 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(ch) != 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(ch) != 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(ch) != 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 != len(ch))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(ch), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 != len(ch), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 != len(ch), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 != len(ch), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, len(ch) > 0)                         // want "empty: use require\\.NotEmpty"
				require.True(t, len(ch) > 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, len(ch) > 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, len(ch) > 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, len(ch) > 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.True(t, 0 < len(ch))                         // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(ch), "msg")                  // want "empty: use require\\.NotEmpty"
				require.True(t, 0 < len(ch), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Truef(t, 0 < len(ch), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Truef(t, 0 < len(ch), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, len(ch) == 0)                         // want "empty: use require\\.NotEmpty"
				require.False(t, len(ch) == 0, "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, len(ch) == 0, "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, len(ch) == 0, "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, len(ch) == 0, "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"

				require.False(t, 0 == len(ch))                         // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(ch), "msg")                  // want "empty: use require\\.NotEmpty"
				require.False(t, 0 == len(ch), "msg with arg %d", 42)  // want "empty: use require\\.NotEmpty"
				require.Falsef(t, 0 == len(ch), "msg")                 // want "empty: use require\\.NotEmptyf"
				require.Falsef(t, 0 == len(ch), "msg with arg %d", 42) // want "empty: use require\\.NotEmptyf"
			}

			// Valid.

			{
				require.NotEmpty(t, arr)
				require.NotEmpty(t, arr, "msg")
				require.NotEmpty(t, arr, "msg with arg %d", 42)
				require.NotEmptyf(t, arr, "msg")
				require.NotEmptyf(t, arr, "msg with arg %d", 42)
			}

			{
				require.NotEmpty(t, arrPtr)
				require.NotEmpty(t, arrPtr, "msg")
				require.NotEmpty(t, arrPtr, "msg with arg %d", 42)
				require.NotEmptyf(t, arrPtr, "msg")
				require.NotEmptyf(t, arrPtr, "msg with arg %d", 42)
			}

			{
				require.NotEmpty(t, sl)
				require.NotEmpty(t, sl, "msg")
				require.NotEmpty(t, sl, "msg with arg %d", 42)
				require.NotEmptyf(t, sl, "msg")
				require.NotEmptyf(t, sl, "msg with arg %d", 42)
			}

			{
				require.NotEmpty(t, mp)
				require.NotEmpty(t, mp, "msg")
				require.NotEmpty(t, mp, "msg with arg %d", 42)
				require.NotEmptyf(t, mp, "msg")
				require.NotEmptyf(t, mp, "msg with arg %d", 42)
			}

			{
				require.NotEmpty(t, str)
				require.NotEmpty(t, str, "msg")
				require.NotEmpty(t, str, "msg with arg %d", 42)
				require.NotEmptyf(t, str, "msg")
				require.NotEmptyf(t, str, "msg with arg %d", 42)
			}

			{
				require.NotEmpty(t, ch)
				require.NotEmpty(t, ch, "msg")
				require.NotEmpty(t, ch, "msg with arg %d", 42)
				require.NotEmptyf(t, ch, "msg")
				require.NotEmptyf(t, ch, "msg with arg %d", 42)
			}
		}
	})

	assObj, reqObj := assert.New(t), require.New(t)

	t.Run("assObj", func(t *testing.T) {
		// Empty.
		{
			{
				assObj.Len(arr, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(arr, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(arr, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(arr, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(arr, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(arr), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(arr), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(arr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(arr), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(arr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(arr), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(arr), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(arr), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(arr), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(arr), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(arr) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(arr) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(arr) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(arr) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(arr) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(arr) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(arr) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(arr) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(arr) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(arr) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(arr) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(arr) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(arr) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(arr) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(arr) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(arrPtr, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(arrPtr, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(arrPtr, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(arrPtr, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(arrPtr, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(arrPtr), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(arrPtr), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(arrPtr), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(arrPtr), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(arrPtr), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(arrPtr), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(arrPtr) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(arrPtr) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(arrPtr) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(arrPtr) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(arrPtr) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(arrPtr) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(arrPtr) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(arrPtr) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(arrPtr) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(arrPtr) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(arrPtr) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(arrPtr) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(sl, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(sl, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(sl, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(sl, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(sl, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(sl), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(sl), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(sl), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(sl), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(sl), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(sl), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(sl), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(sl), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(sl), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(sl), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(sl) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(sl) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(sl) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(sl) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(sl) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(sl) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(sl) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(sl) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(sl) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(sl) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(sl) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(sl) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(sl) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(sl) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(sl) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(mp, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(mp, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(mp, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(mp, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(mp, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(mp), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(mp), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(mp), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(mp), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(mp), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(mp), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(mp), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(mp), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(mp), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(mp), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(mp) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(mp) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(mp) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(mp) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(mp) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(mp) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(mp) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(mp) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(mp) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(mp) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(mp) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(mp) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(mp) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(mp) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(mp) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(str, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(str, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(str, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(str, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(str, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(str), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(str), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(str), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(str), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(str), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(str))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(str), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(str), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(str), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(str), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(str), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(str))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(str) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(str) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(str) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(str) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(str) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(str))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(str) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(str) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(str) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(str) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(str) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(str))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(str) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(str) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(str) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(str) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(str) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(str))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(str) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(str) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(str) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(str) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(str) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(str))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(ch, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(ch, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(ch, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(ch, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(ch, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(ch), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(ch), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(ch), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(ch), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(ch), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(ch), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(ch), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(ch), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(ch), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(ch), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(ch) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(ch) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(ch) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(ch) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(ch) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(ch) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(ch) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(ch) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(ch) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(ch) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(ch) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(ch) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(ch) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(ch) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(ch) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			// Valid.

			{
				assObj.Empty(arr)
				assObj.Empty(arr, "msg")
				assObj.Empty(arr, "msg with arg %d", 42)
				assObj.Emptyf(arr, "msg")
				assObj.Emptyf(arr, "msg with arg %d", 42)
			}

			{
				assObj.Empty(arrPtr)
				assObj.Empty(arrPtr, "msg")
				assObj.Empty(arrPtr, "msg with arg %d", 42)
				assObj.Emptyf(arrPtr, "msg")
				assObj.Emptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				assObj.Empty(sl)
				assObj.Empty(sl, "msg")
				assObj.Empty(sl, "msg with arg %d", 42)
				assObj.Emptyf(sl, "msg")
				assObj.Emptyf(sl, "msg with arg %d", 42)
			}

			{
				assObj.Empty(mp)
				assObj.Empty(mp, "msg")
				assObj.Empty(mp, "msg with arg %d", 42)
				assObj.Emptyf(mp, "msg")
				assObj.Emptyf(mp, "msg with arg %d", 42)
			}

			{
				assObj.Empty(str)
				assObj.Empty(str, "msg")
				assObj.Empty(str, "msg with arg %d", 42)
				assObj.Emptyf(str, "msg")
				assObj.Emptyf(str, "msg with arg %d", 42)
			}

			{
				assObj.Empty(ch)
				assObj.Empty(ch, "msg")
				assObj.Empty(ch, "msg with arg %d", 42)
				assObj.Emptyf(ch, "msg")
				assObj.Emptyf(ch, "msg with arg %d", 42)
			}
		}

		// NotEmpty.
		{
			{
				assObj.NotEqual(len(arr), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(arr), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(arr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(arr), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(arr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(arr), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(arr), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(arr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(arr), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(arr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(arr) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arr) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(arr) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(arr) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arr) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arr) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(arr) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(arr) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(arr) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(arr) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(arr) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(arrPtr), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(arrPtr), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(arrPtr), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(arrPtr), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(arrPtr), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(arrPtr), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(arrPtr) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arrPtr) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(arrPtr) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(arrPtr) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arrPtr) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(arrPtr) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(arrPtr) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(arrPtr) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(arrPtr) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(sl), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(sl), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(sl), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(sl), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(sl), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(sl), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(sl), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(sl), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(sl), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(sl), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(sl) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(sl) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(sl) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(sl) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(sl) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(sl) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(sl) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(sl) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(sl) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(sl) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(sl) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(mp), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(mp), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(mp), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(mp), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(mp), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(mp), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(mp), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(mp), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(mp), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(mp), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(mp) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(mp) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(mp) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(mp) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(mp) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(mp) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(mp) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(mp) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(mp) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(mp) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(mp) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(str), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(str), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(str), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(str), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(str), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(str), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(str), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(str), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(str), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(str), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(str) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(str) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(str) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(str) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(str) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(str) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(str) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(str) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(str) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(str) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(str) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(str) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(str) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(str) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(str) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(ch), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(ch), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(ch), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(ch), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(ch), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(ch), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(ch), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(ch), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(ch), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(ch), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(ch) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(ch) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(ch) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(ch) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(ch) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(ch) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(ch) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(ch) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(ch) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(ch) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(ch) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			// Valid.

			{
				assObj.NotEmpty(arr)
				assObj.NotEmpty(arr, "msg")
				assObj.NotEmpty(arr, "msg with arg %d", 42)
				assObj.NotEmptyf(arr, "msg")
				assObj.NotEmptyf(arr, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(arrPtr)
				assObj.NotEmpty(arrPtr, "msg")
				assObj.NotEmpty(arrPtr, "msg with arg %d", 42)
				assObj.NotEmptyf(arrPtr, "msg")
				assObj.NotEmptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(sl)
				assObj.NotEmpty(sl, "msg")
				assObj.NotEmpty(sl, "msg with arg %d", 42)
				assObj.NotEmptyf(sl, "msg")
				assObj.NotEmptyf(sl, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(mp)
				assObj.NotEmpty(mp, "msg")
				assObj.NotEmpty(mp, "msg with arg %d", 42)
				assObj.NotEmptyf(mp, "msg")
				assObj.NotEmptyf(mp, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(str)
				assObj.NotEmpty(str, "msg")
				assObj.NotEmpty(str, "msg with arg %d", 42)
				assObj.NotEmptyf(str, "msg")
				assObj.NotEmptyf(str, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(ch)
				assObj.NotEmpty(ch, "msg")
				assObj.NotEmpty(ch, "msg with arg %d", 42)
				assObj.NotEmptyf(ch, "msg")
				assObj.NotEmptyf(ch, "msg with arg %d", 42)
			}
		}
	})

	t.Run("reqObj", func(t *testing.T) {
		// Empty.
		{
			{
				reqObj.Len(arr, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(arr, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(arr, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(arr, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(arr, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(arr), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(arr), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(arr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(arr), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(arr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(arr), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(arr), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(arr), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(arr), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(arr), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(arr) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arr) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(arr) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(arr) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arr) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arr) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(arr) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(arr) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(arr) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arr) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(arr) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(arr) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arr) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(arr) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(arr) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(arrPtr, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(arrPtr, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(arrPtr, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(arrPtr, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(arrPtr, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(arrPtr), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(arrPtr), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(arrPtr), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(arrPtr), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(arrPtr), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(arrPtr), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(arrPtr) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arrPtr) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(arrPtr) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(arrPtr) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arrPtr) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(arrPtr) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(arrPtr) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arrPtr) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(arrPtr) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(arrPtr) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arrPtr) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(arrPtr) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(sl, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(sl, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(sl, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(sl, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(sl, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(sl), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(sl), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(sl), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(sl), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(sl), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(sl), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(sl), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(sl), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(sl), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(sl), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(sl) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(sl) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(sl) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(sl) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(sl) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(sl) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(sl) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(sl) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(sl) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(sl) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(sl) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(sl) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(sl) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(sl) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(sl) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(mp, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(mp, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(mp, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(mp, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(mp, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(mp), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(mp), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(mp), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(mp), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(mp), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(mp), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(mp), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(mp), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(mp), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(mp), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(mp) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(mp) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(mp) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(mp) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(mp) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(mp) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(mp) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(mp) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(mp) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(mp) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(mp) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(mp) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(mp) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(mp) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(mp) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(str, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(str, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(str, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(str, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(str, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(str), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(str), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(str), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(str), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(str), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(str), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(str), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(str), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(str), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(str), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(str) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(str) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(str) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(str) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(str) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(str) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(str) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(str) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(str) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(str) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(str) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(str) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(str) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(str) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(str) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(str) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(str) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(str) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(str) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(str) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(ch, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(ch, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(ch, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(ch, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(ch, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(ch), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(ch), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(ch), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(ch), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(ch), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(ch), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(ch), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(ch), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(ch), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(ch), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(ch) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(ch) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(ch) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(ch) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(ch) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(ch) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(ch) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(ch) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(ch) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(ch) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(ch) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(ch) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(ch) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(ch) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(ch) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			// Valid.

			{
				reqObj.Empty(arr)
				reqObj.Empty(arr, "msg")
				reqObj.Empty(arr, "msg with arg %d", 42)
				reqObj.Emptyf(arr, "msg")
				reqObj.Emptyf(arr, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(arrPtr)
				reqObj.Empty(arrPtr, "msg")
				reqObj.Empty(arrPtr, "msg with arg %d", 42)
				reqObj.Emptyf(arrPtr, "msg")
				reqObj.Emptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(sl)
				reqObj.Empty(sl, "msg")
				reqObj.Empty(sl, "msg with arg %d", 42)
				reqObj.Emptyf(sl, "msg")
				reqObj.Emptyf(sl, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(mp)
				reqObj.Empty(mp, "msg")
				reqObj.Empty(mp, "msg with arg %d", 42)
				reqObj.Emptyf(mp, "msg")
				reqObj.Emptyf(mp, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(str)
				reqObj.Empty(str, "msg")
				reqObj.Empty(str, "msg with arg %d", 42)
				reqObj.Emptyf(str, "msg")
				reqObj.Emptyf(str, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(ch)
				reqObj.Empty(ch, "msg")
				reqObj.Empty(ch, "msg with arg %d", 42)
				reqObj.Emptyf(ch, "msg")
				reqObj.Emptyf(ch, "msg with arg %d", 42)
			}
		}

		// NotEmpty.
		{
			{
				reqObj.NotEqual(len(arr), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(arr), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(arr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(arr), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(arr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(arr), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(arr), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(arr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(arr), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(arr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(arr) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arr) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(arr) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(arr) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arr) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arr) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(arr) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(arr) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(arr) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(arr) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(arr) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(arrPtr), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(arrPtr), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(arrPtr), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(arrPtr), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(arrPtr), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(arrPtr), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(arrPtr) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arrPtr) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(arrPtr) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(arrPtr) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arrPtr) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(arrPtr) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(arrPtr) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(arrPtr) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(arrPtr) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(sl), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(sl), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(sl), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(sl), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(sl), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(sl), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(sl), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(sl), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(sl), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(sl), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(sl) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(sl) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(sl) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(sl) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(sl) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(sl) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(sl) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(sl) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(sl) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(sl) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(sl) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(mp), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(mp), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(mp), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(mp), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(mp), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(mp), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(mp), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(mp), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(mp), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(mp), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(mp) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(mp) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(mp) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(mp) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(mp) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(mp) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(mp) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(mp) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(mp) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(mp) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(mp) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(str), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(str), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(str), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(str), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(str), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(str), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(str), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(str), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(str), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(str), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(str) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(str) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(str) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(str) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(str) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(str) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(str) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(str) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(str) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(str) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(str) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(str) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(str) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(str) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(str) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(ch), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(ch), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(ch), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(ch), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(ch), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(ch), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(ch), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(ch), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(ch), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(ch), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(ch) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(ch) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(ch) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(ch) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(ch) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(ch) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(ch) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(ch) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(ch) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(ch) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(ch) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			// Valid.

			{
				reqObj.NotEmpty(arr)
				reqObj.NotEmpty(arr, "msg")
				reqObj.NotEmpty(arr, "msg with arg %d", 42)
				reqObj.NotEmptyf(arr, "msg")
				reqObj.NotEmptyf(arr, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(arrPtr)
				reqObj.NotEmpty(arrPtr, "msg")
				reqObj.NotEmpty(arrPtr, "msg with arg %d", 42)
				reqObj.NotEmptyf(arrPtr, "msg")
				reqObj.NotEmptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(sl)
				reqObj.NotEmpty(sl, "msg")
				reqObj.NotEmpty(sl, "msg with arg %d", 42)
				reqObj.NotEmptyf(sl, "msg")
				reqObj.NotEmptyf(sl, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(mp)
				reqObj.NotEmpty(mp, "msg")
				reqObj.NotEmpty(mp, "msg with arg %d", 42)
				reqObj.NotEmptyf(mp, "msg")
				reqObj.NotEmptyf(mp, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(str)
				reqObj.NotEmpty(str, "msg")
				reqObj.NotEmpty(str, "msg with arg %d", 42)
				reqObj.NotEmptyf(str, "msg")
				reqObj.NotEmptyf(str, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(ch)
				reqObj.NotEmpty(ch, "msg")
				reqObj.NotEmpty(ch, "msg with arg %d", 42)
				reqObj.NotEmptyf(ch, "msg")
				reqObj.NotEmptyf(ch, "msg with arg %d", 42)
			}
		}
	})
}

type EmptySuite struct {
	suite.Suite
}

func TestEmptySuite(t *testing.T) {
	suite.Run(t, new(EmptySuite))
}

func (s *EmptySuite) TestAll() {
	var (
		arr    [0]int
		arrPtr *[0]int
		sl     []int
		mp     map[int]int
		str    string
		ch     chan int
	)

	assObj, reqObj := s.Assert(), s.Require()
	// Empty.
	{
		{
			{
				s.Len(arr, 0)                         // want "empty: use s\\.Empty"
				s.Len(arr, 0, "msg")                  // want "empty: use s\\.Empty"
				s.Len(arr, 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lenf(arr, 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lenf(arr, 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(len(arr), 0)                         // want "empty: use s\\.Empty"
				s.Equal(len(arr), 0, "msg")                  // want "empty: use s\\.Empty"
				s.Equal(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(len(arr), 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(0, len(arr))                         // want "empty: use s\\.Empty"
				s.Equal(0, len(arr), "msg")                  // want "empty: use s\\.Empty"
				s.Equal(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(0, len(arr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Less(len(arr), 1)                         // want "empty: use s\\.Empty"
				s.Less(len(arr), 1, "msg")                  // want "empty: use s\\.Empty"
				s.Less(len(arr), 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lessf(len(arr), 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lessf(len(arr), 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Greater(1, len(arr))                         // want "empty: use s\\.Empty"
				s.Greater(1, len(arr), "msg")                  // want "empty: use s\\.Empty"
				s.Greater(1, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Greaterf(1, len(arr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Greaterf(1, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(arr) == 0)                         // want "empty: use s\\.Empty"
				s.True(len(arr) == 0, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(arr) == 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(0 == len(arr))                         // want "empty: use s\\.Empty"
				s.True(0 == len(arr), "msg")                  // want "empty: use s\\.Empty"
				s.True(0 == len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(0 == len(arr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(0 == len(arr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(arr) < 1)                         // want "empty: use s\\.Empty"
				s.True(len(arr) < 1, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(arr) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(arr) < 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(arr) < 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(1 > len(arr))                         // want "empty: use s\\.Empty"
				s.True(1 > len(arr), "msg")                  // want "empty: use s\\.Empty"
				s.True(1 > len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(1 > len(arr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(1 > len(arr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(arr) != 0)                         // want "empty: use s\\.Empty"
				s.False(len(arr) != 0, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(arr) != 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(0 != len(arr))                         // want "empty: use s\\.Empty"
				s.False(0 != len(arr), "msg")                  // want "empty: use s\\.Empty"
				s.False(0 != len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(0 != len(arr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(0 != len(arr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(arr) >= 1)                         // want "empty: use s\\.Empty"
				s.False(len(arr) >= 1, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(arr) >= 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(arr) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(1 <= len(arr))                         // want "empty: use s\\.Empty"
				s.False(1 <= len(arr), "msg")                  // want "empty: use s\\.Empty"
				s.False(1 <= len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(1 <= len(arr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(1 <= len(arr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"
			}

			{
				s.Len(arrPtr, 0)                         // want "empty: use s\\.Empty"
				s.Len(arrPtr, 0, "msg")                  // want "empty: use s\\.Empty"
				s.Len(arrPtr, 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lenf(arrPtr, 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lenf(arrPtr, 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(len(arrPtr), 0)                         // want "empty: use s\\.Empty"
				s.Equal(len(arrPtr), 0, "msg")                  // want "empty: use s\\.Empty"
				s.Equal(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(0, len(arrPtr))                         // want "empty: use s\\.Empty"
				s.Equal(0, len(arrPtr), "msg")                  // want "empty: use s\\.Empty"
				s.Equal(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(0, len(arrPtr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Less(len(arrPtr), 1)                         // want "empty: use s\\.Empty"
				s.Less(len(arrPtr), 1, "msg")                  // want "empty: use s\\.Empty"
				s.Less(len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lessf(len(arrPtr), 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lessf(len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Greater(1, len(arrPtr))                         // want "empty: use s\\.Empty"
				s.Greater(1, len(arrPtr), "msg")                  // want "empty: use s\\.Empty"
				s.Greater(1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Greaterf(1, len(arrPtr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Greaterf(1, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(arrPtr) == 0)                         // want "empty: use s\\.Empty"
				s.True(len(arrPtr) == 0, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(arrPtr) == 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(0 == len(arrPtr))                         // want "empty: use s\\.Empty"
				s.True(0 == len(arrPtr), "msg")                  // want "empty: use s\\.Empty"
				s.True(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(0 == len(arrPtr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(arrPtr) < 1)                         // want "empty: use s\\.Empty"
				s.True(len(arrPtr) < 1, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(arrPtr) < 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(1 > len(arrPtr))                         // want "empty: use s\\.Empty"
				s.True(1 > len(arrPtr), "msg")                  // want "empty: use s\\.Empty"
				s.True(1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(1 > len(arrPtr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(arrPtr) != 0)                         // want "empty: use s\\.Empty"
				s.False(len(arrPtr) != 0, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(arrPtr) != 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(0 != len(arrPtr))                         // want "empty: use s\\.Empty"
				s.False(0 != len(arrPtr), "msg")                  // want "empty: use s\\.Empty"
				s.False(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(0 != len(arrPtr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(arrPtr) >= 1)                         // want "empty: use s\\.Empty"
				s.False(len(arrPtr) >= 1, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(arrPtr) >= 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(1 <= len(arrPtr))                         // want "empty: use s\\.Empty"
				s.False(1 <= len(arrPtr), "msg")                  // want "empty: use s\\.Empty"
				s.False(1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(1 <= len(arrPtr), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"
			}

			{
				s.Len(sl, 0)                         // want "empty: use s\\.Empty"
				s.Len(sl, 0, "msg")                  // want "empty: use s\\.Empty"
				s.Len(sl, 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lenf(sl, 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lenf(sl, 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(len(sl), 0)                         // want "empty: use s\\.Empty"
				s.Equal(len(sl), 0, "msg")                  // want "empty: use s\\.Empty"
				s.Equal(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(len(sl), 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(0, len(sl))                         // want "empty: use s\\.Empty"
				s.Equal(0, len(sl), "msg")                  // want "empty: use s\\.Empty"
				s.Equal(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(0, len(sl), "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Less(len(sl), 1)                         // want "empty: use s\\.Empty"
				s.Less(len(sl), 1, "msg")                  // want "empty: use s\\.Empty"
				s.Less(len(sl), 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lessf(len(sl), 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lessf(len(sl), 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Greater(1, len(sl))                         // want "empty: use s\\.Empty"
				s.Greater(1, len(sl), "msg")                  // want "empty: use s\\.Empty"
				s.Greater(1, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Greaterf(1, len(sl), "msg")                 // want "empty: use s\\.Emptyf"
				s.Greaterf(1, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(sl) == 0)                         // want "empty: use s\\.Empty"
				s.True(len(sl) == 0, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(sl) == 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(0 == len(sl))                         // want "empty: use s\\.Empty"
				s.True(0 == len(sl), "msg")                  // want "empty: use s\\.Empty"
				s.True(0 == len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(0 == len(sl), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(0 == len(sl), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(sl) < 1)                         // want "empty: use s\\.Empty"
				s.True(len(sl) < 1, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(sl) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(sl) < 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(sl) < 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(1 > len(sl))                         // want "empty: use s\\.Empty"
				s.True(1 > len(sl), "msg")                  // want "empty: use s\\.Empty"
				s.True(1 > len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(1 > len(sl), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(1 > len(sl), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(sl) != 0)                         // want "empty: use s\\.Empty"
				s.False(len(sl) != 0, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(sl) != 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(0 != len(sl))                         // want "empty: use s\\.Empty"
				s.False(0 != len(sl), "msg")                  // want "empty: use s\\.Empty"
				s.False(0 != len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(0 != len(sl), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(0 != len(sl), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(sl) >= 1)                         // want "empty: use s\\.Empty"
				s.False(len(sl) >= 1, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(sl) >= 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(sl) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(1 <= len(sl))                         // want "empty: use s\\.Empty"
				s.False(1 <= len(sl), "msg")                  // want "empty: use s\\.Empty"
				s.False(1 <= len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(1 <= len(sl), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(1 <= len(sl), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"
			}

			{
				s.Len(mp, 0)                         // want "empty: use s\\.Empty"
				s.Len(mp, 0, "msg")                  // want "empty: use s\\.Empty"
				s.Len(mp, 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lenf(mp, 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lenf(mp, 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(len(mp), 0)                         // want "empty: use s\\.Empty"
				s.Equal(len(mp), 0, "msg")                  // want "empty: use s\\.Empty"
				s.Equal(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(len(mp), 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(0, len(mp))                         // want "empty: use s\\.Empty"
				s.Equal(0, len(mp), "msg")                  // want "empty: use s\\.Empty"
				s.Equal(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(0, len(mp), "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Less(len(mp), 1)                         // want "empty: use s\\.Empty"
				s.Less(len(mp), 1, "msg")                  // want "empty: use s\\.Empty"
				s.Less(len(mp), 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lessf(len(mp), 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lessf(len(mp), 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Greater(1, len(mp))                         // want "empty: use s\\.Empty"
				s.Greater(1, len(mp), "msg")                  // want "empty: use s\\.Empty"
				s.Greater(1, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Greaterf(1, len(mp), "msg")                 // want "empty: use s\\.Emptyf"
				s.Greaterf(1, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(mp) == 0)                         // want "empty: use s\\.Empty"
				s.True(len(mp) == 0, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(mp) == 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(0 == len(mp))                         // want "empty: use s\\.Empty"
				s.True(0 == len(mp), "msg")                  // want "empty: use s\\.Empty"
				s.True(0 == len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(0 == len(mp), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(0 == len(mp), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(mp) < 1)                         // want "empty: use s\\.Empty"
				s.True(len(mp) < 1, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(mp) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(mp) < 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(mp) < 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(1 > len(mp))                         // want "empty: use s\\.Empty"
				s.True(1 > len(mp), "msg")                  // want "empty: use s\\.Empty"
				s.True(1 > len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(1 > len(mp), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(1 > len(mp), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(mp) != 0)                         // want "empty: use s\\.Empty"
				s.False(len(mp) != 0, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(mp) != 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(0 != len(mp))                         // want "empty: use s\\.Empty"
				s.False(0 != len(mp), "msg")                  // want "empty: use s\\.Empty"
				s.False(0 != len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(0 != len(mp), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(0 != len(mp), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(mp) >= 1)                         // want "empty: use s\\.Empty"
				s.False(len(mp) >= 1, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(mp) >= 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(mp) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(1 <= len(mp))                         // want "empty: use s\\.Empty"
				s.False(1 <= len(mp), "msg")                  // want "empty: use s\\.Empty"
				s.False(1 <= len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(1 <= len(mp), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(1 <= len(mp), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"
			}

			{
				s.Len(str, 0)                         // want "empty: use s\\.Empty"
				s.Len(str, 0, "msg")                  // want "empty: use s\\.Empty"
				s.Len(str, 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lenf(str, 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lenf(str, 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(len(str), 0)                         // want "empty: use s\\.Empty"
				s.Equal(len(str), 0, "msg")                  // want "empty: use s\\.Empty"
				s.Equal(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(len(str), 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(0, len(str))                         // want "empty: use s\\.Empty"
				s.Equal(0, len(str), "msg")                  // want "empty: use s\\.Empty"
				s.Equal(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(0, len(str), "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Less(len(str), 1)                         // want "empty: use s\\.Empty"
				s.Less(len(str), 1, "msg")                  // want "empty: use s\\.Empty"
				s.Less(len(str), 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lessf(len(str), 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lessf(len(str), 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Greater(1, len(str))                         // want "empty: use s\\.Empty"
				s.Greater(1, len(str), "msg")                  // want "empty: use s\\.Empty"
				s.Greater(1, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Greaterf(1, len(str), "msg")                 // want "empty: use s\\.Emptyf"
				s.Greaterf(1, len(str), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(str) == 0)                         // want "empty: use s\\.Empty"
				s.True(len(str) == 0, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(str) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(str) == 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(str) == 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(0 == len(str))                         // want "empty: use s\\.Empty"
				s.True(0 == len(str), "msg")                  // want "empty: use s\\.Empty"
				s.True(0 == len(str), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(0 == len(str), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(0 == len(str), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(str) < 1)                         // want "empty: use s\\.Empty"
				s.True(len(str) < 1, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(str) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(str) < 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(str) < 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(1 > len(str))                         // want "empty: use s\\.Empty"
				s.True(1 > len(str), "msg")                  // want "empty: use s\\.Empty"
				s.True(1 > len(str), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(1 > len(str), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(1 > len(str), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(str) != 0)                         // want "empty: use s\\.Empty"
				s.False(len(str) != 0, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(str) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(str) != 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(str) != 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(0 != len(str))                         // want "empty: use s\\.Empty"
				s.False(0 != len(str), "msg")                  // want "empty: use s\\.Empty"
				s.False(0 != len(str), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(0 != len(str), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(0 != len(str), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(str) >= 1)                         // want "empty: use s\\.Empty"
				s.False(len(str) >= 1, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(str) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(str) >= 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(str) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(1 <= len(str))                         // want "empty: use s\\.Empty"
				s.False(1 <= len(str), "msg")                  // want "empty: use s\\.Empty"
				s.False(1 <= len(str), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(1 <= len(str), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(1 <= len(str), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"
			}

			{
				s.Len(ch, 0)                         // want "empty: use s\\.Empty"
				s.Len(ch, 0, "msg")                  // want "empty: use s\\.Empty"
				s.Len(ch, 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lenf(ch, 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lenf(ch, 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(len(ch), 0)                         // want "empty: use s\\.Empty"
				s.Equal(len(ch), 0, "msg")                  // want "empty: use s\\.Empty"
				s.Equal(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(len(ch), 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Equal(0, len(ch))                         // want "empty: use s\\.Empty"
				s.Equal(0, len(ch), "msg")                  // want "empty: use s\\.Empty"
				s.Equal(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Equalf(0, len(ch), "msg")                 // want "empty: use s\\.Emptyf"
				s.Equalf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Less(len(ch), 1)                         // want "empty: use s\\.Empty"
				s.Less(len(ch), 1, "msg")                  // want "empty: use s\\.Empty"
				s.Less(len(ch), 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Lessf(len(ch), 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Lessf(len(ch), 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.Greater(1, len(ch))                         // want "empty: use s\\.Empty"
				s.Greater(1, len(ch), "msg")                  // want "empty: use s\\.Empty"
				s.Greater(1, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Greaterf(1, len(ch), "msg")                 // want "empty: use s\\.Emptyf"
				s.Greaterf(1, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(ch) == 0)                         // want "empty: use s\\.Empty"
				s.True(len(ch) == 0, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(ch) == 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(0 == len(ch))                         // want "empty: use s\\.Empty"
				s.True(0 == len(ch), "msg")                  // want "empty: use s\\.Empty"
				s.True(0 == len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(0 == len(ch), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(0 == len(ch), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(len(ch) < 1)                         // want "empty: use s\\.Empty"
				s.True(len(ch) < 1, "msg")                  // want "empty: use s\\.Empty"
				s.True(len(ch) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(len(ch) < 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(len(ch) < 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.True(1 > len(ch))                         // want "empty: use s\\.Empty"
				s.True(1 > len(ch), "msg")                  // want "empty: use s\\.Empty"
				s.True(1 > len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Truef(1 > len(ch), "msg")                 // want "empty: use s\\.Emptyf"
				s.Truef(1 > len(ch), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(ch) != 0)                         // want "empty: use s\\.Empty"
				s.False(len(ch) != 0, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(ch) != 0, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(0 != len(ch))                         // want "empty: use s\\.Empty"
				s.False(0 != len(ch), "msg")                  // want "empty: use s\\.Empty"
				s.False(0 != len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(0 != len(ch), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(0 != len(ch), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(len(ch) >= 1)                         // want "empty: use s\\.Empty"
				s.False(len(ch) >= 1, "msg")                  // want "empty: use s\\.Empty"
				s.False(len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(len(ch) >= 1, "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(len(ch) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Emptyf"

				s.False(1 <= len(ch))                         // want "empty: use s\\.Empty"
				s.False(1 <= len(ch), "msg")                  // want "empty: use s\\.Empty"
				s.False(1 <= len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Empty"
				s.Falsef(1 <= len(ch), "msg")                 // want "empty: use s\\.Emptyf"
				s.Falsef(1 <= len(ch), "msg with arg %d", 42) // want "empty: use s\\.Emptyf"
			}

			// Valid.

			{
				s.Empty(arr)
				s.Empty(arr, "msg")
				s.Empty(arr, "msg with arg %d", 42)
				s.Emptyf(arr, "msg")
				s.Emptyf(arr, "msg with arg %d", 42)
			}

			{
				s.Empty(arrPtr)
				s.Empty(arrPtr, "msg")
				s.Empty(arrPtr, "msg with arg %d", 42)
				s.Emptyf(arrPtr, "msg")
				s.Emptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				s.Empty(sl)
				s.Empty(sl, "msg")
				s.Empty(sl, "msg with arg %d", 42)
				s.Emptyf(sl, "msg")
				s.Emptyf(sl, "msg with arg %d", 42)
			}

			{
				s.Empty(mp)
				s.Empty(mp, "msg")
				s.Empty(mp, "msg with arg %d", 42)
				s.Emptyf(mp, "msg")
				s.Emptyf(mp, "msg with arg %d", 42)
			}

			{
				s.Empty(str)
				s.Empty(str, "msg")
				s.Empty(str, "msg with arg %d", 42)
				s.Emptyf(str, "msg")
				s.Emptyf(str, "msg with arg %d", 42)
			}

			{
				s.Empty(ch)
				s.Empty(ch, "msg")
				s.Empty(ch, "msg with arg %d", 42)
				s.Emptyf(ch, "msg")
				s.Emptyf(ch, "msg with arg %d", 42)
			}
		}

		{
			{
				s.Assert().Len(arr, 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(arr, 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(arr, 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lenf(arr, 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lenf(arr, 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(len(arr), 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(arr), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(len(arr), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(0, len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(0, len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Less(len(arr), 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(arr), 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(arr), 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lessf(len(arr), 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lessf(len(arr), 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Greater(1, len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greaterf(1, len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Greaterf(1, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(arr) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(arr) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(arr) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(0 == len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(0 == len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(0 == len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(arr) < 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(arr) < 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(arr) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(arr) < 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(arr) < 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(1 > len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(1 > len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(1 > len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(arr) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(arr) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(arr) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(0 != len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(0 != len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(0 != len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(arr) >= 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(arr) >= 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(arr) >= 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(arr) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(1 <= len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(1 <= len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(1 <= len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
			}

			{
				s.Assert().Len(arrPtr, 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(arrPtr, 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(arrPtr, 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lenf(arrPtr, 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lenf(arrPtr, 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(len(arrPtr), 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(arrPtr), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(0, len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(0, len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Less(len(arrPtr), 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(arrPtr), 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lessf(len(arrPtr), 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lessf(len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Greater(1, len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greaterf(1, len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Greaterf(1, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(arrPtr) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(arrPtr) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(arrPtr) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(0 == len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(0 == len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(arrPtr) < 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(arrPtr) < 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(arrPtr) < 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(1 > len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(1 > len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(arrPtr) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(arrPtr) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(arrPtr) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(0 != len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(0 != len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(arrPtr) >= 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(arrPtr) >= 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(arrPtr) >= 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(1 <= len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(1 <= len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
			}

			{
				s.Assert().Len(sl, 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(sl, 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(sl, 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lenf(sl, 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lenf(sl, 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(len(sl), 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(sl), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(len(sl), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(0, len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(0, len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Less(len(sl), 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(sl), 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(sl), 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lessf(len(sl), 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lessf(len(sl), 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Greater(1, len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greaterf(1, len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Greaterf(1, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(sl) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(sl) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(sl) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(0 == len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(0 == len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(0 == len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(sl) < 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(sl) < 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(sl) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(sl) < 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(sl) < 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(1 > len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(1 > len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(1 > len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(sl) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(sl) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(sl) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(0 != len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(0 != len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(0 != len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(sl) >= 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(sl) >= 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(sl) >= 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(sl) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(1 <= len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(1 <= len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(1 <= len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
			}

			{
				s.Assert().Len(mp, 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(mp, 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(mp, 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lenf(mp, 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lenf(mp, 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(len(mp), 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(mp), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(len(mp), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(0, len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(0, len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Less(len(mp), 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(mp), 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(mp), 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lessf(len(mp), 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lessf(len(mp), 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Greater(1, len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greaterf(1, len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Greaterf(1, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(mp) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(mp) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(mp) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(0 == len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(0 == len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(0 == len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(mp) < 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(mp) < 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(mp) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(mp) < 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(mp) < 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(1 > len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(1 > len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(1 > len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(mp) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(mp) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(mp) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(0 != len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(0 != len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(0 != len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(mp) >= 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(mp) >= 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(mp) >= 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(mp) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(1 <= len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(1 <= len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(1 <= len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
			}

			{
				s.Assert().Len(str, 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(str, 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(str, 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lenf(str, 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lenf(str, 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(len(str), 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(str), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(len(str), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(0, len(str))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(0, len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Less(len(str), 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(str), 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(str), 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lessf(len(str), 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lessf(len(str), 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Greater(1, len(str))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greaterf(1, len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Greaterf(1, len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(str) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(str) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(str) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(str) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(str) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(0 == len(str))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(0 == len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(0 == len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(str) < 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(str) < 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(str) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(str) < 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(str) < 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(1 > len(str))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(1 > len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(1 > len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(str) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(str) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(str) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(str) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(str) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(0 != len(str))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(0 != len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(0 != len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(str) >= 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(str) >= 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(str) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(str) >= 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(str) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(1 <= len(str))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(1 <= len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(1 <= len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
			}

			{
				s.Assert().Len(ch, 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(ch, 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Len(ch, 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lenf(ch, 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lenf(ch, 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(len(ch), 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(ch), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(len(ch), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Equal(0, len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equal(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Equalf(0, len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Equalf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Less(len(ch), 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(ch), 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Less(len(ch), 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Lessf(len(ch), 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Lessf(len(ch), 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().Greater(1, len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greater(1, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Greaterf(1, len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Greaterf(1, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(ch) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(ch) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(ch) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(0 == len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(0 == len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(0 == len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(0 == len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(len(ch) < 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(ch) < 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(len(ch) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(len(ch) < 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(len(ch) < 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().True(1 > len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().True(1 > len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Truef(1 > len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Truef(1 > len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(ch) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(ch) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(ch) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(0 != len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(0 != len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(0 != len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(0 != len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(len(ch) >= 1)                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(ch) >= 1, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(len(ch) >= 1, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(len(ch) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"

				s.Assert().False(1 <= len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().False(1 <= len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.Empty"
				s.Assert().Falsef(1 <= len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
				s.Assert().Falsef(1 <= len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.Emptyf"
			}

			// Valid.

			{
				s.Assert().Empty(arr)
				s.Assert().Empty(arr, "msg")
				s.Assert().Empty(arr, "msg with arg %d", 42)
				s.Assert().Emptyf(arr, "msg")
				s.Assert().Emptyf(arr, "msg with arg %d", 42)
			}

			{
				s.Assert().Empty(arrPtr)
				s.Assert().Empty(arrPtr, "msg")
				s.Assert().Empty(arrPtr, "msg with arg %d", 42)
				s.Assert().Emptyf(arrPtr, "msg")
				s.Assert().Emptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				s.Assert().Empty(sl)
				s.Assert().Empty(sl, "msg")
				s.Assert().Empty(sl, "msg with arg %d", 42)
				s.Assert().Emptyf(sl, "msg")
				s.Assert().Emptyf(sl, "msg with arg %d", 42)
			}

			{
				s.Assert().Empty(mp)
				s.Assert().Empty(mp, "msg")
				s.Assert().Empty(mp, "msg with arg %d", 42)
				s.Assert().Emptyf(mp, "msg")
				s.Assert().Emptyf(mp, "msg with arg %d", 42)
			}

			{
				s.Assert().Empty(str)
				s.Assert().Empty(str, "msg")
				s.Assert().Empty(str, "msg with arg %d", 42)
				s.Assert().Emptyf(str, "msg")
				s.Assert().Emptyf(str, "msg with arg %d", 42)
			}

			{
				s.Assert().Empty(ch)
				s.Assert().Empty(ch, "msg")
				s.Assert().Empty(ch, "msg with arg %d", 42)
				s.Assert().Emptyf(ch, "msg")
				s.Assert().Emptyf(ch, "msg with arg %d", 42)
			}
		}

		{
			{
				assObj.Len(arr, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(arr, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(arr, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(arr, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(arr, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(arr), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(arr), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(arr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(arr), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(arr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(arr), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(arr), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(arr), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(arr), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(arr), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(arr) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(arr) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(arr) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(arr) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(arr) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(arr) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(arr) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(arr) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(arr) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(arr) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(arr) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(arr) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(arr) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(arr) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(arr) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(arr))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(arr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(arr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(arrPtr, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(arrPtr, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(arrPtr, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(arrPtr, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(arrPtr, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(arrPtr), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(arrPtr), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(arrPtr), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(arrPtr), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(arrPtr), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(arrPtr), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(arrPtr) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(arrPtr) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(arrPtr) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(arrPtr) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(arrPtr) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(arrPtr) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(arrPtr) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(arrPtr) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(arrPtr) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(arrPtr) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(arrPtr) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(arrPtr) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(arrPtr))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(arrPtr), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(arrPtr), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(sl, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(sl, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(sl, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(sl, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(sl, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(sl), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(sl), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(sl), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(sl), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(sl), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(sl), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(sl), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(sl), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(sl), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(sl), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(sl) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(sl) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(sl) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(sl) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(sl) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(sl) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(sl) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(sl) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(sl) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(sl) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(sl) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(sl) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(sl) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(sl) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(sl) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(sl))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(sl), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(sl), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(mp, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(mp, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(mp, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(mp, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(mp, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(mp), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(mp), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(mp), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(mp), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(mp), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(mp), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(mp), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(mp), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(mp), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(mp), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(mp) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(mp) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(mp) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(mp) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(mp) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(mp) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(mp) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(mp) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(mp) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(mp) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(mp) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(mp) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(mp) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(mp) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(mp) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(mp))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(mp), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(mp), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(str, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(str, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(str, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(str, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(str, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(str), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(str), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(str), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(str), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(str), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(str))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(str), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(str), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(str), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(str), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(str), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(str))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(str) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(str) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(str) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(str) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(str) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(str))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(str) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(str) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(str) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(str) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(str) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(str))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(str) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(str) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(str) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(str) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(str) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(str))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(str) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(str) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(str) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(str) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(str) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(str))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(str), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(str), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(str), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			{
				assObj.Len(ch, 0)                         // want "empty: use assObj\\.Empty"
				assObj.Len(ch, 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Len(ch, 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lenf(ch, 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lenf(ch, 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(len(ch), 0)                         // want "empty: use assObj\\.Empty"
				assObj.Equal(len(ch), 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(len(ch), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(len(ch), 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(len(ch), 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Equal(0, len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Equal(0, len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Equalf(0, len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Equalf(0, len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Less(len(ch), 1)                         // want "empty: use assObj\\.Empty"
				assObj.Less(len(ch), 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Less(len(ch), 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Lessf(len(ch), 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Lessf(len(ch), 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.Greater(1, len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.Greater(1, len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Greaterf(1, len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Greaterf(1, len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(ch) == 0)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(ch) == 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(ch) == 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(0 == len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(0 == len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(0 == len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(0 == len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(len(ch) < 1)                         // want "empty: use assObj\\.Empty"
				assObj.True(len(ch) < 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(len(ch) < 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(len(ch) < 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(len(ch) < 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.True(1 > len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.True(1 > len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Truef(1 > len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Truef(1 > len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(ch) != 0)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(ch) != 0, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(ch) != 0, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(0 != len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(0 != len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(0 != len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(0 != len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(len(ch) >= 1)                         // want "empty: use assObj\\.Empty"
				assObj.False(len(ch) >= 1, "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(len(ch) >= 1, "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(len(ch) >= 1, "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"

				assObj.False(1 <= len(ch))                         // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(ch), "msg")                  // want "empty: use assObj\\.Empty"
				assObj.False(1 <= len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.Empty"
				assObj.Falsef(1 <= len(ch), "msg")                 // want "empty: use assObj\\.Emptyf"
				assObj.Falsef(1 <= len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.Emptyf"
			}

			// Valid.

			{
				assObj.Empty(arr)
				assObj.Empty(arr, "msg")
				assObj.Empty(arr, "msg with arg %d", 42)
				assObj.Emptyf(arr, "msg")
				assObj.Emptyf(arr, "msg with arg %d", 42)
			}

			{
				assObj.Empty(arrPtr)
				assObj.Empty(arrPtr, "msg")
				assObj.Empty(arrPtr, "msg with arg %d", 42)
				assObj.Emptyf(arrPtr, "msg")
				assObj.Emptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				assObj.Empty(sl)
				assObj.Empty(sl, "msg")
				assObj.Empty(sl, "msg with arg %d", 42)
				assObj.Emptyf(sl, "msg")
				assObj.Emptyf(sl, "msg with arg %d", 42)
			}

			{
				assObj.Empty(mp)
				assObj.Empty(mp, "msg")
				assObj.Empty(mp, "msg with arg %d", 42)
				assObj.Emptyf(mp, "msg")
				assObj.Emptyf(mp, "msg with arg %d", 42)
			}

			{
				assObj.Empty(str)
				assObj.Empty(str, "msg")
				assObj.Empty(str, "msg with arg %d", 42)
				assObj.Emptyf(str, "msg")
				assObj.Emptyf(str, "msg with arg %d", 42)
			}

			{
				assObj.Empty(ch)
				assObj.Empty(ch, "msg")
				assObj.Empty(ch, "msg with arg %d", 42)
				assObj.Emptyf(ch, "msg")
				assObj.Emptyf(ch, "msg with arg %d", 42)
			}
		}

		{
			{
				s.Require().Len(arr, 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(arr, 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(arr, 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lenf(arr, 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lenf(arr, 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(len(arr), 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(arr), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(len(arr), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(0, len(arr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(0, len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Less(len(arr), 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(arr), 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(arr), 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lessf(len(arr), 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lessf(len(arr), 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Greater(1, len(arr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greaterf(1, len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Greaterf(1, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(arr) == 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(arr) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(arr) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(0 == len(arr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(0 == len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(0 == len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(arr) < 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(arr) < 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(arr) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(arr) < 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(arr) < 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(1 > len(arr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(1 > len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(1 > len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(arr) != 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(arr) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(arr) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(0 != len(arr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(0 != len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(0 != len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(arr) >= 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(arr) >= 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(arr) >= 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(arr) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(1 <= len(arr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(1 <= len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(1 <= len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"
			}

			{
				s.Require().Len(arrPtr, 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(arrPtr, 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(arrPtr, 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lenf(arrPtr, 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lenf(arrPtr, 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(len(arrPtr), 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(arrPtr), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(0, len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(0, len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Less(len(arrPtr), 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(arrPtr), 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lessf(len(arrPtr), 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lessf(len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Greater(1, len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greaterf(1, len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Greaterf(1, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(arrPtr) == 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(arrPtr) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(arrPtr) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(0 == len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(0 == len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(arrPtr) < 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(arrPtr) < 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(arrPtr) < 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(1 > len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(1 > len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(arrPtr) != 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(arrPtr) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(arrPtr) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(0 != len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(0 != len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(arrPtr) >= 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(arrPtr) >= 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(arrPtr) >= 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(1 <= len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(1 <= len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"
			}

			{
				s.Require().Len(sl, 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(sl, 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(sl, 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lenf(sl, 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lenf(sl, 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(len(sl), 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(sl), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(len(sl), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(0, len(sl))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(0, len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Less(len(sl), 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(sl), 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(sl), 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lessf(len(sl), 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lessf(len(sl), 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Greater(1, len(sl))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greaterf(1, len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Greaterf(1, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(sl) == 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(sl) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(sl) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(0 == len(sl))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(0 == len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(0 == len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(sl) < 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(sl) < 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(sl) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(sl) < 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(sl) < 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(1 > len(sl))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(1 > len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(1 > len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(sl) != 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(sl) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(sl) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(0 != len(sl))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(0 != len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(0 != len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(sl) >= 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(sl) >= 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(sl) >= 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(sl) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(1 <= len(sl))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(1 <= len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(1 <= len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"
			}

			{
				s.Require().Len(mp, 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(mp, 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(mp, 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lenf(mp, 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lenf(mp, 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(len(mp), 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(mp), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(len(mp), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(0, len(mp))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(0, len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Less(len(mp), 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(mp), 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(mp), 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lessf(len(mp), 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lessf(len(mp), 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Greater(1, len(mp))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greaterf(1, len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Greaterf(1, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(mp) == 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(mp) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(mp) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(0 == len(mp))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(0 == len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(0 == len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(mp) < 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(mp) < 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(mp) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(mp) < 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(mp) < 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(1 > len(mp))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(1 > len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(1 > len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(mp) != 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(mp) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(mp) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(0 != len(mp))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(0 != len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(0 != len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(mp) >= 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(mp) >= 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(mp) >= 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(mp) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(1 <= len(mp))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(1 <= len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(1 <= len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"
			}

			{
				s.Require().Len(str, 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(str, 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(str, 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lenf(str, 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lenf(str, 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(len(str), 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(str), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(len(str), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(0, len(str))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(0, len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Less(len(str), 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(str), 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(str), 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lessf(len(str), 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lessf(len(str), 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Greater(1, len(str))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greaterf(1, len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Greaterf(1, len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(str) == 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(str) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(str) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(str) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(str) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(0 == len(str))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(0 == len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(0 == len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(str) < 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(str) < 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(str) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(str) < 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(str) < 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(1 > len(str))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(1 > len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(1 > len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(str) != 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(str) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(str) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(str) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(str) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(0 != len(str))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(0 != len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(0 != len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(str) >= 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(str) >= 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(str) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(str) >= 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(str) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(1 <= len(str))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(1 <= len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(1 <= len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"
			}

			{
				s.Require().Len(ch, 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(ch, 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Len(ch, 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lenf(ch, 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lenf(ch, 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(len(ch), 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(ch), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(len(ch), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Equal(0, len(ch))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equal(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Equalf(0, len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Equalf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Less(len(ch), 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(ch), 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Less(len(ch), 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Lessf(len(ch), 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Lessf(len(ch), 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().Greater(1, len(ch))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greater(1, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Greaterf(1, len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Greaterf(1, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(ch) == 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(ch) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(ch) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(0 == len(ch))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(0 == len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(0 == len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(0 == len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(len(ch) < 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(ch) < 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(len(ch) < 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(len(ch) < 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(len(ch) < 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().True(1 > len(ch))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().True(1 > len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Truef(1 > len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Truef(1 > len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(ch) != 0)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(ch) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(ch) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(0 != len(ch))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(0 != len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(0 != len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(0 != len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(len(ch) >= 1)                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(ch) >= 1, "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(len(ch) >= 1, "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(len(ch) >= 1, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"

				s.Require().False(1 <= len(ch))                         // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().False(1 <= len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.Empty"
				s.Require().Falsef(1 <= len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.Emptyf"
				s.Require().Falsef(1 <= len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.Emptyf"
			}

			// Valid.

			{
				s.Require().Empty(arr)
				s.Require().Empty(arr, "msg")
				s.Require().Empty(arr, "msg with arg %d", 42)
				s.Require().Emptyf(arr, "msg")
				s.Require().Emptyf(arr, "msg with arg %d", 42)
			}

			{
				s.Require().Empty(arrPtr)
				s.Require().Empty(arrPtr, "msg")
				s.Require().Empty(arrPtr, "msg with arg %d", 42)
				s.Require().Emptyf(arrPtr, "msg")
				s.Require().Emptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				s.Require().Empty(sl)
				s.Require().Empty(sl, "msg")
				s.Require().Empty(sl, "msg with arg %d", 42)
				s.Require().Emptyf(sl, "msg")
				s.Require().Emptyf(sl, "msg with arg %d", 42)
			}

			{
				s.Require().Empty(mp)
				s.Require().Empty(mp, "msg")
				s.Require().Empty(mp, "msg with arg %d", 42)
				s.Require().Emptyf(mp, "msg")
				s.Require().Emptyf(mp, "msg with arg %d", 42)
			}

			{
				s.Require().Empty(str)
				s.Require().Empty(str, "msg")
				s.Require().Empty(str, "msg with arg %d", 42)
				s.Require().Emptyf(str, "msg")
				s.Require().Emptyf(str, "msg with arg %d", 42)
			}

			{
				s.Require().Empty(ch)
				s.Require().Empty(ch, "msg")
				s.Require().Empty(ch, "msg with arg %d", 42)
				s.Require().Emptyf(ch, "msg")
				s.Require().Emptyf(ch, "msg with arg %d", 42)
			}
		}

		{
			{
				reqObj.Len(arr, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(arr, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(arr, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(arr, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(arr, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(arr), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(arr), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(arr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(arr), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(arr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(arr), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(arr), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(arr), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(arr), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(arr), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(arr) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arr) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(arr) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(arr) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arr) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arr) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(arr) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(arr) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(arr) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arr) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(arr) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(arr) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arr) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arr) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(arr) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(arr) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(arr))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(arr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(arr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(arrPtr, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(arrPtr, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(arrPtr, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(arrPtr, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(arrPtr, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(arrPtr), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(arrPtr), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(arrPtr), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(arrPtr), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(arrPtr), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(arrPtr), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(arrPtr), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(arrPtr), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(arrPtr) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arrPtr) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(arrPtr) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(arrPtr) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arrPtr) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(arrPtr) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(arrPtr) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(arrPtr) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(arrPtr) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arrPtr) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(arrPtr) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(arrPtr) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arrPtr) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(arrPtr) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(arrPtr) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(arrPtr) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(arrPtr))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(arrPtr), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(arrPtr), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(sl, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(sl, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(sl, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(sl, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(sl, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(sl), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(sl), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(sl), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(sl), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(sl), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(sl), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(sl), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(sl), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(sl), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(sl), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(sl) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(sl) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(sl) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(sl) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(sl) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(sl) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(sl) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(sl) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(sl) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(sl) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(sl) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(sl) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(sl) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(sl) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(sl) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(sl) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(sl))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(sl), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(sl), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(mp, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(mp, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(mp, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(mp, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(mp, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(mp), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(mp), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(mp), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(mp), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(mp), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(mp), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(mp), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(mp), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(mp), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(mp), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(mp) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(mp) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(mp) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(mp) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(mp) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(mp) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(mp) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(mp) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(mp) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(mp) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(mp) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(mp) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(mp) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(mp) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(mp) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(mp) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(mp))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(mp), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(mp), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(str, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(str, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(str, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(str, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(str, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(str), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(str), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(str), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(str), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(str), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(str), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(str), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(str), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(str), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(str), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(str) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(str) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(str) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(str) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(str) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(str) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(str) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(str) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(str) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(str) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(str) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(str) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(str) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(str) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(str) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(str) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(str) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(str) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(str) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(str) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(str))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(str), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(str), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			{
				reqObj.Len(ch, 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Len(ch, 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Len(ch, 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lenf(ch, 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lenf(ch, 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(len(ch), 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(ch), 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(len(ch), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(len(ch), 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(len(ch), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Equal(0, len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Equal(0, len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Equalf(0, len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Equalf(0, len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Less(len(ch), 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(ch), 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Less(len(ch), 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Lessf(len(ch), 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Lessf(len(ch), 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.Greater(1, len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.Greater(1, len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Greaterf(1, len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Greaterf(1, len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(ch) == 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(ch) == 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(ch) == 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(0 == len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(0 == len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(0 == len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(0 == len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(len(ch) < 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.True(len(ch) < 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(len(ch) < 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(len(ch) < 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(len(ch) < 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.True(1 > len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.True(1 > len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Truef(1 > len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Truef(1 > len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(ch) != 0)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(ch) != 0, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(ch) != 0, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(0 != len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(0 != len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(0 != len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(0 != len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(len(ch) >= 1)                         // want "empty: use reqObj\\.Empty"
				reqObj.False(len(ch) >= 1, "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(len(ch) >= 1, "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(len(ch) >= 1, "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(len(ch) >= 1, "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"

				reqObj.False(1 <= len(ch))                         // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(ch), "msg")                  // want "empty: use reqObj\\.Empty"
				reqObj.False(1 <= len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.Empty"
				reqObj.Falsef(1 <= len(ch), "msg")                 // want "empty: use reqObj\\.Emptyf"
				reqObj.Falsef(1 <= len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.Emptyf"
			}

			// Valid.

			{
				reqObj.Empty(arr)
				reqObj.Empty(arr, "msg")
				reqObj.Empty(arr, "msg with arg %d", 42)
				reqObj.Emptyf(arr, "msg")
				reqObj.Emptyf(arr, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(arrPtr)
				reqObj.Empty(arrPtr, "msg")
				reqObj.Empty(arrPtr, "msg with arg %d", 42)
				reqObj.Emptyf(arrPtr, "msg")
				reqObj.Emptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(sl)
				reqObj.Empty(sl, "msg")
				reqObj.Empty(sl, "msg with arg %d", 42)
				reqObj.Emptyf(sl, "msg")
				reqObj.Emptyf(sl, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(mp)
				reqObj.Empty(mp, "msg")
				reqObj.Empty(mp, "msg with arg %d", 42)
				reqObj.Emptyf(mp, "msg")
				reqObj.Emptyf(mp, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(str)
				reqObj.Empty(str, "msg")
				reqObj.Empty(str, "msg with arg %d", 42)
				reqObj.Emptyf(str, "msg")
				reqObj.Emptyf(str, "msg with arg %d", 42)
			}

			{
				reqObj.Empty(ch)
				reqObj.Empty(ch, "msg")
				reqObj.Empty(ch, "msg with arg %d", 42)
				reqObj.Emptyf(ch, "msg")
				reqObj.Emptyf(ch, "msg with arg %d", 42)
			}
		}
	}

	// NotEmpty.
	{
		{
			{
				s.NotEqual(len(arr), 0)                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(arr), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(len(arr), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.NotEqual(0, len(arr))                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(arr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(0, len(arr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Greater(len(arr), 0)                         // want "empty: use s\\.NotEmpty"
				s.Greater(len(arr), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.Greater(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Greaterf(len(arr), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Greaterf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Less(0, len(arr))                         // want "empty: use s\\.NotEmpty"
				s.Less(0, len(arr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.Less(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Lessf(0, len(arr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Lessf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(arr) != 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(arr) != 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(arr) != 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 != len(arr))                         // want "empty: use s\\.NotEmpty"
				s.True(0 != len(arr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 != len(arr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 != len(arr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 != len(arr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(arr) > 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(arr) > 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(arr) > 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(arr) > 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(arr) > 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 < len(arr))                         // want "empty: use s\\.NotEmpty"
				s.True(0 < len(arr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 < len(arr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 < len(arr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 < len(arr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(len(arr) == 0)                         // want "empty: use s\\.NotEmpty"
				s.False(len(arr) == 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(len(arr) == 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(0 == len(arr))                         // want "empty: use s\\.NotEmpty"
				s.False(0 == len(arr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(0 == len(arr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(0 == len(arr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(0 == len(arr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"
			}

			{
				s.NotEqual(len(arrPtr), 0)                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(arrPtr), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.NotEqual(0, len(arrPtr))                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(arrPtr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(0, len(arrPtr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Greater(len(arrPtr), 0)                         // want "empty: use s\\.NotEmpty"
				s.Greater(len(arrPtr), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.Greater(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Greaterf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Greaterf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Less(0, len(arrPtr))                         // want "empty: use s\\.NotEmpty"
				s.Less(0, len(arrPtr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.Less(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Lessf(0, len(arrPtr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Lessf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(arrPtr) != 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(arrPtr) != 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(arrPtr) != 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 != len(arrPtr))                         // want "empty: use s\\.NotEmpty"
				s.True(0 != len(arrPtr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 != len(arrPtr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(arrPtr) > 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(arrPtr) > 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(arrPtr) > 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 < len(arrPtr))                         // want "empty: use s\\.NotEmpty"
				s.True(0 < len(arrPtr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 < len(arrPtr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(len(arrPtr) == 0)                         // want "empty: use s\\.NotEmpty"
				s.False(len(arrPtr) == 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(len(arrPtr) == 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(0 == len(arrPtr))                         // want "empty: use s\\.NotEmpty"
				s.False(0 == len(arrPtr), "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(0 == len(arrPtr), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"
			}

			{
				s.NotEqual(len(sl), 0)                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(sl), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(len(sl), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.NotEqual(0, len(sl))                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(sl), "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(0, len(sl), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Greater(len(sl), 0)                         // want "empty: use s\\.NotEmpty"
				s.Greater(len(sl), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.Greater(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Greaterf(len(sl), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Greaterf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Less(0, len(sl))                         // want "empty: use s\\.NotEmpty"
				s.Less(0, len(sl), "msg")                  // want "empty: use s\\.NotEmpty"
				s.Less(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Lessf(0, len(sl), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Lessf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(sl) != 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(sl) != 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(sl) != 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 != len(sl))                         // want "empty: use s\\.NotEmpty"
				s.True(0 != len(sl), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 != len(sl), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 != len(sl), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 != len(sl), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(sl) > 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(sl) > 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(sl) > 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(sl) > 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(sl) > 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 < len(sl))                         // want "empty: use s\\.NotEmpty"
				s.True(0 < len(sl), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 < len(sl), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 < len(sl), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 < len(sl), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(len(sl) == 0)                         // want "empty: use s\\.NotEmpty"
				s.False(len(sl) == 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(len(sl) == 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(0 == len(sl))                         // want "empty: use s\\.NotEmpty"
				s.False(0 == len(sl), "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(0 == len(sl), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(0 == len(sl), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(0 == len(sl), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"
			}

			{
				s.NotEqual(len(mp), 0)                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(mp), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(len(mp), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.NotEqual(0, len(mp))                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(mp), "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(0, len(mp), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Greater(len(mp), 0)                         // want "empty: use s\\.NotEmpty"
				s.Greater(len(mp), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.Greater(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Greaterf(len(mp), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Greaterf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Less(0, len(mp))                         // want "empty: use s\\.NotEmpty"
				s.Less(0, len(mp), "msg")                  // want "empty: use s\\.NotEmpty"
				s.Less(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Lessf(0, len(mp), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Lessf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(mp) != 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(mp) != 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(mp) != 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 != len(mp))                         // want "empty: use s\\.NotEmpty"
				s.True(0 != len(mp), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 != len(mp), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 != len(mp), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 != len(mp), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(mp) > 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(mp) > 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(mp) > 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(mp) > 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(mp) > 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 < len(mp))                         // want "empty: use s\\.NotEmpty"
				s.True(0 < len(mp), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 < len(mp), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 < len(mp), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 < len(mp), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(len(mp) == 0)                         // want "empty: use s\\.NotEmpty"
				s.False(len(mp) == 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(len(mp) == 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(0 == len(mp))                         // want "empty: use s\\.NotEmpty"
				s.False(0 == len(mp), "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(0 == len(mp), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(0 == len(mp), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(0 == len(mp), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"
			}

			{
				s.NotEqual(len(str), 0)                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(str), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(len(str), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.NotEqual(0, len(str))                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(str), "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(0, len(str), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Greater(len(str), 0)                         // want "empty: use s\\.NotEmpty"
				s.Greater(len(str), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.Greater(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Greaterf(len(str), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Greaterf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Less(0, len(str))                         // want "empty: use s\\.NotEmpty"
				s.Less(0, len(str), "msg")                  // want "empty: use s\\.NotEmpty"
				s.Less(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Lessf(0, len(str), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Lessf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(str) != 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(str) != 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(str) != 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(str) != 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(str) != 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 != len(str))                         // want "empty: use s\\.NotEmpty"
				s.True(0 != len(str), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 != len(str), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 != len(str), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 != len(str), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(str) > 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(str) > 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(str) > 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(str) > 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(str) > 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 < len(str))                         // want "empty: use s\\.NotEmpty"
				s.True(0 < len(str), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 < len(str), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 < len(str), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 < len(str), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(len(str) == 0)                         // want "empty: use s\\.NotEmpty"
				s.False(len(str) == 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(len(str) == 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(len(str) == 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(len(str) == 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(0 == len(str))                         // want "empty: use s\\.NotEmpty"
				s.False(0 == len(str), "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(0 == len(str), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(0 == len(str), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(0 == len(str), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"
			}

			{
				s.NotEqual(len(ch), 0)                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(ch), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(len(ch), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.NotEqual(0, len(ch))                         // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(ch), "msg")                  // want "empty: use s\\.NotEmpty"
				s.NotEqual(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.NotEqualf(0, len(ch), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.NotEqualf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Greater(len(ch), 0)                         // want "empty: use s\\.NotEmpty"
				s.Greater(len(ch), 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.Greater(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Greaterf(len(ch), 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Greaterf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.Less(0, len(ch))                         // want "empty: use s\\.NotEmpty"
				s.Less(0, len(ch), "msg")                  // want "empty: use s\\.NotEmpty"
				s.Less(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Lessf(0, len(ch), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Lessf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(ch) != 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(ch) != 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(ch) != 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 != len(ch))                         // want "empty: use s\\.NotEmpty"
				s.True(0 != len(ch), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 != len(ch), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 != len(ch), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 != len(ch), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(len(ch) > 0)                         // want "empty: use s\\.NotEmpty"
				s.True(len(ch) > 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(len(ch) > 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(len(ch) > 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(len(ch) > 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.True(0 < len(ch))                         // want "empty: use s\\.NotEmpty"
				s.True(0 < len(ch), "msg")                  // want "empty: use s\\.NotEmpty"
				s.True(0 < len(ch), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Truef(0 < len(ch), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Truef(0 < len(ch), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(len(ch) == 0)                         // want "empty: use s\\.NotEmpty"
				s.False(len(ch) == 0, "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(len(ch) == 0, "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"

				s.False(0 == len(ch))                         // want "empty: use s\\.NotEmpty"
				s.False(0 == len(ch), "msg")                  // want "empty: use s\\.NotEmpty"
				s.False(0 == len(ch), "msg with arg %d", 42)  // want "empty: use s\\.NotEmpty"
				s.Falsef(0 == len(ch), "msg")                 // want "empty: use s\\.NotEmptyf"
				s.Falsef(0 == len(ch), "msg with arg %d", 42) // want "empty: use s\\.NotEmptyf"
			}

			// Valid.

			{
				s.NotEmpty(arr)
				s.NotEmpty(arr, "msg")
				s.NotEmpty(arr, "msg with arg %d", 42)
				s.NotEmptyf(arr, "msg")
				s.NotEmptyf(arr, "msg with arg %d", 42)
			}

			{
				s.NotEmpty(arrPtr)
				s.NotEmpty(arrPtr, "msg")
				s.NotEmpty(arrPtr, "msg with arg %d", 42)
				s.NotEmptyf(arrPtr, "msg")
				s.NotEmptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				s.NotEmpty(sl)
				s.NotEmpty(sl, "msg")
				s.NotEmpty(sl, "msg with arg %d", 42)
				s.NotEmptyf(sl, "msg")
				s.NotEmptyf(sl, "msg with arg %d", 42)
			}

			{
				s.NotEmpty(mp)
				s.NotEmpty(mp, "msg")
				s.NotEmpty(mp, "msg with arg %d", 42)
				s.NotEmptyf(mp, "msg")
				s.NotEmptyf(mp, "msg with arg %d", 42)
			}

			{
				s.NotEmpty(str)
				s.NotEmpty(str, "msg")
				s.NotEmpty(str, "msg with arg %d", 42)
				s.NotEmptyf(str, "msg")
				s.NotEmptyf(str, "msg with arg %d", 42)
			}

			{
				s.NotEmpty(ch)
				s.NotEmpty(ch, "msg")
				s.NotEmpty(ch, "msg with arg %d", 42)
				s.NotEmptyf(ch, "msg")
				s.NotEmptyf(ch, "msg with arg %d", 42)
			}
		}

		{
			{
				s.Assert().NotEqual(len(arr), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(arr), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(len(arr), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().NotEqual(0, len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(0, len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Greater(len(arr), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(arr), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greaterf(len(arr), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Greaterf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Less(0, len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Lessf(0, len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Lessf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(arr) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(arr) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(arr) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 != len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 != len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 != len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(arr) > 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(arr) > 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(arr) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(arr) > 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(arr) > 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 < len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 < len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 < len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(len(arr) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(arr) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(len(arr) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(0 == len(arr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(arr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(0 == len(arr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(0 == len(arr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
			}

			{
				s.Assert().NotEqual(len(arrPtr), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(arrPtr), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().NotEqual(0, len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(0, len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Greater(len(arrPtr), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(arrPtr), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greaterf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Greaterf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Less(0, len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Lessf(0, len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Lessf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(arrPtr) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(arrPtr) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(arrPtr) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 != len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 != len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(arrPtr) > 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(arrPtr) > 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(arrPtr) > 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 < len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 < len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(len(arrPtr) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(arrPtr) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(len(arrPtr) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(0 == len(arrPtr))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(arrPtr), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(0 == len(arrPtr), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
			}

			{
				s.Assert().NotEqual(len(sl), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(sl), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(len(sl), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().NotEqual(0, len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(0, len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Greater(len(sl), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(sl), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greaterf(len(sl), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Greaterf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Less(0, len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Lessf(0, len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Lessf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(sl) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(sl) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(sl) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 != len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 != len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 != len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(sl) > 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(sl) > 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(sl) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(sl) > 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(sl) > 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 < len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 < len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 < len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(len(sl) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(sl) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(len(sl) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(0 == len(sl))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(sl), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(0 == len(sl), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(0 == len(sl), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
			}

			{
				s.Assert().NotEqual(len(mp), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(mp), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(len(mp), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().NotEqual(0, len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(0, len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Greater(len(mp), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(mp), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greaterf(len(mp), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Greaterf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Less(0, len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Lessf(0, len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Lessf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(mp) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(mp) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(mp) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 != len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 != len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 != len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(mp) > 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(mp) > 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(mp) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(mp) > 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(mp) > 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 < len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 < len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 < len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(len(mp) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(mp) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(len(mp) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(0 == len(mp))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(mp), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(0 == len(mp), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(0 == len(mp), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
			}

			{
				s.Assert().NotEqual(len(str), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(str), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(len(str), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().NotEqual(0, len(str))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(0, len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Greater(len(str), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(str), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greaterf(len(str), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Greaterf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Less(0, len(str))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Lessf(0, len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Lessf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(str) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(str) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(str) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(str) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(str) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 != len(str))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 != len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 != len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(str) > 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(str) > 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(str) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(str) > 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(str) > 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 < len(str))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 < len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 < len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(len(str) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(str) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(str) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(len(str) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(len(str) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(0 == len(str))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(str), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(str), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(0 == len(str), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(0 == len(str), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
			}

			{
				s.Assert().NotEqual(len(ch), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(ch), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(len(ch), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().NotEqual(0, len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqual(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().NotEqualf(0, len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().NotEqualf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Greater(len(ch), 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(ch), 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greater(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Greaterf(len(ch), 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Greaterf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().Less(0, len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Less(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Lessf(0, len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Lessf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(ch) != 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(ch) != 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(ch) != 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 != len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 != len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 != len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 != len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(len(ch) > 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(ch) > 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(len(ch) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(len(ch) > 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(len(ch) > 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().True(0 < len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().True(0 < len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Truef(0 < len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Truef(0 < len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(len(ch) == 0)                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(ch) == 0, "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(len(ch) == 0, "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"

				s.Assert().False(0 == len(ch))                         // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(ch), "msg")                  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().False(0 == len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Assert\\(\\)\\.NotEmpty"
				s.Assert().Falsef(0 == len(ch), "msg")                 // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
				s.Assert().Falsef(0 == len(ch), "msg with arg %d", 42) // want "empty: use s\\.Assert\\(\\)\\.NotEmptyf"
			}

			// Valid.

			{
				s.Assert().NotEmpty(arr)
				s.Assert().NotEmpty(arr, "msg")
				s.Assert().NotEmpty(arr, "msg with arg %d", 42)
				s.Assert().NotEmptyf(arr, "msg")
				s.Assert().NotEmptyf(arr, "msg with arg %d", 42)
			}

			{
				s.Assert().NotEmpty(arrPtr)
				s.Assert().NotEmpty(arrPtr, "msg")
				s.Assert().NotEmpty(arrPtr, "msg with arg %d", 42)
				s.Assert().NotEmptyf(arrPtr, "msg")
				s.Assert().NotEmptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				s.Assert().NotEmpty(sl)
				s.Assert().NotEmpty(sl, "msg")
				s.Assert().NotEmpty(sl, "msg with arg %d", 42)
				s.Assert().NotEmptyf(sl, "msg")
				s.Assert().NotEmptyf(sl, "msg with arg %d", 42)
			}

			{
				s.Assert().NotEmpty(mp)
				s.Assert().NotEmpty(mp, "msg")
				s.Assert().NotEmpty(mp, "msg with arg %d", 42)
				s.Assert().NotEmptyf(mp, "msg")
				s.Assert().NotEmptyf(mp, "msg with arg %d", 42)
			}

			{
				s.Assert().NotEmpty(str)
				s.Assert().NotEmpty(str, "msg")
				s.Assert().NotEmpty(str, "msg with arg %d", 42)
				s.Assert().NotEmptyf(str, "msg")
				s.Assert().NotEmptyf(str, "msg with arg %d", 42)
			}

			{
				s.Assert().NotEmpty(ch)
				s.Assert().NotEmpty(ch, "msg")
				s.Assert().NotEmpty(ch, "msg with arg %d", 42)
				s.Assert().NotEmptyf(ch, "msg")
				s.Assert().NotEmptyf(ch, "msg with arg %d", 42)
			}
		}

		{
			{
				assObj.NotEqual(len(arr), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(arr), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(arr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(arr), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(arr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(arr), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(arr), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(arr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(arr), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(arr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(arr) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arr) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(arr) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(arr) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arr) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arr) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(arr) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(arr) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(arr) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(arr) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(arr) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(arr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(arr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(arr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(arr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(arr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(arrPtr), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(arrPtr), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(arrPtr), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(arrPtr), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(arrPtr), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(arrPtr), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(arrPtr) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arrPtr) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(arrPtr) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(arrPtr) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arrPtr) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(arrPtr) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(arrPtr) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(arrPtr) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(arrPtr) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(arrPtr))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(arrPtr), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(arrPtr), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(sl), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(sl), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(sl), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(sl), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(sl), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(sl), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(sl), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(sl), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(sl), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(sl), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(sl) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(sl) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(sl) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(sl) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(sl) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(sl) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(sl) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(sl) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(sl) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(sl) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(sl) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(sl))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(sl), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(sl), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(sl), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(sl), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(mp), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(mp), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(mp), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(mp), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(mp), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(mp), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(mp), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(mp), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(mp), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(mp), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(mp) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(mp) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(mp) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(mp) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(mp) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(mp) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(mp) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(mp) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(mp) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(mp) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(mp) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(mp))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(mp), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(mp), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(mp), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(mp), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(str), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(str), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(str), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(str), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(str), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(str), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(str), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(str), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(str), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(str), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(str) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(str) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(str) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(str) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(str) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(str) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(str) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(str) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(str) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(str) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(str) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(str) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(str) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(str) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(str) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(str))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(str), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(str), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(str), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(str), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			{
				assObj.NotEqual(len(ch), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(ch), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(len(ch), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(len(ch), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(len(ch), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.NotEqual(0, len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqual(0, len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.NotEqualf(0, len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.NotEqualf(0, len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Greater(len(ch), 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(ch), 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Greater(len(ch), 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Greaterf(len(ch), 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Greaterf(len(ch), 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.Less(0, len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.Less(0, len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Lessf(0, len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Lessf(0, len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(ch) != 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(ch) != 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(ch) != 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 != len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 != len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 != len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 != len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(len(ch) > 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(ch) > 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(len(ch) > 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(len(ch) > 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(len(ch) > 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.True(0 < len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.True(0 < len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Truef(0 < len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Truef(0 < len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(len(ch) == 0)                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(ch) == 0, "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(len(ch) == 0, "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"

				assObj.False(0 == len(ch))                         // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(ch), "msg")                  // want "empty: use assObj\\.NotEmpty"
				assObj.False(0 == len(ch), "msg with arg %d", 42)  // want "empty: use assObj\\.NotEmpty"
				assObj.Falsef(0 == len(ch), "msg")                 // want "empty: use assObj\\.NotEmptyf"
				assObj.Falsef(0 == len(ch), "msg with arg %d", 42) // want "empty: use assObj\\.NotEmptyf"
			}

			// Valid.

			{
				assObj.NotEmpty(arr)
				assObj.NotEmpty(arr, "msg")
				assObj.NotEmpty(arr, "msg with arg %d", 42)
				assObj.NotEmptyf(arr, "msg")
				assObj.NotEmptyf(arr, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(arrPtr)
				assObj.NotEmpty(arrPtr, "msg")
				assObj.NotEmpty(arrPtr, "msg with arg %d", 42)
				assObj.NotEmptyf(arrPtr, "msg")
				assObj.NotEmptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(sl)
				assObj.NotEmpty(sl, "msg")
				assObj.NotEmpty(sl, "msg with arg %d", 42)
				assObj.NotEmptyf(sl, "msg")
				assObj.NotEmptyf(sl, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(mp)
				assObj.NotEmpty(mp, "msg")
				assObj.NotEmpty(mp, "msg with arg %d", 42)
				assObj.NotEmptyf(mp, "msg")
				assObj.NotEmptyf(mp, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(str)
				assObj.NotEmpty(str, "msg")
				assObj.NotEmpty(str, "msg with arg %d", 42)
				assObj.NotEmptyf(str, "msg")
				assObj.NotEmptyf(str, "msg with arg %d", 42)
			}

			{
				assObj.NotEmpty(ch)
				assObj.NotEmpty(ch, "msg")
				assObj.NotEmpty(ch, "msg with arg %d", 42)
				assObj.NotEmptyf(ch, "msg")
				assObj.NotEmptyf(ch, "msg with arg %d", 42)
			}
		}

		{
			{
				s.Require().NotEqual(len(arr), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(arr), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(len(arr), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().NotEqual(0, len(arr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(0, len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Greater(len(arr), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(arr), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(arr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greaterf(len(arr), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Greaterf(len(arr), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Less(0, len(arr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Lessf(0, len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Lessf(0, len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(arr) != 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(arr) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(arr) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 != len(arr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 != len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 != len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(arr) > 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(arr) > 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(arr) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(arr) > 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(arr) > 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 < len(arr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 < len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 < len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(len(arr) == 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(arr) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(len(arr) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(0 == len(arr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(arr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(arr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(0 == len(arr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(0 == len(arr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
			}

			{
				s.Require().NotEqual(len(arrPtr), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(arrPtr), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().NotEqual(0, len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(0, len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Greater(len(arrPtr), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(arrPtr), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greaterf(len(arrPtr), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Greaterf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Less(0, len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Lessf(0, len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Lessf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(arrPtr) != 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(arrPtr) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(arrPtr) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 != len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 != len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(arrPtr) > 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(arrPtr) > 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(arrPtr) > 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 < len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 < len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(len(arrPtr) == 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(arrPtr) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(len(arrPtr) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(0 == len(arrPtr))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(arrPtr), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(0 == len(arrPtr), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
			}

			{
				s.Require().NotEqual(len(sl), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(sl), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(len(sl), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().NotEqual(0, len(sl))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(0, len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Greater(len(sl), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(sl), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(sl), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greaterf(len(sl), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Greaterf(len(sl), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Less(0, len(sl))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Lessf(0, len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Lessf(0, len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(sl) != 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(sl) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(sl) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 != len(sl))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 != len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 != len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(sl) > 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(sl) > 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(sl) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(sl) > 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(sl) > 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 < len(sl))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 < len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 < len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(len(sl) == 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(sl) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(len(sl) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(0 == len(sl))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(sl), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(sl), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(0 == len(sl), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(0 == len(sl), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
			}

			{
				s.Require().NotEqual(len(mp), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(mp), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(len(mp), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().NotEqual(0, len(mp))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(0, len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Greater(len(mp), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(mp), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(mp), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greaterf(len(mp), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Greaterf(len(mp), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Less(0, len(mp))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Lessf(0, len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Lessf(0, len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(mp) != 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(mp) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(mp) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 != len(mp))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 != len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 != len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(mp) > 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(mp) > 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(mp) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(mp) > 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(mp) > 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 < len(mp))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 < len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 < len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(len(mp) == 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(mp) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(len(mp) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(0 == len(mp))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(mp), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(mp), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(0 == len(mp), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(0 == len(mp), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
			}

			{
				s.Require().NotEqual(len(str), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(str), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(len(str), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().NotEqual(0, len(str))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(0, len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Greater(len(str), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(str), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(str), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greaterf(len(str), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Greaterf(len(str), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Less(0, len(str))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Lessf(0, len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Lessf(0, len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(str) != 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(str) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(str) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(str) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(str) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 != len(str))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 != len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 != len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(str) > 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(str) > 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(str) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(str) > 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(str) > 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 < len(str))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 < len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 < len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(len(str) == 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(str) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(str) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(len(str) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(len(str) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(0 == len(str))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(str), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(str), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(0 == len(str), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(0 == len(str), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
			}

			{
				s.Require().NotEqual(len(ch), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(ch), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(len(ch), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().NotEqual(0, len(ch))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqual(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().NotEqualf(0, len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().NotEqualf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Greater(len(ch), 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(ch), 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greater(len(ch), 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Greaterf(len(ch), 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Greaterf(len(ch), 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().Less(0, len(ch))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Less(0, len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Lessf(0, len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Lessf(0, len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(ch) != 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(ch) != 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(ch) != 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 != len(ch))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 != len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 != len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 != len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(len(ch) > 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(ch) > 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(len(ch) > 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(len(ch) > 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(len(ch) > 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().True(0 < len(ch))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().True(0 < len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Truef(0 < len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Truef(0 < len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(len(ch) == 0)                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(ch) == 0, "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(len(ch) == 0, "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"

				s.Require().False(0 == len(ch))                         // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(ch), "msg")                  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().False(0 == len(ch), "msg with arg %d", 42)  // want "empty: use s\\.Require\\(\\)\\.NotEmpty"
				s.Require().Falsef(0 == len(ch), "msg")                 // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
				s.Require().Falsef(0 == len(ch), "msg with arg %d", 42) // want "empty: use s\\.Require\\(\\)\\.NotEmptyf"
			}

			// Valid.

			{
				s.Require().NotEmpty(arr)
				s.Require().NotEmpty(arr, "msg")
				s.Require().NotEmpty(arr, "msg with arg %d", 42)
				s.Require().NotEmptyf(arr, "msg")
				s.Require().NotEmptyf(arr, "msg with arg %d", 42)
			}

			{
				s.Require().NotEmpty(arrPtr)
				s.Require().NotEmpty(arrPtr, "msg")
				s.Require().NotEmpty(arrPtr, "msg with arg %d", 42)
				s.Require().NotEmptyf(arrPtr, "msg")
				s.Require().NotEmptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				s.Require().NotEmpty(sl)
				s.Require().NotEmpty(sl, "msg")
				s.Require().NotEmpty(sl, "msg with arg %d", 42)
				s.Require().NotEmptyf(sl, "msg")
				s.Require().NotEmptyf(sl, "msg with arg %d", 42)
			}

			{
				s.Require().NotEmpty(mp)
				s.Require().NotEmpty(mp, "msg")
				s.Require().NotEmpty(mp, "msg with arg %d", 42)
				s.Require().NotEmptyf(mp, "msg")
				s.Require().NotEmptyf(mp, "msg with arg %d", 42)
			}

			{
				s.Require().NotEmpty(str)
				s.Require().NotEmpty(str, "msg")
				s.Require().NotEmpty(str, "msg with arg %d", 42)
				s.Require().NotEmptyf(str, "msg")
				s.Require().NotEmptyf(str, "msg with arg %d", 42)
			}

			{
				s.Require().NotEmpty(ch)
				s.Require().NotEmpty(ch, "msg")
				s.Require().NotEmpty(ch, "msg with arg %d", 42)
				s.Require().NotEmptyf(ch, "msg")
				s.Require().NotEmptyf(ch, "msg with arg %d", 42)
			}
		}

		{
			{
				reqObj.NotEqual(len(arr), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(arr), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(arr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(arr), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(arr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(arr), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(arr), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(arr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(arr), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(arr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(arr) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arr) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arr) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(arr) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(arr) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(arr) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arr) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arr) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(arr) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(arr) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(arr) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(arr) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(arr) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(arr) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(arr) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(arr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(arr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(arr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(arr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(arr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(arrPtr), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(arrPtr), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(arrPtr), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(arrPtr), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(arrPtr), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(arrPtr), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(arrPtr), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(arrPtr), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(arrPtr) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arrPtr) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arrPtr) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(arrPtr) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(arrPtr) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(arrPtr) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arrPtr) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(arrPtr) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(arrPtr) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(arrPtr) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(arrPtr) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(arrPtr) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(arrPtr) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(arrPtr) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(arrPtr) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(arrPtr))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(arrPtr), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(arrPtr), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(arrPtr), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(arrPtr), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(sl), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(sl), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(sl), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(sl), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(sl), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(sl), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(sl), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(sl), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(sl), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(sl), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(sl) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(sl) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(sl) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(sl) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(sl) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(sl) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(sl) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(sl) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(sl) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(sl) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(sl) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(sl) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(sl) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(sl) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(sl) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(sl))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(sl), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(sl), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(sl), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(sl), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(mp), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(mp), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(mp), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(mp), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(mp), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(mp), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(mp), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(mp), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(mp), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(mp), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(mp) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(mp) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(mp) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(mp) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(mp) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(mp) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(mp) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(mp) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(mp) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(mp) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(mp) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(mp) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(mp) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(mp) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(mp) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(mp))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(mp), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(mp), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(mp), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(mp), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(str), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(str), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(str), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(str), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(str), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(str), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(str), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(str), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(str), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(str), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(str) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(str) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(str) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(str) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(str) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(str) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(str) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(str) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(str) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(str) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(str) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(str) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(str) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(str) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(str) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(str))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(str), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(str), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(str), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(str), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			{
				reqObj.NotEqual(len(ch), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(ch), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(len(ch), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(len(ch), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(len(ch), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.NotEqual(0, len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqual(0, len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.NotEqualf(0, len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.NotEqualf(0, len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Greater(len(ch), 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(ch), 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greater(len(ch), 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Greaterf(len(ch), 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Greaterf(len(ch), 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.Less(0, len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Less(0, len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Lessf(0, len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Lessf(0, len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(ch) != 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(ch) != 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(ch) != 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(ch) != 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(ch) != 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 != len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 != len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 != len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 != len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(len(ch) > 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(ch) > 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(len(ch) > 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(len(ch) > 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(len(ch) > 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.True(0 < len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.True(0 < len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Truef(0 < len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Truef(0 < len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(len(ch) == 0)                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(ch) == 0, "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(len(ch) == 0, "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(len(ch) == 0, "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(len(ch) == 0, "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"

				reqObj.False(0 == len(ch))                         // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(ch), "msg")                  // want "empty: use reqObj\\.NotEmpty"
				reqObj.False(0 == len(ch), "msg with arg %d", 42)  // want "empty: use reqObj\\.NotEmpty"
				reqObj.Falsef(0 == len(ch), "msg")                 // want "empty: use reqObj\\.NotEmptyf"
				reqObj.Falsef(0 == len(ch), "msg with arg %d", 42) // want "empty: use reqObj\\.NotEmptyf"
			}

			// Valid.

			{
				reqObj.NotEmpty(arr)
				reqObj.NotEmpty(arr, "msg")
				reqObj.NotEmpty(arr, "msg with arg %d", 42)
				reqObj.NotEmptyf(arr, "msg")
				reqObj.NotEmptyf(arr, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(arrPtr)
				reqObj.NotEmpty(arrPtr, "msg")
				reqObj.NotEmpty(arrPtr, "msg with arg %d", 42)
				reqObj.NotEmptyf(arrPtr, "msg")
				reqObj.NotEmptyf(arrPtr, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(sl)
				reqObj.NotEmpty(sl, "msg")
				reqObj.NotEmpty(sl, "msg with arg %d", 42)
				reqObj.NotEmptyf(sl, "msg")
				reqObj.NotEmptyf(sl, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(mp)
				reqObj.NotEmpty(mp, "msg")
				reqObj.NotEmpty(mp, "msg with arg %d", 42)
				reqObj.NotEmptyf(mp, "msg")
				reqObj.NotEmptyf(mp, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(str)
				reqObj.NotEmpty(str, "msg")
				reqObj.NotEmpty(str, "msg with arg %d", 42)
				reqObj.NotEmptyf(str, "msg")
				reqObj.NotEmptyf(str, "msg with arg %d", 42)
			}

			{
				reqObj.NotEmpty(ch)
				reqObj.NotEmpty(ch, "msg")
				reqObj.NotEmpty(ch, "msg with arg %d", 42)
				reqObj.NotEmptyf(ch, "msg")
				reqObj.NotEmptyf(ch, "msg with arg %d", 42)
			}
		}
	}
}
