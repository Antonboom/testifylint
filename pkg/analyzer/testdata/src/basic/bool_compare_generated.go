// Code generated by testifylint/internal/cmd/testgen. DO NOT EDIT.

package basic

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestBoolCompare_True(t *testing.T) {
	type withBool struct{ b bool }
	boolOp := func() bool { return true }

	var a bool
	var b withBool
	c := true
	const d = false
	e := new(bool)
	var f *bool
	var g withBoolMethod

	t.Run("assert", func(t *testing.T) {
		{
			assert.Equal(t, a, true)                         // want "use assert.True"
			assert.Equal(t, a, true, "msg")                  // want "use assert.True"
			assert.Equal(t, a, true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, a, true, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, a, true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.Equal(t, true, a)                         // want "use assert.True"
			assert.Equal(t, true, a, "msg")                  // want "use assert.True"
			assert.Equal(t, true, a, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, true, a, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, true, a, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, a, false)                         // want "use assert.True"
			assert.NotEqual(t, a, false, "msg")                  // want "use assert.True"
			assert.NotEqual(t, a, false, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, a, false, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, a, false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, false, a)                         // want "use assert.True"
			assert.NotEqual(t, false, a, "msg")                  // want "use assert.True"
			assert.NotEqual(t, false, a, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, false, a, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, false, a, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, a == true)                         // want "need to simplify the check"
			assert.True(t, a == true, "msg")                  // want "need to simplify the check"
			assert.True(t, a == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, a == true, "msg")                 // want "need to simplify the check"
			assert.Truef(t, a == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, true == a)                         // want "need to simplify the check"
			assert.True(t, true == a, "msg")                  // want "need to simplify the check"
			assert.True(t, true == a, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, true == a, "msg")                 // want "need to simplify the check"
			assert.Truef(t, true == a, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, a == false)                         // want "use assert.True"
			assert.False(t, a == false, "msg")                  // want "use assert.True"
			assert.False(t, a == false, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, a == false, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, a == false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, false == a)                         // want "use assert.True"
			assert.False(t, false == a, "msg")                  // want "use assert.True"
			assert.False(t, false == a, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, false == a, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, false == a, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, a != true)                         // want "use assert.True"
			assert.False(t, a != true, "msg")                  // want "use assert.True"
			assert.False(t, a != true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, a != true, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, a != true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, true != a)                         // want "use assert.True"
			assert.False(t, true != a, "msg")                  // want "use assert.True"
			assert.False(t, true != a, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, true != a, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, true != a, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, a != false)                         // want "need to simplify the check"
			assert.True(t, a != false, "msg")                  // want "need to simplify the check"
			assert.True(t, a != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, a != false, "msg")                 // want "need to simplify the check"
			assert.Truef(t, a != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, false != a)                         // want "need to simplify the check"
			assert.True(t, false != a, "msg")                  // want "need to simplify the check"
			assert.True(t, false != a, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, false != a, "msg")                 // want "need to simplify the check"
			assert.Truef(t, false != a, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, !a)                         // want "use assert.True"
			assert.False(t, !a, "msg")                  // want "use assert.True"
			assert.False(t, !a, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, !a, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, !a, "msg with arg %d", 42) // want "use assert.Truef"
		}

		{
			assert.Equal(t, b.b, true)                         // want "use assert.True"
			assert.Equal(t, b.b, true, "msg")                  // want "use assert.True"
			assert.Equal(t, b.b, true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, b.b, true, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, b.b, true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.Equal(t, true, b.b)                         // want "use assert.True"
			assert.Equal(t, true, b.b, "msg")                  // want "use assert.True"
			assert.Equal(t, true, b.b, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, true, b.b, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, true, b.b, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, b.b, false)                         // want "use assert.True"
			assert.NotEqual(t, b.b, false, "msg")                  // want "use assert.True"
			assert.NotEqual(t, b.b, false, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, b.b, false, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, b.b, false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, false, b.b)                         // want "use assert.True"
			assert.NotEqual(t, false, b.b, "msg")                  // want "use assert.True"
			assert.NotEqual(t, false, b.b, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, false, b.b, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, false, b.b, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, b.b == true)                         // want "need to simplify the check"
			assert.True(t, b.b == true, "msg")                  // want "need to simplify the check"
			assert.True(t, b.b == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, b.b == true, "msg")                 // want "need to simplify the check"
			assert.Truef(t, b.b == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, true == b.b)                         // want "need to simplify the check"
			assert.True(t, true == b.b, "msg")                  // want "need to simplify the check"
			assert.True(t, true == b.b, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, true == b.b, "msg")                 // want "need to simplify the check"
			assert.Truef(t, true == b.b, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, b.b == false)                         // want "use assert.True"
			assert.False(t, b.b == false, "msg")                  // want "use assert.True"
			assert.False(t, b.b == false, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, b.b == false, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, b.b == false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, false == b.b)                         // want "use assert.True"
			assert.False(t, false == b.b, "msg")                  // want "use assert.True"
			assert.False(t, false == b.b, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, false == b.b, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, false == b.b, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, b.b != true)                         // want "use assert.True"
			assert.False(t, b.b != true, "msg")                  // want "use assert.True"
			assert.False(t, b.b != true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, b.b != true, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, b.b != true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, true != b.b)                         // want "use assert.True"
			assert.False(t, true != b.b, "msg")                  // want "use assert.True"
			assert.False(t, true != b.b, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, true != b.b, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, true != b.b, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, b.b != false)                         // want "need to simplify the check"
			assert.True(t, b.b != false, "msg")                  // want "need to simplify the check"
			assert.True(t, b.b != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, b.b != false, "msg")                 // want "need to simplify the check"
			assert.Truef(t, b.b != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, false != b.b)                         // want "need to simplify the check"
			assert.True(t, false != b.b, "msg")                  // want "need to simplify the check"
			assert.True(t, false != b.b, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, false != b.b, "msg")                 // want "need to simplify the check"
			assert.Truef(t, false != b.b, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, !b.b)                         // want "use assert.True"
			assert.False(t, !b.b, "msg")                  // want "use assert.True"
			assert.False(t, !b.b, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, !b.b, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, !b.b, "msg with arg %d", 42) // want "use assert.Truef"
		}

		{
			assert.Equal(t, c, true)                         // want "use assert.True"
			assert.Equal(t, c, true, "msg")                  // want "use assert.True"
			assert.Equal(t, c, true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, c, true, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, c, true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.Equal(t, true, c)                         // want "use assert.True"
			assert.Equal(t, true, c, "msg")                  // want "use assert.True"
			assert.Equal(t, true, c, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, true, c, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, true, c, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, c, false)                         // want "use assert.True"
			assert.NotEqual(t, c, false, "msg")                  // want "use assert.True"
			assert.NotEqual(t, c, false, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, c, false, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, c, false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, false, c)                         // want "use assert.True"
			assert.NotEqual(t, false, c, "msg")                  // want "use assert.True"
			assert.NotEqual(t, false, c, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, false, c, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, false, c, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, c == true)                         // want "need to simplify the check"
			assert.True(t, c == true, "msg")                  // want "need to simplify the check"
			assert.True(t, c == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, c == true, "msg")                 // want "need to simplify the check"
			assert.Truef(t, c == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, true == c)                         // want "need to simplify the check"
			assert.True(t, true == c, "msg")                  // want "need to simplify the check"
			assert.True(t, true == c, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, true == c, "msg")                 // want "need to simplify the check"
			assert.Truef(t, true == c, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, c == false)                         // want "use assert.True"
			assert.False(t, c == false, "msg")                  // want "use assert.True"
			assert.False(t, c == false, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, c == false, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, c == false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, false == c)                         // want "use assert.True"
			assert.False(t, false == c, "msg")                  // want "use assert.True"
			assert.False(t, false == c, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, false == c, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, false == c, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, c != true)                         // want "use assert.True"
			assert.False(t, c != true, "msg")                  // want "use assert.True"
			assert.False(t, c != true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, c != true, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, c != true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, true != c)                         // want "use assert.True"
			assert.False(t, true != c, "msg")                  // want "use assert.True"
			assert.False(t, true != c, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, true != c, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, true != c, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, c != false)                         // want "need to simplify the check"
			assert.True(t, c != false, "msg")                  // want "need to simplify the check"
			assert.True(t, c != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, c != false, "msg")                 // want "need to simplify the check"
			assert.Truef(t, c != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, false != c)                         // want "need to simplify the check"
			assert.True(t, false != c, "msg")                  // want "need to simplify the check"
			assert.True(t, false != c, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, false != c, "msg")                 // want "need to simplify the check"
			assert.Truef(t, false != c, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, !c)                         // want "use assert.True"
			assert.False(t, !c, "msg")                  // want "use assert.True"
			assert.False(t, !c, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, !c, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, !c, "msg with arg %d", 42) // want "use assert.Truef"
		}

		{
			assert.Equal(t, d, true)                         // want "use assert.True"
			assert.Equal(t, d, true, "msg")                  // want "use assert.True"
			assert.Equal(t, d, true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, d, true, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, d, true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.Equal(t, true, d)                         // want "use assert.True"
			assert.Equal(t, true, d, "msg")                  // want "use assert.True"
			assert.Equal(t, true, d, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, true, d, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, true, d, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, d, false)                         // want "use assert.True"
			assert.NotEqual(t, d, false, "msg")                  // want "use assert.True"
			assert.NotEqual(t, d, false, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, d, false, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, d, false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, false, d)                         // want "use assert.True"
			assert.NotEqual(t, false, d, "msg")                  // want "use assert.True"
			assert.NotEqual(t, false, d, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, false, d, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, false, d, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, d == true)                         // want "need to simplify the check"
			assert.True(t, d == true, "msg")                  // want "need to simplify the check"
			assert.True(t, d == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, d == true, "msg")                 // want "need to simplify the check"
			assert.Truef(t, d == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, true == d)                         // want "need to simplify the check"
			assert.True(t, true == d, "msg")                  // want "need to simplify the check"
			assert.True(t, true == d, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, true == d, "msg")                 // want "need to simplify the check"
			assert.Truef(t, true == d, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, d == false)                         // want "use assert.True"
			assert.False(t, d == false, "msg")                  // want "use assert.True"
			assert.False(t, d == false, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, d == false, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, d == false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, false == d)                         // want "use assert.True"
			assert.False(t, false == d, "msg")                  // want "use assert.True"
			assert.False(t, false == d, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, false == d, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, false == d, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, d != true)                         // want "use assert.True"
			assert.False(t, d != true, "msg")                  // want "use assert.True"
			assert.False(t, d != true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, d != true, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, d != true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, true != d)                         // want "use assert.True"
			assert.False(t, true != d, "msg")                  // want "use assert.True"
			assert.False(t, true != d, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, true != d, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, true != d, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, d != false)                         // want "need to simplify the check"
			assert.True(t, d != false, "msg")                  // want "need to simplify the check"
			assert.True(t, d != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, d != false, "msg")                 // want "need to simplify the check"
			assert.Truef(t, d != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, false != d)                         // want "need to simplify the check"
			assert.True(t, false != d, "msg")                  // want "need to simplify the check"
			assert.True(t, false != d, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, false != d, "msg")                 // want "need to simplify the check"
			assert.Truef(t, false != d, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, !d)                         // want "use assert.True"
			assert.False(t, !d, "msg")                  // want "use assert.True"
			assert.False(t, !d, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, !d, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, !d, "msg with arg %d", 42) // want "use assert.Truef"
		}

		{
			assert.Equal(t, *e, true)                         // want "use assert.True"
			assert.Equal(t, *e, true, "msg")                  // want "use assert.True"
			assert.Equal(t, *e, true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, *e, true, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, *e, true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.Equal(t, true, *e)                         // want "use assert.True"
			assert.Equal(t, true, *e, "msg")                  // want "use assert.True"
			assert.Equal(t, true, *e, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, true, *e, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, true, *e, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, *e, false)                         // want "use assert.True"
			assert.NotEqual(t, *e, false, "msg")                  // want "use assert.True"
			assert.NotEqual(t, *e, false, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, *e, false, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, *e, false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, false, *e)                         // want "use assert.True"
			assert.NotEqual(t, false, *e, "msg")                  // want "use assert.True"
			assert.NotEqual(t, false, *e, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, false, *e, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, false, *e, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, *e == true)                         // want "need to simplify the check"
			assert.True(t, *e == true, "msg")                  // want "need to simplify the check"
			assert.True(t, *e == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, *e == true, "msg")                 // want "need to simplify the check"
			assert.Truef(t, *e == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, true == *e)                         // want "need to simplify the check"
			assert.True(t, true == *e, "msg")                  // want "need to simplify the check"
			assert.True(t, true == *e, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, true == *e, "msg")                 // want "need to simplify the check"
			assert.Truef(t, true == *e, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, *e == false)                         // want "use assert.True"
			assert.False(t, *e == false, "msg")                  // want "use assert.True"
			assert.False(t, *e == false, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, *e == false, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, *e == false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, false == *e)                         // want "use assert.True"
			assert.False(t, false == *e, "msg")                  // want "use assert.True"
			assert.False(t, false == *e, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, false == *e, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, false == *e, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, *e != true)                         // want "use assert.True"
			assert.False(t, *e != true, "msg")                  // want "use assert.True"
			assert.False(t, *e != true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, *e != true, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, *e != true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, true != *e)                         // want "use assert.True"
			assert.False(t, true != *e, "msg")                  // want "use assert.True"
			assert.False(t, true != *e, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, true != *e, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, true != *e, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, *e != false)                         // want "need to simplify the check"
			assert.True(t, *e != false, "msg")                  // want "need to simplify the check"
			assert.True(t, *e != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, *e != false, "msg")                 // want "need to simplify the check"
			assert.Truef(t, *e != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, false != *e)                         // want "need to simplify the check"
			assert.True(t, false != *e, "msg")                  // want "need to simplify the check"
			assert.True(t, false != *e, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, false != *e, "msg")                 // want "need to simplify the check"
			assert.Truef(t, false != *e, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, !*e)                         // want "use assert.True"
			assert.False(t, !*e, "msg")                  // want "use assert.True"
			assert.False(t, !*e, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, !*e, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, !*e, "msg with arg %d", 42) // want "use assert.Truef"
		}

		{
			assert.Equal(t, *f, true)                         // want "use assert.True"
			assert.Equal(t, *f, true, "msg")                  // want "use assert.True"
			assert.Equal(t, *f, true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, *f, true, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, *f, true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.Equal(t, true, *f)                         // want "use assert.True"
			assert.Equal(t, true, *f, "msg")                  // want "use assert.True"
			assert.Equal(t, true, *f, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, true, *f, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, true, *f, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, *f, false)                         // want "use assert.True"
			assert.NotEqual(t, *f, false, "msg")                  // want "use assert.True"
			assert.NotEqual(t, *f, false, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, *f, false, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, *f, false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, false, *f)                         // want "use assert.True"
			assert.NotEqual(t, false, *f, "msg")                  // want "use assert.True"
			assert.NotEqual(t, false, *f, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, false, *f, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, false, *f, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, *f == true)                         // want "need to simplify the check"
			assert.True(t, *f == true, "msg")                  // want "need to simplify the check"
			assert.True(t, *f == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, *f == true, "msg")                 // want "need to simplify the check"
			assert.Truef(t, *f == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, true == *f)                         // want "need to simplify the check"
			assert.True(t, true == *f, "msg")                  // want "need to simplify the check"
			assert.True(t, true == *f, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, true == *f, "msg")                 // want "need to simplify the check"
			assert.Truef(t, true == *f, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, *f == false)                         // want "use assert.True"
			assert.False(t, *f == false, "msg")                  // want "use assert.True"
			assert.False(t, *f == false, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, *f == false, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, *f == false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, false == *f)                         // want "use assert.True"
			assert.False(t, false == *f, "msg")                  // want "use assert.True"
			assert.False(t, false == *f, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, false == *f, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, false == *f, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, *f != true)                         // want "use assert.True"
			assert.False(t, *f != true, "msg")                  // want "use assert.True"
			assert.False(t, *f != true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, *f != true, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, *f != true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, true != *f)                         // want "use assert.True"
			assert.False(t, true != *f, "msg")                  // want "use assert.True"
			assert.False(t, true != *f, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, true != *f, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, true != *f, "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, *f != false)                         // want "need to simplify the check"
			assert.True(t, *f != false, "msg")                  // want "need to simplify the check"
			assert.True(t, *f != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, *f != false, "msg")                 // want "need to simplify the check"
			assert.Truef(t, *f != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, false != *f)                         // want "need to simplify the check"
			assert.True(t, false != *f, "msg")                  // want "need to simplify the check"
			assert.True(t, false != *f, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, false != *f, "msg")                 // want "need to simplify the check"
			assert.Truef(t, false != *f, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, !*f)                         // want "use assert.True"
			assert.False(t, !*f, "msg")                  // want "use assert.True"
			assert.False(t, !*f, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, !*f, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, !*f, "msg with arg %d", 42) // want "use assert.Truef"
		}

		{
			assert.Equal(t, g.TheyKilledKenny(), true)                         // want "use assert.True"
			assert.Equal(t, g.TheyKilledKenny(), true, "msg")                  // want "use assert.True"
			assert.Equal(t, g.TheyKilledKenny(), true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, g.TheyKilledKenny(), true, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, g.TheyKilledKenny(), true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.Equal(t, true, g.TheyKilledKenny())                         // want "use assert.True"
			assert.Equal(t, true, g.TheyKilledKenny(), "msg")                  // want "use assert.True"
			assert.Equal(t, true, g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, true, g.TheyKilledKenny(), "msg")                 // want "use assert.Truef"
			assert.Equalf(t, true, g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, g.TheyKilledKenny(), false)                         // want "use assert.True"
			assert.NotEqual(t, g.TheyKilledKenny(), false, "msg")                  // want "use assert.True"
			assert.NotEqual(t, g.TheyKilledKenny(), false, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, g.TheyKilledKenny(), false, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, g.TheyKilledKenny(), false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, false, g.TheyKilledKenny())                         // want "use assert.True"
			assert.NotEqual(t, false, g.TheyKilledKenny(), "msg")                  // want "use assert.True"
			assert.NotEqual(t, false, g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, false, g.TheyKilledKenny(), "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, false, g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, g.TheyKilledKenny() == true)                         // want "need to simplify the check"
			assert.True(t, g.TheyKilledKenny() == true, "msg")                  // want "need to simplify the check"
			assert.True(t, g.TheyKilledKenny() == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, g.TheyKilledKenny() == true, "msg")                 // want "need to simplify the check"
			assert.Truef(t, g.TheyKilledKenny() == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, true == g.TheyKilledKenny())                         // want "need to simplify the check"
			assert.True(t, true == g.TheyKilledKenny(), "msg")                  // want "need to simplify the check"
			assert.True(t, true == g.TheyKilledKenny(), "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, true == g.TheyKilledKenny(), "msg")                 // want "need to simplify the check"
			assert.Truef(t, true == g.TheyKilledKenny(), "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, g.TheyKilledKenny() == false)                         // want "use assert.True"
			assert.False(t, g.TheyKilledKenny() == false, "msg")                  // want "use assert.True"
			assert.False(t, g.TheyKilledKenny() == false, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, g.TheyKilledKenny() == false, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, g.TheyKilledKenny() == false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, false == g.TheyKilledKenny())                         // want "use assert.True"
			assert.False(t, false == g.TheyKilledKenny(), "msg")                  // want "use assert.True"
			assert.False(t, false == g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, false == g.TheyKilledKenny(), "msg")                 // want "use assert.Truef"
			assert.Falsef(t, false == g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, g.TheyKilledKenny() != true)                         // want "use assert.True"
			assert.False(t, g.TheyKilledKenny() != true, "msg")                  // want "use assert.True"
			assert.False(t, g.TheyKilledKenny() != true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, g.TheyKilledKenny() != true, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, g.TheyKilledKenny() != true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, true != g.TheyKilledKenny())                         // want "use assert.True"
			assert.False(t, true != g.TheyKilledKenny(), "msg")                  // want "use assert.True"
			assert.False(t, true != g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, true != g.TheyKilledKenny(), "msg")                 // want "use assert.Truef"
			assert.Falsef(t, true != g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, g.TheyKilledKenny() != false)                         // want "need to simplify the check"
			assert.True(t, g.TheyKilledKenny() != false, "msg")                  // want "need to simplify the check"
			assert.True(t, g.TheyKilledKenny() != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, g.TheyKilledKenny() != false, "msg")                 // want "need to simplify the check"
			assert.Truef(t, g.TheyKilledKenny() != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, false != g.TheyKilledKenny())                         // want "need to simplify the check"
			assert.True(t, false != g.TheyKilledKenny(), "msg")                  // want "need to simplify the check"
			assert.True(t, false != g.TheyKilledKenny(), "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, false != g.TheyKilledKenny(), "msg")                 // want "need to simplify the check"
			assert.Truef(t, false != g.TheyKilledKenny(), "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, !g.TheyKilledKenny())                         // want "use assert.True"
			assert.False(t, !g.TheyKilledKenny(), "msg")                  // want "use assert.True"
			assert.False(t, !g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, !g.TheyKilledKenny(), "msg")                 // want "use assert.Truef"
			assert.Falsef(t, !g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Truef"
		}

		{
			assert.Equal(t, boolOp(), true)                         // want "use assert.True"
			assert.Equal(t, boolOp(), true, "msg")                  // want "use assert.True"
			assert.Equal(t, boolOp(), true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, boolOp(), true, "msg")                 // want "use assert.Truef"
			assert.Equalf(t, boolOp(), true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.Equal(t, true, boolOp())                         // want "use assert.True"
			assert.Equal(t, true, boolOp(), "msg")                  // want "use assert.True"
			assert.Equal(t, true, boolOp(), "msg with arg %d", 42)  // want "use assert.True"
			assert.Equalf(t, true, boolOp(), "msg")                 // want "use assert.Truef"
			assert.Equalf(t, true, boolOp(), "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, boolOp(), false)                         // want "use assert.True"
			assert.NotEqual(t, boolOp(), false, "msg")                  // want "use assert.True"
			assert.NotEqual(t, boolOp(), false, "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, boolOp(), false, "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, boolOp(), false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.NotEqual(t, false, boolOp())                         // want "use assert.True"
			assert.NotEqual(t, false, boolOp(), "msg")                  // want "use assert.True"
			assert.NotEqual(t, false, boolOp(), "msg with arg %d", 42)  // want "use assert.True"
			assert.NotEqualf(t, false, boolOp(), "msg")                 // want "use assert.Truef"
			assert.NotEqualf(t, false, boolOp(), "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, boolOp() == true)                         // want "need to simplify the check"
			assert.True(t, boolOp() == true, "msg")                  // want "need to simplify the check"
			assert.True(t, boolOp() == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, boolOp() == true, "msg")                 // want "need to simplify the check"
			assert.Truef(t, boolOp() == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, true == boolOp())                         // want "need to simplify the check"
			assert.True(t, true == boolOp(), "msg")                  // want "need to simplify the check"
			assert.True(t, true == boolOp(), "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, true == boolOp(), "msg")                 // want "need to simplify the check"
			assert.Truef(t, true == boolOp(), "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, boolOp() == false)                         // want "use assert.True"
			assert.False(t, boolOp() == false, "msg")                  // want "use assert.True"
			assert.False(t, boolOp() == false, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, boolOp() == false, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, boolOp() == false, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, false == boolOp())                         // want "use assert.True"
			assert.False(t, false == boolOp(), "msg")                  // want "use assert.True"
			assert.False(t, false == boolOp(), "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, false == boolOp(), "msg")                 // want "use assert.Truef"
			assert.Falsef(t, false == boolOp(), "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, boolOp() != true)                         // want "use assert.True"
			assert.False(t, boolOp() != true, "msg")                  // want "use assert.True"
			assert.False(t, boolOp() != true, "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, boolOp() != true, "msg")                 // want "use assert.Truef"
			assert.Falsef(t, boolOp() != true, "msg with arg %d", 42) // want "use assert.Truef"

			assert.False(t, true != boolOp())                         // want "use assert.True"
			assert.False(t, true != boolOp(), "msg")                  // want "use assert.True"
			assert.False(t, true != boolOp(), "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, true != boolOp(), "msg")                 // want "use assert.Truef"
			assert.Falsef(t, true != boolOp(), "msg with arg %d", 42) // want "use assert.Truef"

			assert.True(t, boolOp() != false)                         // want "need to simplify the check"
			assert.True(t, boolOp() != false, "msg")                  // want "need to simplify the check"
			assert.True(t, boolOp() != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, boolOp() != false, "msg")                 // want "need to simplify the check"
			assert.Truef(t, boolOp() != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, false != boolOp())                         // want "need to simplify the check"
			assert.True(t, false != boolOp(), "msg")                  // want "need to simplify the check"
			assert.True(t, false != boolOp(), "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Truef(t, false != boolOp(), "msg")                 // want "need to simplify the check"
			assert.Truef(t, false != boolOp(), "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, !boolOp())                         // want "use assert.True"
			assert.False(t, !boolOp(), "msg")                  // want "use assert.True"
			assert.False(t, !boolOp(), "msg with arg %d", 42)  // want "use assert.True"
			assert.Falsef(t, !boolOp(), "msg")                 // want "use assert.Truef"
			assert.Falsef(t, !boolOp(), "msg with arg %d", 42) // want "use assert.Truef"
		}

		// Valid asserts.
		{
			assert.True(t, a)
			assert.True(t, a, "msg")
			assert.True(t, a, "msg with arg %d", 42)
			assert.Truef(t, a, "msg")
			assert.Truef(t, a, "msg with arg %d", 42)
		}

		{
			assert.True(t, b.b)
			assert.True(t, b.b, "msg")
			assert.True(t, b.b, "msg with arg %d", 42)
			assert.Truef(t, b.b, "msg")
			assert.Truef(t, b.b, "msg with arg %d", 42)
		}

		{
			assert.True(t, c)
			assert.True(t, c, "msg")
			assert.True(t, c, "msg with arg %d", 42)
			assert.Truef(t, c, "msg")
			assert.Truef(t, c, "msg with arg %d", 42)
		}

		{
			assert.True(t, d)
			assert.True(t, d, "msg")
			assert.True(t, d, "msg with arg %d", 42)
			assert.Truef(t, d, "msg")
			assert.Truef(t, d, "msg with arg %d", 42)
		}

		{
			assert.True(t, *e)
			assert.True(t, *e, "msg")
			assert.True(t, *e, "msg with arg %d", 42)
			assert.Truef(t, *e, "msg")
			assert.Truef(t, *e, "msg with arg %d", 42)
		}

		{
			assert.True(t, *f)
			assert.True(t, *f, "msg")
			assert.True(t, *f, "msg with arg %d", 42)
			assert.Truef(t, *f, "msg")
			assert.Truef(t, *f, "msg with arg %d", 42)
		}

		{
			assert.True(t, g.TheyKilledKenny())
			assert.True(t, g.TheyKilledKenny(), "msg")
			assert.True(t, g.TheyKilledKenny(), "msg with arg %d", 42)
			assert.Truef(t, g.TheyKilledKenny(), "msg")
			assert.Truef(t, g.TheyKilledKenny(), "msg with arg %d", 42)
		}

		{
			assert.True(t, boolOp())
			assert.True(t, boolOp(), "msg")
			assert.True(t, boolOp(), "msg with arg %d", 42)
			assert.Truef(t, boolOp(), "msg")
			assert.Truef(t, boolOp(), "msg with arg %d", 42)
		}

	})

	t.Run("require", func(t *testing.T) {
		{
			require.Equal(t, a, true)                         // want "use require.True"
			require.Equal(t, a, true, "msg")                  // want "use require.True"
			require.Equal(t, a, true, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, a, true, "msg")                 // want "use require.Truef"
			require.Equalf(t, a, true, "msg with arg %d", 42) // want "use require.Truef"

			require.Equal(t, true, a)                         // want "use require.True"
			require.Equal(t, true, a, "msg")                  // want "use require.True"
			require.Equal(t, true, a, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, true, a, "msg")                 // want "use require.Truef"
			require.Equalf(t, true, a, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, a, false)                         // want "use require.True"
			require.NotEqual(t, a, false, "msg")                  // want "use require.True"
			require.NotEqual(t, a, false, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, a, false, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, a, false, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, false, a)                         // want "use require.True"
			require.NotEqual(t, false, a, "msg")                  // want "use require.True"
			require.NotEqual(t, false, a, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, false, a, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, false, a, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, a == true)                         // want "need to simplify the check"
			require.True(t, a == true, "msg")                  // want "need to simplify the check"
			require.True(t, a == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, a == true, "msg")                 // want "need to simplify the check"
			require.Truef(t, a == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, true == a)                         // want "need to simplify the check"
			require.True(t, true == a, "msg")                  // want "need to simplify the check"
			require.True(t, true == a, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, true == a, "msg")                 // want "need to simplify the check"
			require.Truef(t, true == a, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, a == false)                         // want "use require.True"
			require.False(t, a == false, "msg")                  // want "use require.True"
			require.False(t, a == false, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, a == false, "msg")                 // want "use require.Truef"
			require.Falsef(t, a == false, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, false == a)                         // want "use require.True"
			require.False(t, false == a, "msg")                  // want "use require.True"
			require.False(t, false == a, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, false == a, "msg")                 // want "use require.Truef"
			require.Falsef(t, false == a, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, a != true)                         // want "use require.True"
			require.False(t, a != true, "msg")                  // want "use require.True"
			require.False(t, a != true, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, a != true, "msg")                 // want "use require.Truef"
			require.Falsef(t, a != true, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, true != a)                         // want "use require.True"
			require.False(t, true != a, "msg")                  // want "use require.True"
			require.False(t, true != a, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, true != a, "msg")                 // want "use require.Truef"
			require.Falsef(t, true != a, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, a != false)                         // want "need to simplify the check"
			require.True(t, a != false, "msg")                  // want "need to simplify the check"
			require.True(t, a != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, a != false, "msg")                 // want "need to simplify the check"
			require.Truef(t, a != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, false != a)                         // want "need to simplify the check"
			require.True(t, false != a, "msg")                  // want "need to simplify the check"
			require.True(t, false != a, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, false != a, "msg")                 // want "need to simplify the check"
			require.Truef(t, false != a, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, !a)                         // want "use require.True"
			require.False(t, !a, "msg")                  // want "use require.True"
			require.False(t, !a, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, !a, "msg")                 // want "use require.Truef"
			require.Falsef(t, !a, "msg with arg %d", 42) // want "use require.Truef"
		}

		{
			require.Equal(t, b.b, true)                         // want "use require.True"
			require.Equal(t, b.b, true, "msg")                  // want "use require.True"
			require.Equal(t, b.b, true, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, b.b, true, "msg")                 // want "use require.Truef"
			require.Equalf(t, b.b, true, "msg with arg %d", 42) // want "use require.Truef"

			require.Equal(t, true, b.b)                         // want "use require.True"
			require.Equal(t, true, b.b, "msg")                  // want "use require.True"
			require.Equal(t, true, b.b, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, true, b.b, "msg")                 // want "use require.Truef"
			require.Equalf(t, true, b.b, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, b.b, false)                         // want "use require.True"
			require.NotEqual(t, b.b, false, "msg")                  // want "use require.True"
			require.NotEqual(t, b.b, false, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, b.b, false, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, b.b, false, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, false, b.b)                         // want "use require.True"
			require.NotEqual(t, false, b.b, "msg")                  // want "use require.True"
			require.NotEqual(t, false, b.b, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, false, b.b, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, false, b.b, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, b.b == true)                         // want "need to simplify the check"
			require.True(t, b.b == true, "msg")                  // want "need to simplify the check"
			require.True(t, b.b == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, b.b == true, "msg")                 // want "need to simplify the check"
			require.Truef(t, b.b == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, true == b.b)                         // want "need to simplify the check"
			require.True(t, true == b.b, "msg")                  // want "need to simplify the check"
			require.True(t, true == b.b, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, true == b.b, "msg")                 // want "need to simplify the check"
			require.Truef(t, true == b.b, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, b.b == false)                         // want "use require.True"
			require.False(t, b.b == false, "msg")                  // want "use require.True"
			require.False(t, b.b == false, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, b.b == false, "msg")                 // want "use require.Truef"
			require.Falsef(t, b.b == false, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, false == b.b)                         // want "use require.True"
			require.False(t, false == b.b, "msg")                  // want "use require.True"
			require.False(t, false == b.b, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, false == b.b, "msg")                 // want "use require.Truef"
			require.Falsef(t, false == b.b, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, b.b != true)                         // want "use require.True"
			require.False(t, b.b != true, "msg")                  // want "use require.True"
			require.False(t, b.b != true, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, b.b != true, "msg")                 // want "use require.Truef"
			require.Falsef(t, b.b != true, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, true != b.b)                         // want "use require.True"
			require.False(t, true != b.b, "msg")                  // want "use require.True"
			require.False(t, true != b.b, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, true != b.b, "msg")                 // want "use require.Truef"
			require.Falsef(t, true != b.b, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, b.b != false)                         // want "need to simplify the check"
			require.True(t, b.b != false, "msg")                  // want "need to simplify the check"
			require.True(t, b.b != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, b.b != false, "msg")                 // want "need to simplify the check"
			require.Truef(t, b.b != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, false != b.b)                         // want "need to simplify the check"
			require.True(t, false != b.b, "msg")                  // want "need to simplify the check"
			require.True(t, false != b.b, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, false != b.b, "msg")                 // want "need to simplify the check"
			require.Truef(t, false != b.b, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, !b.b)                         // want "use require.True"
			require.False(t, !b.b, "msg")                  // want "use require.True"
			require.False(t, !b.b, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, !b.b, "msg")                 // want "use require.Truef"
			require.Falsef(t, !b.b, "msg with arg %d", 42) // want "use require.Truef"
		}

		{
			require.Equal(t, c, true)                         // want "use require.True"
			require.Equal(t, c, true, "msg")                  // want "use require.True"
			require.Equal(t, c, true, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, c, true, "msg")                 // want "use require.Truef"
			require.Equalf(t, c, true, "msg with arg %d", 42) // want "use require.Truef"

			require.Equal(t, true, c)                         // want "use require.True"
			require.Equal(t, true, c, "msg")                  // want "use require.True"
			require.Equal(t, true, c, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, true, c, "msg")                 // want "use require.Truef"
			require.Equalf(t, true, c, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, c, false)                         // want "use require.True"
			require.NotEqual(t, c, false, "msg")                  // want "use require.True"
			require.NotEqual(t, c, false, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, c, false, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, c, false, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, false, c)                         // want "use require.True"
			require.NotEqual(t, false, c, "msg")                  // want "use require.True"
			require.NotEqual(t, false, c, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, false, c, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, false, c, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, c == true)                         // want "need to simplify the check"
			require.True(t, c == true, "msg")                  // want "need to simplify the check"
			require.True(t, c == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, c == true, "msg")                 // want "need to simplify the check"
			require.Truef(t, c == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, true == c)                         // want "need to simplify the check"
			require.True(t, true == c, "msg")                  // want "need to simplify the check"
			require.True(t, true == c, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, true == c, "msg")                 // want "need to simplify the check"
			require.Truef(t, true == c, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, c == false)                         // want "use require.True"
			require.False(t, c == false, "msg")                  // want "use require.True"
			require.False(t, c == false, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, c == false, "msg")                 // want "use require.Truef"
			require.Falsef(t, c == false, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, false == c)                         // want "use require.True"
			require.False(t, false == c, "msg")                  // want "use require.True"
			require.False(t, false == c, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, false == c, "msg")                 // want "use require.Truef"
			require.Falsef(t, false == c, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, c != true)                         // want "use require.True"
			require.False(t, c != true, "msg")                  // want "use require.True"
			require.False(t, c != true, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, c != true, "msg")                 // want "use require.Truef"
			require.Falsef(t, c != true, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, true != c)                         // want "use require.True"
			require.False(t, true != c, "msg")                  // want "use require.True"
			require.False(t, true != c, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, true != c, "msg")                 // want "use require.Truef"
			require.Falsef(t, true != c, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, c != false)                         // want "need to simplify the check"
			require.True(t, c != false, "msg")                  // want "need to simplify the check"
			require.True(t, c != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, c != false, "msg")                 // want "need to simplify the check"
			require.Truef(t, c != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, false != c)                         // want "need to simplify the check"
			require.True(t, false != c, "msg")                  // want "need to simplify the check"
			require.True(t, false != c, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, false != c, "msg")                 // want "need to simplify the check"
			require.Truef(t, false != c, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, !c)                         // want "use require.True"
			require.False(t, !c, "msg")                  // want "use require.True"
			require.False(t, !c, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, !c, "msg")                 // want "use require.Truef"
			require.Falsef(t, !c, "msg with arg %d", 42) // want "use require.Truef"
		}

		{
			require.Equal(t, d, true)                         // want "use require.True"
			require.Equal(t, d, true, "msg")                  // want "use require.True"
			require.Equal(t, d, true, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, d, true, "msg")                 // want "use require.Truef"
			require.Equalf(t, d, true, "msg with arg %d", 42) // want "use require.Truef"

			require.Equal(t, true, d)                         // want "use require.True"
			require.Equal(t, true, d, "msg")                  // want "use require.True"
			require.Equal(t, true, d, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, true, d, "msg")                 // want "use require.Truef"
			require.Equalf(t, true, d, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, d, false)                         // want "use require.True"
			require.NotEqual(t, d, false, "msg")                  // want "use require.True"
			require.NotEqual(t, d, false, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, d, false, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, d, false, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, false, d)                         // want "use require.True"
			require.NotEqual(t, false, d, "msg")                  // want "use require.True"
			require.NotEqual(t, false, d, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, false, d, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, false, d, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, d == true)                         // want "need to simplify the check"
			require.True(t, d == true, "msg")                  // want "need to simplify the check"
			require.True(t, d == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, d == true, "msg")                 // want "need to simplify the check"
			require.Truef(t, d == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, true == d)                         // want "need to simplify the check"
			require.True(t, true == d, "msg")                  // want "need to simplify the check"
			require.True(t, true == d, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, true == d, "msg")                 // want "need to simplify the check"
			require.Truef(t, true == d, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, d == false)                         // want "use require.True"
			require.False(t, d == false, "msg")                  // want "use require.True"
			require.False(t, d == false, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, d == false, "msg")                 // want "use require.Truef"
			require.Falsef(t, d == false, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, false == d)                         // want "use require.True"
			require.False(t, false == d, "msg")                  // want "use require.True"
			require.False(t, false == d, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, false == d, "msg")                 // want "use require.Truef"
			require.Falsef(t, false == d, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, d != true)                         // want "use require.True"
			require.False(t, d != true, "msg")                  // want "use require.True"
			require.False(t, d != true, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, d != true, "msg")                 // want "use require.Truef"
			require.Falsef(t, d != true, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, true != d)                         // want "use require.True"
			require.False(t, true != d, "msg")                  // want "use require.True"
			require.False(t, true != d, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, true != d, "msg")                 // want "use require.Truef"
			require.Falsef(t, true != d, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, d != false)                         // want "need to simplify the check"
			require.True(t, d != false, "msg")                  // want "need to simplify the check"
			require.True(t, d != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, d != false, "msg")                 // want "need to simplify the check"
			require.Truef(t, d != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, false != d)                         // want "need to simplify the check"
			require.True(t, false != d, "msg")                  // want "need to simplify the check"
			require.True(t, false != d, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, false != d, "msg")                 // want "need to simplify the check"
			require.Truef(t, false != d, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, !d)                         // want "use require.True"
			require.False(t, !d, "msg")                  // want "use require.True"
			require.False(t, !d, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, !d, "msg")                 // want "use require.Truef"
			require.Falsef(t, !d, "msg with arg %d", 42) // want "use require.Truef"
		}

		{
			require.Equal(t, *e, true)                         // want "use require.True"
			require.Equal(t, *e, true, "msg")                  // want "use require.True"
			require.Equal(t, *e, true, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, *e, true, "msg")                 // want "use require.Truef"
			require.Equalf(t, *e, true, "msg with arg %d", 42) // want "use require.Truef"

			require.Equal(t, true, *e)                         // want "use require.True"
			require.Equal(t, true, *e, "msg")                  // want "use require.True"
			require.Equal(t, true, *e, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, true, *e, "msg")                 // want "use require.Truef"
			require.Equalf(t, true, *e, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, *e, false)                         // want "use require.True"
			require.NotEqual(t, *e, false, "msg")                  // want "use require.True"
			require.NotEqual(t, *e, false, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, *e, false, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, *e, false, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, false, *e)                         // want "use require.True"
			require.NotEqual(t, false, *e, "msg")                  // want "use require.True"
			require.NotEqual(t, false, *e, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, false, *e, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, false, *e, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, *e == true)                         // want "need to simplify the check"
			require.True(t, *e == true, "msg")                  // want "need to simplify the check"
			require.True(t, *e == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, *e == true, "msg")                 // want "need to simplify the check"
			require.Truef(t, *e == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, true == *e)                         // want "need to simplify the check"
			require.True(t, true == *e, "msg")                  // want "need to simplify the check"
			require.True(t, true == *e, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, true == *e, "msg")                 // want "need to simplify the check"
			require.Truef(t, true == *e, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, *e == false)                         // want "use require.True"
			require.False(t, *e == false, "msg")                  // want "use require.True"
			require.False(t, *e == false, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, *e == false, "msg")                 // want "use require.Truef"
			require.Falsef(t, *e == false, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, false == *e)                         // want "use require.True"
			require.False(t, false == *e, "msg")                  // want "use require.True"
			require.False(t, false == *e, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, false == *e, "msg")                 // want "use require.Truef"
			require.Falsef(t, false == *e, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, *e != true)                         // want "use require.True"
			require.False(t, *e != true, "msg")                  // want "use require.True"
			require.False(t, *e != true, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, *e != true, "msg")                 // want "use require.Truef"
			require.Falsef(t, *e != true, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, true != *e)                         // want "use require.True"
			require.False(t, true != *e, "msg")                  // want "use require.True"
			require.False(t, true != *e, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, true != *e, "msg")                 // want "use require.Truef"
			require.Falsef(t, true != *e, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, *e != false)                         // want "need to simplify the check"
			require.True(t, *e != false, "msg")                  // want "need to simplify the check"
			require.True(t, *e != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, *e != false, "msg")                 // want "need to simplify the check"
			require.Truef(t, *e != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, false != *e)                         // want "need to simplify the check"
			require.True(t, false != *e, "msg")                  // want "need to simplify the check"
			require.True(t, false != *e, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, false != *e, "msg")                 // want "need to simplify the check"
			require.Truef(t, false != *e, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, !*e)                         // want "use require.True"
			require.False(t, !*e, "msg")                  // want "use require.True"
			require.False(t, !*e, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, !*e, "msg")                 // want "use require.Truef"
			require.Falsef(t, !*e, "msg with arg %d", 42) // want "use require.Truef"
		}

		{
			require.Equal(t, *f, true)                         // want "use require.True"
			require.Equal(t, *f, true, "msg")                  // want "use require.True"
			require.Equal(t, *f, true, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, *f, true, "msg")                 // want "use require.Truef"
			require.Equalf(t, *f, true, "msg with arg %d", 42) // want "use require.Truef"

			require.Equal(t, true, *f)                         // want "use require.True"
			require.Equal(t, true, *f, "msg")                  // want "use require.True"
			require.Equal(t, true, *f, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, true, *f, "msg")                 // want "use require.Truef"
			require.Equalf(t, true, *f, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, *f, false)                         // want "use require.True"
			require.NotEqual(t, *f, false, "msg")                  // want "use require.True"
			require.NotEqual(t, *f, false, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, *f, false, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, *f, false, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, false, *f)                         // want "use require.True"
			require.NotEqual(t, false, *f, "msg")                  // want "use require.True"
			require.NotEqual(t, false, *f, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, false, *f, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, false, *f, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, *f == true)                         // want "need to simplify the check"
			require.True(t, *f == true, "msg")                  // want "need to simplify the check"
			require.True(t, *f == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, *f == true, "msg")                 // want "need to simplify the check"
			require.Truef(t, *f == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, true == *f)                         // want "need to simplify the check"
			require.True(t, true == *f, "msg")                  // want "need to simplify the check"
			require.True(t, true == *f, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, true == *f, "msg")                 // want "need to simplify the check"
			require.Truef(t, true == *f, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, *f == false)                         // want "use require.True"
			require.False(t, *f == false, "msg")                  // want "use require.True"
			require.False(t, *f == false, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, *f == false, "msg")                 // want "use require.Truef"
			require.Falsef(t, *f == false, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, false == *f)                         // want "use require.True"
			require.False(t, false == *f, "msg")                  // want "use require.True"
			require.False(t, false == *f, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, false == *f, "msg")                 // want "use require.Truef"
			require.Falsef(t, false == *f, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, *f != true)                         // want "use require.True"
			require.False(t, *f != true, "msg")                  // want "use require.True"
			require.False(t, *f != true, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, *f != true, "msg")                 // want "use require.Truef"
			require.Falsef(t, *f != true, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, true != *f)                         // want "use require.True"
			require.False(t, true != *f, "msg")                  // want "use require.True"
			require.False(t, true != *f, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, true != *f, "msg")                 // want "use require.Truef"
			require.Falsef(t, true != *f, "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, *f != false)                         // want "need to simplify the check"
			require.True(t, *f != false, "msg")                  // want "need to simplify the check"
			require.True(t, *f != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, *f != false, "msg")                 // want "need to simplify the check"
			require.Truef(t, *f != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, false != *f)                         // want "need to simplify the check"
			require.True(t, false != *f, "msg")                  // want "need to simplify the check"
			require.True(t, false != *f, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, false != *f, "msg")                 // want "need to simplify the check"
			require.Truef(t, false != *f, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, !*f)                         // want "use require.True"
			require.False(t, !*f, "msg")                  // want "use require.True"
			require.False(t, !*f, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, !*f, "msg")                 // want "use require.Truef"
			require.Falsef(t, !*f, "msg with arg %d", 42) // want "use require.Truef"
		}

		{
			require.Equal(t, g.TheyKilledKenny(), true)                         // want "use require.True"
			require.Equal(t, g.TheyKilledKenny(), true, "msg")                  // want "use require.True"
			require.Equal(t, g.TheyKilledKenny(), true, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, g.TheyKilledKenny(), true, "msg")                 // want "use require.Truef"
			require.Equalf(t, g.TheyKilledKenny(), true, "msg with arg %d", 42) // want "use require.Truef"

			require.Equal(t, true, g.TheyKilledKenny())                         // want "use require.True"
			require.Equal(t, true, g.TheyKilledKenny(), "msg")                  // want "use require.True"
			require.Equal(t, true, g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, true, g.TheyKilledKenny(), "msg")                 // want "use require.Truef"
			require.Equalf(t, true, g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, g.TheyKilledKenny(), false)                         // want "use require.True"
			require.NotEqual(t, g.TheyKilledKenny(), false, "msg")                  // want "use require.True"
			require.NotEqual(t, g.TheyKilledKenny(), false, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, g.TheyKilledKenny(), false, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, g.TheyKilledKenny(), false, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, false, g.TheyKilledKenny())                         // want "use require.True"
			require.NotEqual(t, false, g.TheyKilledKenny(), "msg")                  // want "use require.True"
			require.NotEqual(t, false, g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, false, g.TheyKilledKenny(), "msg")                 // want "use require.Truef"
			require.NotEqualf(t, false, g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, g.TheyKilledKenny() == true)                         // want "need to simplify the check"
			require.True(t, g.TheyKilledKenny() == true, "msg")                  // want "need to simplify the check"
			require.True(t, g.TheyKilledKenny() == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, g.TheyKilledKenny() == true, "msg")                 // want "need to simplify the check"
			require.Truef(t, g.TheyKilledKenny() == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, true == g.TheyKilledKenny())                         // want "need to simplify the check"
			require.True(t, true == g.TheyKilledKenny(), "msg")                  // want "need to simplify the check"
			require.True(t, true == g.TheyKilledKenny(), "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, true == g.TheyKilledKenny(), "msg")                 // want "need to simplify the check"
			require.Truef(t, true == g.TheyKilledKenny(), "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, g.TheyKilledKenny() == false)                         // want "use require.True"
			require.False(t, g.TheyKilledKenny() == false, "msg")                  // want "use require.True"
			require.False(t, g.TheyKilledKenny() == false, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, g.TheyKilledKenny() == false, "msg")                 // want "use require.Truef"
			require.Falsef(t, g.TheyKilledKenny() == false, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, false == g.TheyKilledKenny())                         // want "use require.True"
			require.False(t, false == g.TheyKilledKenny(), "msg")                  // want "use require.True"
			require.False(t, false == g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, false == g.TheyKilledKenny(), "msg")                 // want "use require.Truef"
			require.Falsef(t, false == g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, g.TheyKilledKenny() != true)                         // want "use require.True"
			require.False(t, g.TheyKilledKenny() != true, "msg")                  // want "use require.True"
			require.False(t, g.TheyKilledKenny() != true, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, g.TheyKilledKenny() != true, "msg")                 // want "use require.Truef"
			require.Falsef(t, g.TheyKilledKenny() != true, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, true != g.TheyKilledKenny())                         // want "use require.True"
			require.False(t, true != g.TheyKilledKenny(), "msg")                  // want "use require.True"
			require.False(t, true != g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, true != g.TheyKilledKenny(), "msg")                 // want "use require.Truef"
			require.Falsef(t, true != g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, g.TheyKilledKenny() != false)                         // want "need to simplify the check"
			require.True(t, g.TheyKilledKenny() != false, "msg")                  // want "need to simplify the check"
			require.True(t, g.TheyKilledKenny() != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, g.TheyKilledKenny() != false, "msg")                 // want "need to simplify the check"
			require.Truef(t, g.TheyKilledKenny() != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, false != g.TheyKilledKenny())                         // want "need to simplify the check"
			require.True(t, false != g.TheyKilledKenny(), "msg")                  // want "need to simplify the check"
			require.True(t, false != g.TheyKilledKenny(), "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, false != g.TheyKilledKenny(), "msg")                 // want "need to simplify the check"
			require.Truef(t, false != g.TheyKilledKenny(), "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, !g.TheyKilledKenny())                         // want "use require.True"
			require.False(t, !g.TheyKilledKenny(), "msg")                  // want "use require.True"
			require.False(t, !g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, !g.TheyKilledKenny(), "msg")                 // want "use require.Truef"
			require.Falsef(t, !g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Truef"
		}

		{
			require.Equal(t, boolOp(), true)                         // want "use require.True"
			require.Equal(t, boolOp(), true, "msg")                  // want "use require.True"
			require.Equal(t, boolOp(), true, "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, boolOp(), true, "msg")                 // want "use require.Truef"
			require.Equalf(t, boolOp(), true, "msg with arg %d", 42) // want "use require.Truef"

			require.Equal(t, true, boolOp())                         // want "use require.True"
			require.Equal(t, true, boolOp(), "msg")                  // want "use require.True"
			require.Equal(t, true, boolOp(), "msg with arg %d", 42)  // want "use require.True"
			require.Equalf(t, true, boolOp(), "msg")                 // want "use require.Truef"
			require.Equalf(t, true, boolOp(), "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, boolOp(), false)                         // want "use require.True"
			require.NotEqual(t, boolOp(), false, "msg")                  // want "use require.True"
			require.NotEqual(t, boolOp(), false, "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, boolOp(), false, "msg")                 // want "use require.Truef"
			require.NotEqualf(t, boolOp(), false, "msg with arg %d", 42) // want "use require.Truef"

			require.NotEqual(t, false, boolOp())                         // want "use require.True"
			require.NotEqual(t, false, boolOp(), "msg")                  // want "use require.True"
			require.NotEqual(t, false, boolOp(), "msg with arg %d", 42)  // want "use require.True"
			require.NotEqualf(t, false, boolOp(), "msg")                 // want "use require.Truef"
			require.NotEqualf(t, false, boolOp(), "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, boolOp() == true)                         // want "need to simplify the check"
			require.True(t, boolOp() == true, "msg")                  // want "need to simplify the check"
			require.True(t, boolOp() == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, boolOp() == true, "msg")                 // want "need to simplify the check"
			require.Truef(t, boolOp() == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, true == boolOp())                         // want "need to simplify the check"
			require.True(t, true == boolOp(), "msg")                  // want "need to simplify the check"
			require.True(t, true == boolOp(), "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, true == boolOp(), "msg")                 // want "need to simplify the check"
			require.Truef(t, true == boolOp(), "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, boolOp() == false)                         // want "use require.True"
			require.False(t, boolOp() == false, "msg")                  // want "use require.True"
			require.False(t, boolOp() == false, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, boolOp() == false, "msg")                 // want "use require.Truef"
			require.Falsef(t, boolOp() == false, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, false == boolOp())                         // want "use require.True"
			require.False(t, false == boolOp(), "msg")                  // want "use require.True"
			require.False(t, false == boolOp(), "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, false == boolOp(), "msg")                 // want "use require.Truef"
			require.Falsef(t, false == boolOp(), "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, boolOp() != true)                         // want "use require.True"
			require.False(t, boolOp() != true, "msg")                  // want "use require.True"
			require.False(t, boolOp() != true, "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, boolOp() != true, "msg")                 // want "use require.Truef"
			require.Falsef(t, boolOp() != true, "msg with arg %d", 42) // want "use require.Truef"

			require.False(t, true != boolOp())                         // want "use require.True"
			require.False(t, true != boolOp(), "msg")                  // want "use require.True"
			require.False(t, true != boolOp(), "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, true != boolOp(), "msg")                 // want "use require.Truef"
			require.Falsef(t, true != boolOp(), "msg with arg %d", 42) // want "use require.Truef"

			require.True(t, boolOp() != false)                         // want "need to simplify the check"
			require.True(t, boolOp() != false, "msg")                  // want "need to simplify the check"
			require.True(t, boolOp() != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, boolOp() != false, "msg")                 // want "need to simplify the check"
			require.Truef(t, boolOp() != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, false != boolOp())                         // want "need to simplify the check"
			require.True(t, false != boolOp(), "msg")                  // want "need to simplify the check"
			require.True(t, false != boolOp(), "msg with arg %d", 42)  // want "need to simplify the check"
			require.Truef(t, false != boolOp(), "msg")                 // want "need to simplify the check"
			require.Truef(t, false != boolOp(), "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, !boolOp())                         // want "use require.True"
			require.False(t, !boolOp(), "msg")                  // want "use require.True"
			require.False(t, !boolOp(), "msg with arg %d", 42)  // want "use require.True"
			require.Falsef(t, !boolOp(), "msg")                 // want "use require.Truef"
			require.Falsef(t, !boolOp(), "msg with arg %d", 42) // want "use require.Truef"
		}

		// Valid requires.
		{
			require.True(t, a)
			require.True(t, a, "msg")
			require.True(t, a, "msg with arg %d", 42)
			require.Truef(t, a, "msg")
			require.Truef(t, a, "msg with arg %d", 42)
		}

		{
			require.True(t, b.b)
			require.True(t, b.b, "msg")
			require.True(t, b.b, "msg with arg %d", 42)
			require.Truef(t, b.b, "msg")
			require.Truef(t, b.b, "msg with arg %d", 42)
		}

		{
			require.True(t, c)
			require.True(t, c, "msg")
			require.True(t, c, "msg with arg %d", 42)
			require.Truef(t, c, "msg")
			require.Truef(t, c, "msg with arg %d", 42)
		}

		{
			require.True(t, d)
			require.True(t, d, "msg")
			require.True(t, d, "msg with arg %d", 42)
			require.Truef(t, d, "msg")
			require.Truef(t, d, "msg with arg %d", 42)
		}

		{
			require.True(t, *e)
			require.True(t, *e, "msg")
			require.True(t, *e, "msg with arg %d", 42)
			require.Truef(t, *e, "msg")
			require.Truef(t, *e, "msg with arg %d", 42)
		}

		{
			require.True(t, *f)
			require.True(t, *f, "msg")
			require.True(t, *f, "msg with arg %d", 42)
			require.Truef(t, *f, "msg")
			require.Truef(t, *f, "msg with arg %d", 42)
		}

		{
			require.True(t, g.TheyKilledKenny())
			require.True(t, g.TheyKilledKenny(), "msg")
			require.True(t, g.TheyKilledKenny(), "msg with arg %d", 42)
			require.Truef(t, g.TheyKilledKenny(), "msg")
			require.Truef(t, g.TheyKilledKenny(), "msg with arg %d", 42)
		}

		{
			require.True(t, boolOp())
			require.True(t, boolOp(), "msg")
			require.True(t, boolOp(), "msg with arg %d", 42)
			require.Truef(t, boolOp(), "msg")
			require.Truef(t, boolOp(), "msg with arg %d", 42)
		}

	})
}

func TestBoolCompare_False(t *testing.T) {
	type withBool struct{ b bool }
	boolOp := func() bool { return true }

	var a bool
	var b withBool
	c := true
	const d = false
	e := new(bool)
	var f *bool
	var g withBoolMethod

	t.Run("assert", func(t *testing.T) {
		{
			assert.Equal(t, a, false)                         // want "use assert.False"
			assert.Equal(t, a, false, "msg")                  // want "use assert.False"
			assert.Equal(t, a, false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, a, false, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, a, false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.Equal(t, false, a)                         // want "use assert.False"
			assert.Equal(t, false, a, "msg")                  // want "use assert.False"
			assert.Equal(t, false, a, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, false, a, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, false, a, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, a, true)                         // want "use assert.False"
			assert.NotEqual(t, a, true, "msg")                  // want "use assert.False"
			assert.NotEqual(t, a, true, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, a, true, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, a, true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, true, a)                         // want "use assert.False"
			assert.NotEqual(t, true, a, "msg")                  // want "use assert.False"
			assert.NotEqual(t, true, a, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, true, a, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, true, a, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, a == true)                         // want "need to simplify the check"
			assert.False(t, a == true, "msg")                  // want "need to simplify the check"
			assert.False(t, a == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, a == true, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, a == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, true == a)                         // want "need to simplify the check"
			assert.False(t, true == a, "msg")                  // want "need to simplify the check"
			assert.False(t, true == a, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, true == a, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, true == a, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, a == false)                         // want "use assert.False"
			assert.True(t, a == false, "msg")                  // want "use assert.False"
			assert.True(t, a == false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, a == false, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, a == false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, false == a)                         // want "use assert.False"
			assert.True(t, false == a, "msg")                  // want "use assert.False"
			assert.True(t, false == a, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, false == a, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, false == a, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, a != true)                         // want "use assert.False"
			assert.True(t, a != true, "msg")                  // want "use assert.False"
			assert.True(t, a != true, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, a != true, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, a != true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, true != a)                         // want "use assert.False"
			assert.True(t, true != a, "msg")                  // want "use assert.False"
			assert.True(t, true != a, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, true != a, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, true != a, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, a != false)                         // want "need to simplify the check"
			assert.False(t, a != false, "msg")                  // want "need to simplify the check"
			assert.False(t, a != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, a != false, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, a != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, false != a)                         // want "need to simplify the check"
			assert.False(t, false != a, "msg")                  // want "need to simplify the check"
			assert.False(t, false != a, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, false != a, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, false != a, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, !a)                         // want "use assert.False"
			assert.True(t, !a, "msg")                  // want "use assert.False"
			assert.True(t, !a, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, !a, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, !a, "msg with arg %d", 42) // want "use assert.Falsef"
		}

		{
			assert.Equal(t, b.b, false)                         // want "use assert.False"
			assert.Equal(t, b.b, false, "msg")                  // want "use assert.False"
			assert.Equal(t, b.b, false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, b.b, false, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, b.b, false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.Equal(t, false, b.b)                         // want "use assert.False"
			assert.Equal(t, false, b.b, "msg")                  // want "use assert.False"
			assert.Equal(t, false, b.b, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, false, b.b, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, false, b.b, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, b.b, true)                         // want "use assert.False"
			assert.NotEqual(t, b.b, true, "msg")                  // want "use assert.False"
			assert.NotEqual(t, b.b, true, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, b.b, true, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, b.b, true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, true, b.b)                         // want "use assert.False"
			assert.NotEqual(t, true, b.b, "msg")                  // want "use assert.False"
			assert.NotEqual(t, true, b.b, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, true, b.b, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, true, b.b, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, b.b == true)                         // want "need to simplify the check"
			assert.False(t, b.b == true, "msg")                  // want "need to simplify the check"
			assert.False(t, b.b == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, b.b == true, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, b.b == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, true == b.b)                         // want "need to simplify the check"
			assert.False(t, true == b.b, "msg")                  // want "need to simplify the check"
			assert.False(t, true == b.b, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, true == b.b, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, true == b.b, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, b.b == false)                         // want "use assert.False"
			assert.True(t, b.b == false, "msg")                  // want "use assert.False"
			assert.True(t, b.b == false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, b.b == false, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, b.b == false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, false == b.b)                         // want "use assert.False"
			assert.True(t, false == b.b, "msg")                  // want "use assert.False"
			assert.True(t, false == b.b, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, false == b.b, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, false == b.b, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, b.b != true)                         // want "use assert.False"
			assert.True(t, b.b != true, "msg")                  // want "use assert.False"
			assert.True(t, b.b != true, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, b.b != true, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, b.b != true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, true != b.b)                         // want "use assert.False"
			assert.True(t, true != b.b, "msg")                  // want "use assert.False"
			assert.True(t, true != b.b, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, true != b.b, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, true != b.b, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, b.b != false)                         // want "need to simplify the check"
			assert.False(t, b.b != false, "msg")                  // want "need to simplify the check"
			assert.False(t, b.b != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, b.b != false, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, b.b != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, false != b.b)                         // want "need to simplify the check"
			assert.False(t, false != b.b, "msg")                  // want "need to simplify the check"
			assert.False(t, false != b.b, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, false != b.b, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, false != b.b, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, !b.b)                         // want "use assert.False"
			assert.True(t, !b.b, "msg")                  // want "use assert.False"
			assert.True(t, !b.b, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, !b.b, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, !b.b, "msg with arg %d", 42) // want "use assert.Falsef"
		}

		{
			assert.Equal(t, c, false)                         // want "use assert.False"
			assert.Equal(t, c, false, "msg")                  // want "use assert.False"
			assert.Equal(t, c, false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, c, false, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, c, false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.Equal(t, false, c)                         // want "use assert.False"
			assert.Equal(t, false, c, "msg")                  // want "use assert.False"
			assert.Equal(t, false, c, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, false, c, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, false, c, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, c, true)                         // want "use assert.False"
			assert.NotEqual(t, c, true, "msg")                  // want "use assert.False"
			assert.NotEqual(t, c, true, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, c, true, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, c, true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, true, c)                         // want "use assert.False"
			assert.NotEqual(t, true, c, "msg")                  // want "use assert.False"
			assert.NotEqual(t, true, c, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, true, c, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, true, c, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, c == true)                         // want "need to simplify the check"
			assert.False(t, c == true, "msg")                  // want "need to simplify the check"
			assert.False(t, c == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, c == true, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, c == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, true == c)                         // want "need to simplify the check"
			assert.False(t, true == c, "msg")                  // want "need to simplify the check"
			assert.False(t, true == c, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, true == c, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, true == c, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, c == false)                         // want "use assert.False"
			assert.True(t, c == false, "msg")                  // want "use assert.False"
			assert.True(t, c == false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, c == false, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, c == false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, false == c)                         // want "use assert.False"
			assert.True(t, false == c, "msg")                  // want "use assert.False"
			assert.True(t, false == c, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, false == c, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, false == c, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, c != true)                         // want "use assert.False"
			assert.True(t, c != true, "msg")                  // want "use assert.False"
			assert.True(t, c != true, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, c != true, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, c != true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, true != c)                         // want "use assert.False"
			assert.True(t, true != c, "msg")                  // want "use assert.False"
			assert.True(t, true != c, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, true != c, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, true != c, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, c != false)                         // want "need to simplify the check"
			assert.False(t, c != false, "msg")                  // want "need to simplify the check"
			assert.False(t, c != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, c != false, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, c != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, false != c)                         // want "need to simplify the check"
			assert.False(t, false != c, "msg")                  // want "need to simplify the check"
			assert.False(t, false != c, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, false != c, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, false != c, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, !c)                         // want "use assert.False"
			assert.True(t, !c, "msg")                  // want "use assert.False"
			assert.True(t, !c, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, !c, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, !c, "msg with arg %d", 42) // want "use assert.Falsef"
		}

		{
			assert.Equal(t, d, false)                         // want "use assert.False"
			assert.Equal(t, d, false, "msg")                  // want "use assert.False"
			assert.Equal(t, d, false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, d, false, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, d, false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.Equal(t, false, d)                         // want "use assert.False"
			assert.Equal(t, false, d, "msg")                  // want "use assert.False"
			assert.Equal(t, false, d, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, false, d, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, false, d, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, d, true)                         // want "use assert.False"
			assert.NotEqual(t, d, true, "msg")                  // want "use assert.False"
			assert.NotEqual(t, d, true, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, d, true, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, d, true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, true, d)                         // want "use assert.False"
			assert.NotEqual(t, true, d, "msg")                  // want "use assert.False"
			assert.NotEqual(t, true, d, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, true, d, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, true, d, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, d == true)                         // want "need to simplify the check"
			assert.False(t, d == true, "msg")                  // want "need to simplify the check"
			assert.False(t, d == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, d == true, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, d == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, true == d)                         // want "need to simplify the check"
			assert.False(t, true == d, "msg")                  // want "need to simplify the check"
			assert.False(t, true == d, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, true == d, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, true == d, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, d == false)                         // want "use assert.False"
			assert.True(t, d == false, "msg")                  // want "use assert.False"
			assert.True(t, d == false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, d == false, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, d == false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, false == d)                         // want "use assert.False"
			assert.True(t, false == d, "msg")                  // want "use assert.False"
			assert.True(t, false == d, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, false == d, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, false == d, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, d != true)                         // want "use assert.False"
			assert.True(t, d != true, "msg")                  // want "use assert.False"
			assert.True(t, d != true, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, d != true, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, d != true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, true != d)                         // want "use assert.False"
			assert.True(t, true != d, "msg")                  // want "use assert.False"
			assert.True(t, true != d, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, true != d, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, true != d, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, d != false)                         // want "need to simplify the check"
			assert.False(t, d != false, "msg")                  // want "need to simplify the check"
			assert.False(t, d != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, d != false, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, d != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, false != d)                         // want "need to simplify the check"
			assert.False(t, false != d, "msg")                  // want "need to simplify the check"
			assert.False(t, false != d, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, false != d, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, false != d, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, !d)                         // want "use assert.False"
			assert.True(t, !d, "msg")                  // want "use assert.False"
			assert.True(t, !d, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, !d, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, !d, "msg with arg %d", 42) // want "use assert.Falsef"
		}

		{
			assert.Equal(t, *e, false)                         // want "use assert.False"
			assert.Equal(t, *e, false, "msg")                  // want "use assert.False"
			assert.Equal(t, *e, false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, *e, false, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, *e, false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.Equal(t, false, *e)                         // want "use assert.False"
			assert.Equal(t, false, *e, "msg")                  // want "use assert.False"
			assert.Equal(t, false, *e, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, false, *e, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, false, *e, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, *e, true)                         // want "use assert.False"
			assert.NotEqual(t, *e, true, "msg")                  // want "use assert.False"
			assert.NotEqual(t, *e, true, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, *e, true, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, *e, true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, true, *e)                         // want "use assert.False"
			assert.NotEqual(t, true, *e, "msg")                  // want "use assert.False"
			assert.NotEqual(t, true, *e, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, true, *e, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, true, *e, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, *e == true)                         // want "need to simplify the check"
			assert.False(t, *e == true, "msg")                  // want "need to simplify the check"
			assert.False(t, *e == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, *e == true, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, *e == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, true == *e)                         // want "need to simplify the check"
			assert.False(t, true == *e, "msg")                  // want "need to simplify the check"
			assert.False(t, true == *e, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, true == *e, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, true == *e, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, *e == false)                         // want "use assert.False"
			assert.True(t, *e == false, "msg")                  // want "use assert.False"
			assert.True(t, *e == false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, *e == false, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, *e == false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, false == *e)                         // want "use assert.False"
			assert.True(t, false == *e, "msg")                  // want "use assert.False"
			assert.True(t, false == *e, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, false == *e, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, false == *e, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, *e != true)                         // want "use assert.False"
			assert.True(t, *e != true, "msg")                  // want "use assert.False"
			assert.True(t, *e != true, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, *e != true, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, *e != true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, true != *e)                         // want "use assert.False"
			assert.True(t, true != *e, "msg")                  // want "use assert.False"
			assert.True(t, true != *e, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, true != *e, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, true != *e, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, *e != false)                         // want "need to simplify the check"
			assert.False(t, *e != false, "msg")                  // want "need to simplify the check"
			assert.False(t, *e != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, *e != false, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, *e != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, false != *e)                         // want "need to simplify the check"
			assert.False(t, false != *e, "msg")                  // want "need to simplify the check"
			assert.False(t, false != *e, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, false != *e, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, false != *e, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, !*e)                         // want "use assert.False"
			assert.True(t, !*e, "msg")                  // want "use assert.False"
			assert.True(t, !*e, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, !*e, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, !*e, "msg with arg %d", 42) // want "use assert.Falsef"
		}

		{
			assert.Equal(t, *f, false)                         // want "use assert.False"
			assert.Equal(t, *f, false, "msg")                  // want "use assert.False"
			assert.Equal(t, *f, false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, *f, false, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, *f, false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.Equal(t, false, *f)                         // want "use assert.False"
			assert.Equal(t, false, *f, "msg")                  // want "use assert.False"
			assert.Equal(t, false, *f, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, false, *f, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, false, *f, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, *f, true)                         // want "use assert.False"
			assert.NotEqual(t, *f, true, "msg")                  // want "use assert.False"
			assert.NotEqual(t, *f, true, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, *f, true, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, *f, true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, true, *f)                         // want "use assert.False"
			assert.NotEqual(t, true, *f, "msg")                  // want "use assert.False"
			assert.NotEqual(t, true, *f, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, true, *f, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, true, *f, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, *f == true)                         // want "need to simplify the check"
			assert.False(t, *f == true, "msg")                  // want "need to simplify the check"
			assert.False(t, *f == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, *f == true, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, *f == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, true == *f)                         // want "need to simplify the check"
			assert.False(t, true == *f, "msg")                  // want "need to simplify the check"
			assert.False(t, true == *f, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, true == *f, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, true == *f, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, *f == false)                         // want "use assert.False"
			assert.True(t, *f == false, "msg")                  // want "use assert.False"
			assert.True(t, *f == false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, *f == false, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, *f == false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, false == *f)                         // want "use assert.False"
			assert.True(t, false == *f, "msg")                  // want "use assert.False"
			assert.True(t, false == *f, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, false == *f, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, false == *f, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, *f != true)                         // want "use assert.False"
			assert.True(t, *f != true, "msg")                  // want "use assert.False"
			assert.True(t, *f != true, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, *f != true, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, *f != true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, true != *f)                         // want "use assert.False"
			assert.True(t, true != *f, "msg")                  // want "use assert.False"
			assert.True(t, true != *f, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, true != *f, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, true != *f, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, *f != false)                         // want "need to simplify the check"
			assert.False(t, *f != false, "msg")                  // want "need to simplify the check"
			assert.False(t, *f != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, *f != false, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, *f != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, false != *f)                         // want "need to simplify the check"
			assert.False(t, false != *f, "msg")                  // want "need to simplify the check"
			assert.False(t, false != *f, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, false != *f, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, false != *f, "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, !*f)                         // want "use assert.False"
			assert.True(t, !*f, "msg")                  // want "use assert.False"
			assert.True(t, !*f, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, !*f, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, !*f, "msg with arg %d", 42) // want "use assert.Falsef"
		}

		{
			assert.Equal(t, g.TheyKilledKenny(), false)                         // want "use assert.False"
			assert.Equal(t, g.TheyKilledKenny(), false, "msg")                  // want "use assert.False"
			assert.Equal(t, g.TheyKilledKenny(), false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, g.TheyKilledKenny(), false, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, g.TheyKilledKenny(), false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.Equal(t, false, g.TheyKilledKenny())                         // want "use assert.False"
			assert.Equal(t, false, g.TheyKilledKenny(), "msg")                  // want "use assert.False"
			assert.Equal(t, false, g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, false, g.TheyKilledKenny(), "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, false, g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, g.TheyKilledKenny(), true)                         // want "use assert.False"
			assert.NotEqual(t, g.TheyKilledKenny(), true, "msg")                  // want "use assert.False"
			assert.NotEqual(t, g.TheyKilledKenny(), true, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, g.TheyKilledKenny(), true, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, g.TheyKilledKenny(), true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, true, g.TheyKilledKenny())                         // want "use assert.False"
			assert.NotEqual(t, true, g.TheyKilledKenny(), "msg")                  // want "use assert.False"
			assert.NotEqual(t, true, g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, true, g.TheyKilledKenny(), "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, true, g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, g.TheyKilledKenny() == true)                         // want "need to simplify the check"
			assert.False(t, g.TheyKilledKenny() == true, "msg")                  // want "need to simplify the check"
			assert.False(t, g.TheyKilledKenny() == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, g.TheyKilledKenny() == true, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, g.TheyKilledKenny() == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, true == g.TheyKilledKenny())                         // want "need to simplify the check"
			assert.False(t, true == g.TheyKilledKenny(), "msg")                  // want "need to simplify the check"
			assert.False(t, true == g.TheyKilledKenny(), "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, true == g.TheyKilledKenny(), "msg")                 // want "need to simplify the check"
			assert.Falsef(t, true == g.TheyKilledKenny(), "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, g.TheyKilledKenny() == false)                         // want "use assert.False"
			assert.True(t, g.TheyKilledKenny() == false, "msg")                  // want "use assert.False"
			assert.True(t, g.TheyKilledKenny() == false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, g.TheyKilledKenny() == false, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, g.TheyKilledKenny() == false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, false == g.TheyKilledKenny())                         // want "use assert.False"
			assert.True(t, false == g.TheyKilledKenny(), "msg")                  // want "use assert.False"
			assert.True(t, false == g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, false == g.TheyKilledKenny(), "msg")                 // want "use assert.Falsef"
			assert.Truef(t, false == g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, g.TheyKilledKenny() != true)                         // want "use assert.False"
			assert.True(t, g.TheyKilledKenny() != true, "msg")                  // want "use assert.False"
			assert.True(t, g.TheyKilledKenny() != true, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, g.TheyKilledKenny() != true, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, g.TheyKilledKenny() != true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, true != g.TheyKilledKenny())                         // want "use assert.False"
			assert.True(t, true != g.TheyKilledKenny(), "msg")                  // want "use assert.False"
			assert.True(t, true != g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, true != g.TheyKilledKenny(), "msg")                 // want "use assert.Falsef"
			assert.Truef(t, true != g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, g.TheyKilledKenny() != false)                         // want "need to simplify the check"
			assert.False(t, g.TheyKilledKenny() != false, "msg")                  // want "need to simplify the check"
			assert.False(t, g.TheyKilledKenny() != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, g.TheyKilledKenny() != false, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, g.TheyKilledKenny() != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, false != g.TheyKilledKenny())                         // want "need to simplify the check"
			assert.False(t, false != g.TheyKilledKenny(), "msg")                  // want "need to simplify the check"
			assert.False(t, false != g.TheyKilledKenny(), "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, false != g.TheyKilledKenny(), "msg")                 // want "need to simplify the check"
			assert.Falsef(t, false != g.TheyKilledKenny(), "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, !g.TheyKilledKenny())                         // want "use assert.False"
			assert.True(t, !g.TheyKilledKenny(), "msg")                  // want "use assert.False"
			assert.True(t, !g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, !g.TheyKilledKenny(), "msg")                 // want "use assert.Falsef"
			assert.Truef(t, !g.TheyKilledKenny(), "msg with arg %d", 42) // want "use assert.Falsef"
		}

		{
			assert.Equal(t, boolOp(), false)                         // want "use assert.False"
			assert.Equal(t, boolOp(), false, "msg")                  // want "use assert.False"
			assert.Equal(t, boolOp(), false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, boolOp(), false, "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, boolOp(), false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.Equal(t, false, boolOp())                         // want "use assert.False"
			assert.Equal(t, false, boolOp(), "msg")                  // want "use assert.False"
			assert.Equal(t, false, boolOp(), "msg with arg %d", 42)  // want "use assert.False"
			assert.Equalf(t, false, boolOp(), "msg")                 // want "use assert.Falsef"
			assert.Equalf(t, false, boolOp(), "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, boolOp(), true)                         // want "use assert.False"
			assert.NotEqual(t, boolOp(), true, "msg")                  // want "use assert.False"
			assert.NotEqual(t, boolOp(), true, "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, boolOp(), true, "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, boolOp(), true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.NotEqual(t, true, boolOp())                         // want "use assert.False"
			assert.NotEqual(t, true, boolOp(), "msg")                  // want "use assert.False"
			assert.NotEqual(t, true, boolOp(), "msg with arg %d", 42)  // want "use assert.False"
			assert.NotEqualf(t, true, boolOp(), "msg")                 // want "use assert.Falsef"
			assert.NotEqualf(t, true, boolOp(), "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, boolOp() == true)                         // want "need to simplify the check"
			assert.False(t, boolOp() == true, "msg")                  // want "need to simplify the check"
			assert.False(t, boolOp() == true, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, boolOp() == true, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, boolOp() == true, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, true == boolOp())                         // want "need to simplify the check"
			assert.False(t, true == boolOp(), "msg")                  // want "need to simplify the check"
			assert.False(t, true == boolOp(), "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, true == boolOp(), "msg")                 // want "need to simplify the check"
			assert.Falsef(t, true == boolOp(), "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, boolOp() == false)                         // want "use assert.False"
			assert.True(t, boolOp() == false, "msg")                  // want "use assert.False"
			assert.True(t, boolOp() == false, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, boolOp() == false, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, boolOp() == false, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, false == boolOp())                         // want "use assert.False"
			assert.True(t, false == boolOp(), "msg")                  // want "use assert.False"
			assert.True(t, false == boolOp(), "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, false == boolOp(), "msg")                 // want "use assert.Falsef"
			assert.Truef(t, false == boolOp(), "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, boolOp() != true)                         // want "use assert.False"
			assert.True(t, boolOp() != true, "msg")                  // want "use assert.False"
			assert.True(t, boolOp() != true, "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, boolOp() != true, "msg")                 // want "use assert.Falsef"
			assert.Truef(t, boolOp() != true, "msg with arg %d", 42) // want "use assert.Falsef"

			assert.True(t, true != boolOp())                         // want "use assert.False"
			assert.True(t, true != boolOp(), "msg")                  // want "use assert.False"
			assert.True(t, true != boolOp(), "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, true != boolOp(), "msg")                 // want "use assert.Falsef"
			assert.Truef(t, true != boolOp(), "msg with arg %d", 42) // want "use assert.Falsef"

			assert.False(t, boolOp() != false)                         // want "need to simplify the check"
			assert.False(t, boolOp() != false, "msg")                  // want "need to simplify the check"
			assert.False(t, boolOp() != false, "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, boolOp() != false, "msg")                 // want "need to simplify the check"
			assert.Falsef(t, boolOp() != false, "msg with arg %d", 42) // want "need to simplify the check"

			assert.False(t, false != boolOp())                         // want "need to simplify the check"
			assert.False(t, false != boolOp(), "msg")                  // want "need to simplify the check"
			assert.False(t, false != boolOp(), "msg with arg %d", 42)  // want "need to simplify the check"
			assert.Falsef(t, false != boolOp(), "msg")                 // want "need to simplify the check"
			assert.Falsef(t, false != boolOp(), "msg with arg %d", 42) // want "need to simplify the check"

			assert.True(t, !boolOp())                         // want "use assert.False"
			assert.True(t, !boolOp(), "msg")                  // want "use assert.False"
			assert.True(t, !boolOp(), "msg with arg %d", 42)  // want "use assert.False"
			assert.Truef(t, !boolOp(), "msg")                 // want "use assert.Falsef"
			assert.Truef(t, !boolOp(), "msg with arg %d", 42) // want "use assert.Falsef"
		}

		// Valid asserts.
		{
			assert.False(t, a)
			assert.False(t, a, "msg")
			assert.False(t, a, "msg with arg %d", 42)
			assert.Falsef(t, a, "msg")
			assert.Falsef(t, a, "msg with arg %d", 42)
		}

		{
			assert.False(t, b.b)
			assert.False(t, b.b, "msg")
			assert.False(t, b.b, "msg with arg %d", 42)
			assert.Falsef(t, b.b, "msg")
			assert.Falsef(t, b.b, "msg with arg %d", 42)
		}

		{
			assert.False(t, c)
			assert.False(t, c, "msg")
			assert.False(t, c, "msg with arg %d", 42)
			assert.Falsef(t, c, "msg")
			assert.Falsef(t, c, "msg with arg %d", 42)
		}

		{
			assert.False(t, d)
			assert.False(t, d, "msg")
			assert.False(t, d, "msg with arg %d", 42)
			assert.Falsef(t, d, "msg")
			assert.Falsef(t, d, "msg with arg %d", 42)
		}

		{
			assert.False(t, *e)
			assert.False(t, *e, "msg")
			assert.False(t, *e, "msg with arg %d", 42)
			assert.Falsef(t, *e, "msg")
			assert.Falsef(t, *e, "msg with arg %d", 42)
		}

		{
			assert.False(t, *f)
			assert.False(t, *f, "msg")
			assert.False(t, *f, "msg with arg %d", 42)
			assert.Falsef(t, *f, "msg")
			assert.Falsef(t, *f, "msg with arg %d", 42)
		}

		{
			assert.False(t, g.TheyKilledKenny())
			assert.False(t, g.TheyKilledKenny(), "msg")
			assert.False(t, g.TheyKilledKenny(), "msg with arg %d", 42)
			assert.Falsef(t, g.TheyKilledKenny(), "msg")
			assert.Falsef(t, g.TheyKilledKenny(), "msg with arg %d", 42)
		}

		{
			assert.False(t, boolOp())
			assert.False(t, boolOp(), "msg")
			assert.False(t, boolOp(), "msg with arg %d", 42)
			assert.Falsef(t, boolOp(), "msg")
			assert.Falsef(t, boolOp(), "msg with arg %d", 42)
		}

	})

	t.Run("require", func(t *testing.T) {
		{
			require.Equal(t, a, false)                         // want "use require.False"
			require.Equal(t, a, false, "msg")                  // want "use require.False"
			require.Equal(t, a, false, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, a, false, "msg")                 // want "use require.Falsef"
			require.Equalf(t, a, false, "msg with arg %d", 42) // want "use require.Falsef"

			require.Equal(t, false, a)                         // want "use require.False"
			require.Equal(t, false, a, "msg")                  // want "use require.False"
			require.Equal(t, false, a, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, false, a, "msg")                 // want "use require.Falsef"
			require.Equalf(t, false, a, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, a, true)                         // want "use require.False"
			require.NotEqual(t, a, true, "msg")                  // want "use require.False"
			require.NotEqual(t, a, true, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, a, true, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, a, true, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, true, a)                         // want "use require.False"
			require.NotEqual(t, true, a, "msg")                  // want "use require.False"
			require.NotEqual(t, true, a, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, true, a, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, true, a, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, a == true)                         // want "need to simplify the check"
			require.False(t, a == true, "msg")                  // want "need to simplify the check"
			require.False(t, a == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, a == true, "msg")                 // want "need to simplify the check"
			require.Falsef(t, a == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, true == a)                         // want "need to simplify the check"
			require.False(t, true == a, "msg")                  // want "need to simplify the check"
			require.False(t, true == a, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, true == a, "msg")                 // want "need to simplify the check"
			require.Falsef(t, true == a, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, a == false)                         // want "use require.False"
			require.True(t, a == false, "msg")                  // want "use require.False"
			require.True(t, a == false, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, a == false, "msg")                 // want "use require.Falsef"
			require.Truef(t, a == false, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, false == a)                         // want "use require.False"
			require.True(t, false == a, "msg")                  // want "use require.False"
			require.True(t, false == a, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, false == a, "msg")                 // want "use require.Falsef"
			require.Truef(t, false == a, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, a != true)                         // want "use require.False"
			require.True(t, a != true, "msg")                  // want "use require.False"
			require.True(t, a != true, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, a != true, "msg")                 // want "use require.Falsef"
			require.Truef(t, a != true, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, true != a)                         // want "use require.False"
			require.True(t, true != a, "msg")                  // want "use require.False"
			require.True(t, true != a, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, true != a, "msg")                 // want "use require.Falsef"
			require.Truef(t, true != a, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, a != false)                         // want "need to simplify the check"
			require.False(t, a != false, "msg")                  // want "need to simplify the check"
			require.False(t, a != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, a != false, "msg")                 // want "need to simplify the check"
			require.Falsef(t, a != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, false != a)                         // want "need to simplify the check"
			require.False(t, false != a, "msg")                  // want "need to simplify the check"
			require.False(t, false != a, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, false != a, "msg")                 // want "need to simplify the check"
			require.Falsef(t, false != a, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, !a)                         // want "use require.False"
			require.True(t, !a, "msg")                  // want "use require.False"
			require.True(t, !a, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, !a, "msg")                 // want "use require.Falsef"
			require.Truef(t, !a, "msg with arg %d", 42) // want "use require.Falsef"
		}

		{
			require.Equal(t, b.b, false)                         // want "use require.False"
			require.Equal(t, b.b, false, "msg")                  // want "use require.False"
			require.Equal(t, b.b, false, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, b.b, false, "msg")                 // want "use require.Falsef"
			require.Equalf(t, b.b, false, "msg with arg %d", 42) // want "use require.Falsef"

			require.Equal(t, false, b.b)                         // want "use require.False"
			require.Equal(t, false, b.b, "msg")                  // want "use require.False"
			require.Equal(t, false, b.b, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, false, b.b, "msg")                 // want "use require.Falsef"
			require.Equalf(t, false, b.b, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, b.b, true)                         // want "use require.False"
			require.NotEqual(t, b.b, true, "msg")                  // want "use require.False"
			require.NotEqual(t, b.b, true, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, b.b, true, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, b.b, true, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, true, b.b)                         // want "use require.False"
			require.NotEqual(t, true, b.b, "msg")                  // want "use require.False"
			require.NotEqual(t, true, b.b, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, true, b.b, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, true, b.b, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, b.b == true)                         // want "need to simplify the check"
			require.False(t, b.b == true, "msg")                  // want "need to simplify the check"
			require.False(t, b.b == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, b.b == true, "msg")                 // want "need to simplify the check"
			require.Falsef(t, b.b == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, true == b.b)                         // want "need to simplify the check"
			require.False(t, true == b.b, "msg")                  // want "need to simplify the check"
			require.False(t, true == b.b, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, true == b.b, "msg")                 // want "need to simplify the check"
			require.Falsef(t, true == b.b, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, b.b == false)                         // want "use require.False"
			require.True(t, b.b == false, "msg")                  // want "use require.False"
			require.True(t, b.b == false, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, b.b == false, "msg")                 // want "use require.Falsef"
			require.Truef(t, b.b == false, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, false == b.b)                         // want "use require.False"
			require.True(t, false == b.b, "msg")                  // want "use require.False"
			require.True(t, false == b.b, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, false == b.b, "msg")                 // want "use require.Falsef"
			require.Truef(t, false == b.b, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, b.b != true)                         // want "use require.False"
			require.True(t, b.b != true, "msg")                  // want "use require.False"
			require.True(t, b.b != true, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, b.b != true, "msg")                 // want "use require.Falsef"
			require.Truef(t, b.b != true, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, true != b.b)                         // want "use require.False"
			require.True(t, true != b.b, "msg")                  // want "use require.False"
			require.True(t, true != b.b, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, true != b.b, "msg")                 // want "use require.Falsef"
			require.Truef(t, true != b.b, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, b.b != false)                         // want "need to simplify the check"
			require.False(t, b.b != false, "msg")                  // want "need to simplify the check"
			require.False(t, b.b != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, b.b != false, "msg")                 // want "need to simplify the check"
			require.Falsef(t, b.b != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, false != b.b)                         // want "need to simplify the check"
			require.False(t, false != b.b, "msg")                  // want "need to simplify the check"
			require.False(t, false != b.b, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, false != b.b, "msg")                 // want "need to simplify the check"
			require.Falsef(t, false != b.b, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, !b.b)                         // want "use require.False"
			require.True(t, !b.b, "msg")                  // want "use require.False"
			require.True(t, !b.b, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, !b.b, "msg")                 // want "use require.Falsef"
			require.Truef(t, !b.b, "msg with arg %d", 42) // want "use require.Falsef"
		}

		{
			require.Equal(t, c, false)                         // want "use require.False"
			require.Equal(t, c, false, "msg")                  // want "use require.False"
			require.Equal(t, c, false, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, c, false, "msg")                 // want "use require.Falsef"
			require.Equalf(t, c, false, "msg with arg %d", 42) // want "use require.Falsef"

			require.Equal(t, false, c)                         // want "use require.False"
			require.Equal(t, false, c, "msg")                  // want "use require.False"
			require.Equal(t, false, c, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, false, c, "msg")                 // want "use require.Falsef"
			require.Equalf(t, false, c, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, c, true)                         // want "use require.False"
			require.NotEqual(t, c, true, "msg")                  // want "use require.False"
			require.NotEqual(t, c, true, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, c, true, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, c, true, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, true, c)                         // want "use require.False"
			require.NotEqual(t, true, c, "msg")                  // want "use require.False"
			require.NotEqual(t, true, c, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, true, c, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, true, c, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, c == true)                         // want "need to simplify the check"
			require.False(t, c == true, "msg")                  // want "need to simplify the check"
			require.False(t, c == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, c == true, "msg")                 // want "need to simplify the check"
			require.Falsef(t, c == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, true == c)                         // want "need to simplify the check"
			require.False(t, true == c, "msg")                  // want "need to simplify the check"
			require.False(t, true == c, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, true == c, "msg")                 // want "need to simplify the check"
			require.Falsef(t, true == c, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, c == false)                         // want "use require.False"
			require.True(t, c == false, "msg")                  // want "use require.False"
			require.True(t, c == false, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, c == false, "msg")                 // want "use require.Falsef"
			require.Truef(t, c == false, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, false == c)                         // want "use require.False"
			require.True(t, false == c, "msg")                  // want "use require.False"
			require.True(t, false == c, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, false == c, "msg")                 // want "use require.Falsef"
			require.Truef(t, false == c, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, c != true)                         // want "use require.False"
			require.True(t, c != true, "msg")                  // want "use require.False"
			require.True(t, c != true, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, c != true, "msg")                 // want "use require.Falsef"
			require.Truef(t, c != true, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, true != c)                         // want "use require.False"
			require.True(t, true != c, "msg")                  // want "use require.False"
			require.True(t, true != c, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, true != c, "msg")                 // want "use require.Falsef"
			require.Truef(t, true != c, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, c != false)                         // want "need to simplify the check"
			require.False(t, c != false, "msg")                  // want "need to simplify the check"
			require.False(t, c != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, c != false, "msg")                 // want "need to simplify the check"
			require.Falsef(t, c != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, false != c)                         // want "need to simplify the check"
			require.False(t, false != c, "msg")                  // want "need to simplify the check"
			require.False(t, false != c, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, false != c, "msg")                 // want "need to simplify the check"
			require.Falsef(t, false != c, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, !c)                         // want "use require.False"
			require.True(t, !c, "msg")                  // want "use require.False"
			require.True(t, !c, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, !c, "msg")                 // want "use require.Falsef"
			require.Truef(t, !c, "msg with arg %d", 42) // want "use require.Falsef"
		}

		{
			require.Equal(t, d, false)                         // want "use require.False"
			require.Equal(t, d, false, "msg")                  // want "use require.False"
			require.Equal(t, d, false, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, d, false, "msg")                 // want "use require.Falsef"
			require.Equalf(t, d, false, "msg with arg %d", 42) // want "use require.Falsef"

			require.Equal(t, false, d)                         // want "use require.False"
			require.Equal(t, false, d, "msg")                  // want "use require.False"
			require.Equal(t, false, d, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, false, d, "msg")                 // want "use require.Falsef"
			require.Equalf(t, false, d, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, d, true)                         // want "use require.False"
			require.NotEqual(t, d, true, "msg")                  // want "use require.False"
			require.NotEqual(t, d, true, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, d, true, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, d, true, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, true, d)                         // want "use require.False"
			require.NotEqual(t, true, d, "msg")                  // want "use require.False"
			require.NotEqual(t, true, d, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, true, d, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, true, d, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, d == true)                         // want "need to simplify the check"
			require.False(t, d == true, "msg")                  // want "need to simplify the check"
			require.False(t, d == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, d == true, "msg")                 // want "need to simplify the check"
			require.Falsef(t, d == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, true == d)                         // want "need to simplify the check"
			require.False(t, true == d, "msg")                  // want "need to simplify the check"
			require.False(t, true == d, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, true == d, "msg")                 // want "need to simplify the check"
			require.Falsef(t, true == d, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, d == false)                         // want "use require.False"
			require.True(t, d == false, "msg")                  // want "use require.False"
			require.True(t, d == false, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, d == false, "msg")                 // want "use require.Falsef"
			require.Truef(t, d == false, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, false == d)                         // want "use require.False"
			require.True(t, false == d, "msg")                  // want "use require.False"
			require.True(t, false == d, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, false == d, "msg")                 // want "use require.Falsef"
			require.Truef(t, false == d, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, d != true)                         // want "use require.False"
			require.True(t, d != true, "msg")                  // want "use require.False"
			require.True(t, d != true, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, d != true, "msg")                 // want "use require.Falsef"
			require.Truef(t, d != true, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, true != d)                         // want "use require.False"
			require.True(t, true != d, "msg")                  // want "use require.False"
			require.True(t, true != d, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, true != d, "msg")                 // want "use require.Falsef"
			require.Truef(t, true != d, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, d != false)                         // want "need to simplify the check"
			require.False(t, d != false, "msg")                  // want "need to simplify the check"
			require.False(t, d != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, d != false, "msg")                 // want "need to simplify the check"
			require.Falsef(t, d != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, false != d)                         // want "need to simplify the check"
			require.False(t, false != d, "msg")                  // want "need to simplify the check"
			require.False(t, false != d, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, false != d, "msg")                 // want "need to simplify the check"
			require.Falsef(t, false != d, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, !d)                         // want "use require.False"
			require.True(t, !d, "msg")                  // want "use require.False"
			require.True(t, !d, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, !d, "msg")                 // want "use require.Falsef"
			require.Truef(t, !d, "msg with arg %d", 42) // want "use require.Falsef"
		}

		{
			require.Equal(t, *e, false)                         // want "use require.False"
			require.Equal(t, *e, false, "msg")                  // want "use require.False"
			require.Equal(t, *e, false, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, *e, false, "msg")                 // want "use require.Falsef"
			require.Equalf(t, *e, false, "msg with arg %d", 42) // want "use require.Falsef"

			require.Equal(t, false, *e)                         // want "use require.False"
			require.Equal(t, false, *e, "msg")                  // want "use require.False"
			require.Equal(t, false, *e, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, false, *e, "msg")                 // want "use require.Falsef"
			require.Equalf(t, false, *e, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, *e, true)                         // want "use require.False"
			require.NotEqual(t, *e, true, "msg")                  // want "use require.False"
			require.NotEqual(t, *e, true, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, *e, true, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, *e, true, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, true, *e)                         // want "use require.False"
			require.NotEqual(t, true, *e, "msg")                  // want "use require.False"
			require.NotEqual(t, true, *e, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, true, *e, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, true, *e, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, *e == true)                         // want "need to simplify the check"
			require.False(t, *e == true, "msg")                  // want "need to simplify the check"
			require.False(t, *e == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, *e == true, "msg")                 // want "need to simplify the check"
			require.Falsef(t, *e == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, true == *e)                         // want "need to simplify the check"
			require.False(t, true == *e, "msg")                  // want "need to simplify the check"
			require.False(t, true == *e, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, true == *e, "msg")                 // want "need to simplify the check"
			require.Falsef(t, true == *e, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, *e == false)                         // want "use require.False"
			require.True(t, *e == false, "msg")                  // want "use require.False"
			require.True(t, *e == false, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, *e == false, "msg")                 // want "use require.Falsef"
			require.Truef(t, *e == false, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, false == *e)                         // want "use require.False"
			require.True(t, false == *e, "msg")                  // want "use require.False"
			require.True(t, false == *e, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, false == *e, "msg")                 // want "use require.Falsef"
			require.Truef(t, false == *e, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, *e != true)                         // want "use require.False"
			require.True(t, *e != true, "msg")                  // want "use require.False"
			require.True(t, *e != true, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, *e != true, "msg")                 // want "use require.Falsef"
			require.Truef(t, *e != true, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, true != *e)                         // want "use require.False"
			require.True(t, true != *e, "msg")                  // want "use require.False"
			require.True(t, true != *e, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, true != *e, "msg")                 // want "use require.Falsef"
			require.Truef(t, true != *e, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, *e != false)                         // want "need to simplify the check"
			require.False(t, *e != false, "msg")                  // want "need to simplify the check"
			require.False(t, *e != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, *e != false, "msg")                 // want "need to simplify the check"
			require.Falsef(t, *e != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, false != *e)                         // want "need to simplify the check"
			require.False(t, false != *e, "msg")                  // want "need to simplify the check"
			require.False(t, false != *e, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, false != *e, "msg")                 // want "need to simplify the check"
			require.Falsef(t, false != *e, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, !*e)                         // want "use require.False"
			require.True(t, !*e, "msg")                  // want "use require.False"
			require.True(t, !*e, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, !*e, "msg")                 // want "use require.Falsef"
			require.Truef(t, !*e, "msg with arg %d", 42) // want "use require.Falsef"
		}

		{
			require.Equal(t, *f, false)                         // want "use require.False"
			require.Equal(t, *f, false, "msg")                  // want "use require.False"
			require.Equal(t, *f, false, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, *f, false, "msg")                 // want "use require.Falsef"
			require.Equalf(t, *f, false, "msg with arg %d", 42) // want "use require.Falsef"

			require.Equal(t, false, *f)                         // want "use require.False"
			require.Equal(t, false, *f, "msg")                  // want "use require.False"
			require.Equal(t, false, *f, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, false, *f, "msg")                 // want "use require.Falsef"
			require.Equalf(t, false, *f, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, *f, true)                         // want "use require.False"
			require.NotEqual(t, *f, true, "msg")                  // want "use require.False"
			require.NotEqual(t, *f, true, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, *f, true, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, *f, true, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, true, *f)                         // want "use require.False"
			require.NotEqual(t, true, *f, "msg")                  // want "use require.False"
			require.NotEqual(t, true, *f, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, true, *f, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, true, *f, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, *f == true)                         // want "need to simplify the check"
			require.False(t, *f == true, "msg")                  // want "need to simplify the check"
			require.False(t, *f == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, *f == true, "msg")                 // want "need to simplify the check"
			require.Falsef(t, *f == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, true == *f)                         // want "need to simplify the check"
			require.False(t, true == *f, "msg")                  // want "need to simplify the check"
			require.False(t, true == *f, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, true == *f, "msg")                 // want "need to simplify the check"
			require.Falsef(t, true == *f, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, *f == false)                         // want "use require.False"
			require.True(t, *f == false, "msg")                  // want "use require.False"
			require.True(t, *f == false, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, *f == false, "msg")                 // want "use require.Falsef"
			require.Truef(t, *f == false, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, false == *f)                         // want "use require.False"
			require.True(t, false == *f, "msg")                  // want "use require.False"
			require.True(t, false == *f, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, false == *f, "msg")                 // want "use require.Falsef"
			require.Truef(t, false == *f, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, *f != true)                         // want "use require.False"
			require.True(t, *f != true, "msg")                  // want "use require.False"
			require.True(t, *f != true, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, *f != true, "msg")                 // want "use require.Falsef"
			require.Truef(t, *f != true, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, true != *f)                         // want "use require.False"
			require.True(t, true != *f, "msg")                  // want "use require.False"
			require.True(t, true != *f, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, true != *f, "msg")                 // want "use require.Falsef"
			require.Truef(t, true != *f, "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, *f != false)                         // want "need to simplify the check"
			require.False(t, *f != false, "msg")                  // want "need to simplify the check"
			require.False(t, *f != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, *f != false, "msg")                 // want "need to simplify the check"
			require.Falsef(t, *f != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, false != *f)                         // want "need to simplify the check"
			require.False(t, false != *f, "msg")                  // want "need to simplify the check"
			require.False(t, false != *f, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, false != *f, "msg")                 // want "need to simplify the check"
			require.Falsef(t, false != *f, "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, !*f)                         // want "use require.False"
			require.True(t, !*f, "msg")                  // want "use require.False"
			require.True(t, !*f, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, !*f, "msg")                 // want "use require.Falsef"
			require.Truef(t, !*f, "msg with arg %d", 42) // want "use require.Falsef"
		}

		{
			require.Equal(t, g.TheyKilledKenny(), false)                         // want "use require.False"
			require.Equal(t, g.TheyKilledKenny(), false, "msg")                  // want "use require.False"
			require.Equal(t, g.TheyKilledKenny(), false, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, g.TheyKilledKenny(), false, "msg")                 // want "use require.Falsef"
			require.Equalf(t, g.TheyKilledKenny(), false, "msg with arg %d", 42) // want "use require.Falsef"

			require.Equal(t, false, g.TheyKilledKenny())                         // want "use require.False"
			require.Equal(t, false, g.TheyKilledKenny(), "msg")                  // want "use require.False"
			require.Equal(t, false, g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, false, g.TheyKilledKenny(), "msg")                 // want "use require.Falsef"
			require.Equalf(t, false, g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, g.TheyKilledKenny(), true)                         // want "use require.False"
			require.NotEqual(t, g.TheyKilledKenny(), true, "msg")                  // want "use require.False"
			require.NotEqual(t, g.TheyKilledKenny(), true, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, g.TheyKilledKenny(), true, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, g.TheyKilledKenny(), true, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, true, g.TheyKilledKenny())                         // want "use require.False"
			require.NotEqual(t, true, g.TheyKilledKenny(), "msg")                  // want "use require.False"
			require.NotEqual(t, true, g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, true, g.TheyKilledKenny(), "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, true, g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, g.TheyKilledKenny() == true)                         // want "need to simplify the check"
			require.False(t, g.TheyKilledKenny() == true, "msg")                  // want "need to simplify the check"
			require.False(t, g.TheyKilledKenny() == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, g.TheyKilledKenny() == true, "msg")                 // want "need to simplify the check"
			require.Falsef(t, g.TheyKilledKenny() == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, true == g.TheyKilledKenny())                         // want "need to simplify the check"
			require.False(t, true == g.TheyKilledKenny(), "msg")                  // want "need to simplify the check"
			require.False(t, true == g.TheyKilledKenny(), "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, true == g.TheyKilledKenny(), "msg")                 // want "need to simplify the check"
			require.Falsef(t, true == g.TheyKilledKenny(), "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, g.TheyKilledKenny() == false)                         // want "use require.False"
			require.True(t, g.TheyKilledKenny() == false, "msg")                  // want "use require.False"
			require.True(t, g.TheyKilledKenny() == false, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, g.TheyKilledKenny() == false, "msg")                 // want "use require.Falsef"
			require.Truef(t, g.TheyKilledKenny() == false, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, false == g.TheyKilledKenny())                         // want "use require.False"
			require.True(t, false == g.TheyKilledKenny(), "msg")                  // want "use require.False"
			require.True(t, false == g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, false == g.TheyKilledKenny(), "msg")                 // want "use require.Falsef"
			require.Truef(t, false == g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, g.TheyKilledKenny() != true)                         // want "use require.False"
			require.True(t, g.TheyKilledKenny() != true, "msg")                  // want "use require.False"
			require.True(t, g.TheyKilledKenny() != true, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, g.TheyKilledKenny() != true, "msg")                 // want "use require.Falsef"
			require.Truef(t, g.TheyKilledKenny() != true, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, true != g.TheyKilledKenny())                         // want "use require.False"
			require.True(t, true != g.TheyKilledKenny(), "msg")                  // want "use require.False"
			require.True(t, true != g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, true != g.TheyKilledKenny(), "msg")                 // want "use require.Falsef"
			require.Truef(t, true != g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, g.TheyKilledKenny() != false)                         // want "need to simplify the check"
			require.False(t, g.TheyKilledKenny() != false, "msg")                  // want "need to simplify the check"
			require.False(t, g.TheyKilledKenny() != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, g.TheyKilledKenny() != false, "msg")                 // want "need to simplify the check"
			require.Falsef(t, g.TheyKilledKenny() != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, false != g.TheyKilledKenny())                         // want "need to simplify the check"
			require.False(t, false != g.TheyKilledKenny(), "msg")                  // want "need to simplify the check"
			require.False(t, false != g.TheyKilledKenny(), "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, false != g.TheyKilledKenny(), "msg")                 // want "need to simplify the check"
			require.Falsef(t, false != g.TheyKilledKenny(), "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, !g.TheyKilledKenny())                         // want "use require.False"
			require.True(t, !g.TheyKilledKenny(), "msg")                  // want "use require.False"
			require.True(t, !g.TheyKilledKenny(), "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, !g.TheyKilledKenny(), "msg")                 // want "use require.Falsef"
			require.Truef(t, !g.TheyKilledKenny(), "msg with arg %d", 42) // want "use require.Falsef"
		}

		{
			require.Equal(t, boolOp(), false)                         // want "use require.False"
			require.Equal(t, boolOp(), false, "msg")                  // want "use require.False"
			require.Equal(t, boolOp(), false, "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, boolOp(), false, "msg")                 // want "use require.Falsef"
			require.Equalf(t, boolOp(), false, "msg with arg %d", 42) // want "use require.Falsef"

			require.Equal(t, false, boolOp())                         // want "use require.False"
			require.Equal(t, false, boolOp(), "msg")                  // want "use require.False"
			require.Equal(t, false, boolOp(), "msg with arg %d", 42)  // want "use require.False"
			require.Equalf(t, false, boolOp(), "msg")                 // want "use require.Falsef"
			require.Equalf(t, false, boolOp(), "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, boolOp(), true)                         // want "use require.False"
			require.NotEqual(t, boolOp(), true, "msg")                  // want "use require.False"
			require.NotEqual(t, boolOp(), true, "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, boolOp(), true, "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, boolOp(), true, "msg with arg %d", 42) // want "use require.Falsef"

			require.NotEqual(t, true, boolOp())                         // want "use require.False"
			require.NotEqual(t, true, boolOp(), "msg")                  // want "use require.False"
			require.NotEqual(t, true, boolOp(), "msg with arg %d", 42)  // want "use require.False"
			require.NotEqualf(t, true, boolOp(), "msg")                 // want "use require.Falsef"
			require.NotEqualf(t, true, boolOp(), "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, boolOp() == true)                         // want "need to simplify the check"
			require.False(t, boolOp() == true, "msg")                  // want "need to simplify the check"
			require.False(t, boolOp() == true, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, boolOp() == true, "msg")                 // want "need to simplify the check"
			require.Falsef(t, boolOp() == true, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, true == boolOp())                         // want "need to simplify the check"
			require.False(t, true == boolOp(), "msg")                  // want "need to simplify the check"
			require.False(t, true == boolOp(), "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, true == boolOp(), "msg")                 // want "need to simplify the check"
			require.Falsef(t, true == boolOp(), "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, boolOp() == false)                         // want "use require.False"
			require.True(t, boolOp() == false, "msg")                  // want "use require.False"
			require.True(t, boolOp() == false, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, boolOp() == false, "msg")                 // want "use require.Falsef"
			require.Truef(t, boolOp() == false, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, false == boolOp())                         // want "use require.False"
			require.True(t, false == boolOp(), "msg")                  // want "use require.False"
			require.True(t, false == boolOp(), "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, false == boolOp(), "msg")                 // want "use require.Falsef"
			require.Truef(t, false == boolOp(), "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, boolOp() != true)                         // want "use require.False"
			require.True(t, boolOp() != true, "msg")                  // want "use require.False"
			require.True(t, boolOp() != true, "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, boolOp() != true, "msg")                 // want "use require.Falsef"
			require.Truef(t, boolOp() != true, "msg with arg %d", 42) // want "use require.Falsef"

			require.True(t, true != boolOp())                         // want "use require.False"
			require.True(t, true != boolOp(), "msg")                  // want "use require.False"
			require.True(t, true != boolOp(), "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, true != boolOp(), "msg")                 // want "use require.Falsef"
			require.Truef(t, true != boolOp(), "msg with arg %d", 42) // want "use require.Falsef"

			require.False(t, boolOp() != false)                         // want "need to simplify the check"
			require.False(t, boolOp() != false, "msg")                  // want "need to simplify the check"
			require.False(t, boolOp() != false, "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, boolOp() != false, "msg")                 // want "need to simplify the check"
			require.Falsef(t, boolOp() != false, "msg with arg %d", 42) // want "need to simplify the check"

			require.False(t, false != boolOp())                         // want "need to simplify the check"
			require.False(t, false != boolOp(), "msg")                  // want "need to simplify the check"
			require.False(t, false != boolOp(), "msg with arg %d", 42)  // want "need to simplify the check"
			require.Falsef(t, false != boolOp(), "msg")                 // want "need to simplify the check"
			require.Falsef(t, false != boolOp(), "msg with arg %d", 42) // want "need to simplify the check"

			require.True(t, !boolOp())                         // want "use require.False"
			require.True(t, !boolOp(), "msg")                  // want "use require.False"
			require.True(t, !boolOp(), "msg with arg %d", 42)  // want "use require.False"
			require.Truef(t, !boolOp(), "msg")                 // want "use require.Falsef"
			require.Truef(t, !boolOp(), "msg with arg %d", 42) // want "use require.Falsef"
		}

		// Valid requires.
		{
			require.False(t, a)
			require.False(t, a, "msg")
			require.False(t, a, "msg with arg %d", 42)
			require.Falsef(t, a, "msg")
			require.Falsef(t, a, "msg with arg %d", 42)
		}

		{
			require.False(t, b.b)
			require.False(t, b.b, "msg")
			require.False(t, b.b, "msg with arg %d", 42)
			require.Falsef(t, b.b, "msg")
			require.Falsef(t, b.b, "msg with arg %d", 42)
		}

		{
			require.False(t, c)
			require.False(t, c, "msg")
			require.False(t, c, "msg with arg %d", 42)
			require.Falsef(t, c, "msg")
			require.Falsef(t, c, "msg with arg %d", 42)
		}

		{
			require.False(t, d)
			require.False(t, d, "msg")
			require.False(t, d, "msg with arg %d", 42)
			require.Falsef(t, d, "msg")
			require.Falsef(t, d, "msg with arg %d", 42)
		}

		{
			require.False(t, *e)
			require.False(t, *e, "msg")
			require.False(t, *e, "msg with arg %d", 42)
			require.Falsef(t, *e, "msg")
			require.Falsef(t, *e, "msg with arg %d", 42)
		}

		{
			require.False(t, *f)
			require.False(t, *f, "msg")
			require.False(t, *f, "msg with arg %d", 42)
			require.Falsef(t, *f, "msg")
			require.Falsef(t, *f, "msg with arg %d", 42)
		}

		{
			require.False(t, g.TheyKilledKenny())
			require.False(t, g.TheyKilledKenny(), "msg")
			require.False(t, g.TheyKilledKenny(), "msg with arg %d", 42)
			require.Falsef(t, g.TheyKilledKenny(), "msg")
			require.Falsef(t, g.TheyKilledKenny(), "msg with arg %d", 42)
		}

		{
			require.False(t, boolOp())
			require.False(t, boolOp(), "msg")
			require.False(t, boolOp(), "msg with arg %d", 42)
			require.Falsef(t, boolOp(), "msg")
			require.Falsef(t, boolOp(), "msg with arg %d", 42)
		}

	})
}

type withBoolMethod struct{}

func (withBoolMethod) TheyKilledKenny() bool { return false }
